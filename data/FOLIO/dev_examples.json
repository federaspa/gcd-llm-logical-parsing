{
  "0": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 393,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "A five-story building is built in 1915.",
      "question_fol": "∃x (FiveStory(x) ∧ Construct(x, year1915))",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "1": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 393,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "A five-story building is built in 1915.",
      "question_fol": "∃x (FiveStory(x) ∧ Construct(x, year1915))",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "2": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "3": [
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "4": [
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "5": [
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "6": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 394,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "The Blake McFall Company Building is located in Portland, Oregon.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "7": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 394,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "The Blake McFall Company Building is located in Portland, Oregon.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "8": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 394,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "The Blake McFall Company Building is located in Portland, Oregon.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "9": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "10": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "11": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "12": [
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "13": [
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "14": [
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "15": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "16": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "17": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "18": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "19": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "20": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "21": [
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "22": [
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "23": [
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "24": [
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "25": [
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "26": [
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "27": [
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "28": [
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "29": [
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "30": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "31": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "32": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "33": [
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 394,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "The Blake McFall Company Building is located in Portland, Oregon.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "34": [
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 394,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "The Blake McFall Company Building is located in Portland, Oregon.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "35": [
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 394,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "The Blake McFall Company Building is located in Portland, Oregon.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "36": [
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "37": [
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "38": [
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "39": [
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "40": [
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "41": [
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "42": [
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 393,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "A five-story building is built in 1915.",
      "question_fol": "∃x (FiveStory(x) ∧ Construct(x, year1915))",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "43": [
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 393,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "A five-story building is built in 1915.",
      "question_fol": "∃x (FiveStory(x) ∧ Construct(x, year1915))",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "44": [
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 393,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "A five-story building is built in 1915.",
      "question_fol": "∃x (FiveStory(x) ∧ Construct(x, year1915))",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "45": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "46": [
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "48": [
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "49": [
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "50": [
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "51": [
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "52": [
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "53": [
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "54": [
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "55": [
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "56": [
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "57": [
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "58": [
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 394,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "The Blake McFall Company Building is located in Portland, Oregon.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "59": [
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 394,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "The Blake McFall Company Building is located in Portland, Oregon.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "60": [
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 394,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "The Blake McFall Company Building is located in Portland, Oregon.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "61": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "62": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "63": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "64": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "65": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "69": [
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "70": [
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "71": [
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "72": [
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "73": [
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "74": [
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "75": [
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "76": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "77": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "78": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "79": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 394,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "The Blake McFall Company Building is located in Portland, Oregon.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "80": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 394,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "The Blake McFall Company Building is located in Portland, Oregon.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "81": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 394,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "The Blake McFall Company Building is located in Portland, Oregon.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "82": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 394,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "The Blake McFall Company Building is located in Portland, Oregon.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "83": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 394,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "The Blake McFall Company Building is located in Portland, Oregon.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "84": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "85": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "86": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "87": [
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "88": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "89": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "90": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "91": [
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "92": [
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "93": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "94": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "95": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "96": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "97": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "99": [
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "100": [
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "101": [
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "102": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "103": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "104": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "105": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 393,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "A five-story building is built in 1915.",
      "question_fol": "∃x (FiveStory(x) ∧ Construct(x, year1915))",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "106": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 393,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "A five-story building is built in 1915.",
      "question_fol": "∃x (FiveStory(x) ∧ Construct(x, year1915))",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "107": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 393,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "A five-story building is built in 1915.",
      "question_fol": "∃x (FiveStory(x) ∧ Construct(x, year1915))",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "108": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "109": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "110": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "111": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "113": [
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 394,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "The Blake McFall Company Building is located in Portland, Oregon.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 393,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "A five-story building is built in 1915.",
      "question_fol": "∃x (FiveStory(x) ∧ Construct(x, year1915))",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "115": [
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "116": [
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "117": [
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "118": [
    {
      "id": 394,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "The Blake McFall Company Building is located in Portland, Oregon.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "119": [
    {
      "id": 394,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "The Blake McFall Company Building is located in Portland, Oregon.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "120": [
    {
      "id": 394,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "The Blake McFall Company Building is located in Portland, Oregon.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "121": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "122": [
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "123": [
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "124": [
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "126": [
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "127": [
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "128": [
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "129": [
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "130": [
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "131": [
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "132": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "133": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 394,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "The Blake McFall Company Building is located in Portland, Oregon.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "134": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "135": [
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "136": [
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "137": [
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "140": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "141": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "142": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "143": [
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "144": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "145": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "146": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "147": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "148": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "149": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "150": [
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "151": [
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "152": [
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "153": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "154": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "155": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "156": [
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "157": [
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    }
  ],
  "158": [
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "159": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "160": [
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "161": [
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "162": [
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "163": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "164": [
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "165": [
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "166": [
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "167": [
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 393,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "A five-story building is built in 1915.",
      "question_fol": "∃x (FiveStory(x) ∧ Construct(x, year1915))",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "168": [
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 393,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "A five-story building is built in 1915.",
      "question_fol": "∃x (FiveStory(x) ∧ Construct(x, year1915))",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "169": [
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 393,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "A five-story building is built in 1915.",
      "question_fol": "∃x (FiveStory(x) ∧ Construct(x, year1915))",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "170": [
    {
      "id": 394,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "The Blake McFall Company Building is located in Portland, Oregon.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "172": [
    {
      "id": 394,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "The Blake McFall Company Building is located in Portland, Oregon.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "173": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "174": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "175": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "176": [
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "177": [
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "178": [
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "179": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "180": [
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "181": [
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "182": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "183": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "184": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "185": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "186": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "187": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "188": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "189": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "190": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1341,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is an eel.",
      "question_fol": "Eel(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    }
  ],
  "191": [
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "192": [
    {
      "id": 1131,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is a person who jokes about being addicted to caffeine or unaware that caffeine is a drug.",
      "question_fol": "Jokes(rina) ∨ Unaware(rina)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    }
  ],
  "193": [
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 641,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson went to schools located in the United Kingdom for both high school and university.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    }
  ],
  "194": [
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 393,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "A five-story building is built in 1915.",
      "question_fol": "∃x (FiveStory(x) ∧ Construct(x, year1915))",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "195": [
    {
      "id": 21,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "A Czech person wrote a book in 1946.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    },
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 1132,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who jokes about being addicted to caffeine or is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 393,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "A five-story building is built in 1915.",
      "question_fol": "∃x (FiveStory(x) ∧ Construct(x, year1915))",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 20,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "Miroslav Venhoda loved music.",
      "question_fol": "Love(miroslav, music)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "196": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "197": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "198": [
    {
      "id": 642,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson attended university in the United Kingdom.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 1133,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "Rina is either a person who regularly drinks coffee or a person who is unaware that caffeine is a drug.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 1134,
      "story_id": 406,
      "context": [
        "All people who regularly drink coffee are dependent on caffeine.",
        "People either regularly drink coffee or joke about being addicted to caffeine.",
        "No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.",
        "Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.",
        "If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. "
      ],
      "context_fol": [
        "∀x (Drinks(x) → Dependent(x))",
        "∀x (Drinks(x) ⊕ Jokes(x))",
        "∀x (Jokes(x) → ¬Unaware(x))",
        "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))",
        "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"
      ],
      "question": "If Rina is either a person who jokes about being addicted to caffeine and a person who is unaware that caffeine is a drug, or neither a person who jokes about being addicted to caffeine nor a person who is unaware that caffeine is a drug, then Rina jokes about being addicted to caffeine and regularly drinks coffee.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Dependent(x)",
        "Unaware(x)",
        "Jokes(x)",
        "Student(x)",
        "Drinks(x)"
      ]
    },
    {
      "id": 640,
      "story_id": 226,
      "context": [
        "William Dickinson was a British politician who sat in the House of Commons",
        "William Dickinson attended Westminster school for high school and then the University of Edinburgh.",
        "The University of Edinburgh is a university located in the United Kingdom.",
        "William Dickinson supported the Portland Whigs.",
        "People who supported the Portland Whigs did not get a seat in the Parliament."
      ],
      "context_fol": [
        "BritishPolitician(williamdickinson) ∧ SatInHouseOfCommons(williamdickinson)",
        "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)",
        "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)",
        "Supported(williamdickinson, portlandwhigs)",
        "∀x (Supported(x, portlandwhigs) → ¬SeatInParliament(x))"
      ],
      "question": "William Dickinson did not get a seat in the Parliament.",
      "question_fol": "¬SeatInParliament(williamdickinson)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "University(x)",
        "BritishPolitician(x)",
        "Highschool(x)",
        "LocatedIn(x, y)",
        "Attended(x, y)",
        "SeatInParliament(x)",
        "SatInHouseOfCommons(x)",
        "Supported(x, y)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "199": [
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 393,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "A five-story building is built in 1915.",
      "question_fol": "∃x (FiveStory(x) ∧ Construct(x, year1915))",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "200": [
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 393,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "A five-story building is built in 1915.",
      "question_fol": "∃x (FiveStory(x) ∧ Construct(x, year1915))",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "201": [
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 393,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "A five-story building is built in 1915.",
      "question_fol": "∃x (FiveStory(x) ∧ Construct(x, year1915))",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "202": [
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 393,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "A five-story building is built in 1915.",
      "question_fol": "∃x (FiveStory(x) ∧ Construct(x, year1915))",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ],
  "203": [
    {
      "id": 1342,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel is a paper.",
      "question_fol": "Paper(seaEel)",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 393,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "A five-story building is built in 1915.",
      "question_fol": "∃x (FiveStory(x) ∧ Construct(x, year1915))",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 395,
      "story_id": 133,
      "context": [
        "The Blake McFall Company Building is a commercial warehouse listed on the National Register of Historic Places.",
        "The Blake McFall Company Building was added to the National Register of Historic Places in 1990.",
        "The Emmet Building is a five-story building in Portland, Oregon.",
        "The Emmet Building was built in 1915.",
        "The Emmet Building is another name for the Blake McFall Company Building.",
        "John works at the Emmet Building."
      ],
      "context_fol": [
        "∀x (Blake(x) → Building(x))",
        "∀x (Blake(x) → Historic(x, year1990))",
        "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))",
        "∀x (Emmet(x) → Construct(x, year1915))",
        "∀x (Emmet(x) ↔ Blake(x))",
        "∃x (Emmet(x) ∧ Work(john, x))"
      ],
      "question": "John started his current job in 1990.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "C",
      "logic_predicates": [
        "Historic(x, y)",
        "Blake(x)",
        "FiveStory(x)",
        "Work(x, y)",
        "Locate(x, y)",
        "Construct(x, y)",
        "Building(x)",
        "Emmet(x)"
      ]
    },
    {
      "id": 1343,
      "story_id": 463,
      "context": [
        "All eels are fish. ",
        "No fish are plants. ",
        "A thing is either a plant or animal.",
        "Nothing that breathes is paper. ",
        "All animals breathe.",
        "If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal."
      ],
      "context_fol": [
        "∀x  (Eel (x)→  Fish (x))",
        "∀x  (Fish (x)→ ¬ Plant (x))",
        "∀x ( Plant (x) ∨  Animal (x))",
        "∀x  (Breathe (x)→ ¬ Paper (x))",
        "∀x  (Animal (x)→  Breathe (x))",
        " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "
      ],
      "question": "Sea eel breathes or is a paper.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "A",
      "logic_predicates": [
        "Eel(x)",
        "Animal(x)",
        "Fish(x)",
        "Plant(x)",
        "Breathe(x)",
        "Paper(x)"
      ]
    },
    {
      "id": 22,
      "story_id": 8,
      "context": [
        "Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.",
        "Any choral conductor is a musician.",
        "Some musicians love music.",
        "Miroslav Venhoda published a book in 1946 called Method of Studying Gregorian Chant."
      ],
      "context_fol": [
        "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)",
        "∀x (ChoralConductor(x) → Musician(x))",
        "∃x (Musician(x) → Love(x, music))",
        "Book(methodOfStudyingGregorianChant) ∧ Author(miroslav, methodOfStudyingGregorianChant) ∧ Publish(methodOfStudyingGregorianChant, year1946)"
      ],
      "question": "No choral conductor specialized in the performance of Renaissance.",
      "options": [
        "A) True",
        "B) False",
        "C) Uncertain"
      ],
      "answer": "B",
      "logic_predicates": [
        "Publish(x, y)",
        "Book(x)",
        "ChoralConductor(x)",
        "Czech(x)",
        "Love(x, y)",
        "Author(x, y)",
        "Specialize(x, y)",
        "Musician(x)"
      ]
    }
  ]
}