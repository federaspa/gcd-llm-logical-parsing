# Core formula structure
formula ::= simple_expr | unary_expr | binary_expr | quantified_expr | function_call | count_expr | arithmetic_expr

# Simple expressions
simple_expr ::= identifier | number | "true" | "false"

# Unary expressions
unary_expr ::= "Not(" formula ")" | "Abs(" formula ")"

# Binary expressions
binary_expr ::= "And(" formula "," formula ")" | "Or(" formula "," formula ")" | "Xor(" formula "," formula ")" | "Implies(" formula "," formula ")"

# Arithmetic expressions
arithmetic_expr ::= formula arith_op formula
arith_op ::= "+" | "-" | "*" | "/" | "==" | "!=" | "<" | "<=" | ">" | ">="

# Quantified expressions
quantified_expr ::= quantifier "[" var_decl_list "]" "," formula ")"
quantifier ::= "ForAll(" | "Exists("
var_decl_list ::= var_decl ("," var_decl)*
var_decl ::= identifier ":" identifier

# Function calls
function_call ::= identifier "(" arg_list ")"
arg_list ::= formula ("," formula)*

# Count expressions
count_expr ::= "Count([" var_decl_list "]" "," formula ")" | "Count([" var_decl_list "]" "," formula ")" arith_op number

# Base elements
identifier ::= [a-zA-Z][a-zA-Z0-9_]*
number ::= [0-9]+