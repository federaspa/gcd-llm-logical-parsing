You are tasked with generating a Context Free Grammar (CFG) tailored to a specific dataset and solver for converting natural language problems into logical formulas. This grammar will be used in Grammar Constrained decoding by another LLM. Follow these instructions carefully to complete the task.

First, review the dataset of natural language problems, provided as an attachment.

The logical notation to be used is:

<logical_notation>

ASP

</logical_notation>

The solver to be used is:

<solver>

{{SOLVER}}

</solver>

To guide you in creating an appropriate CFG, here are two example grammars:

Example CFG for First Order Logic (FOL):

<fol_cfg_example>

{{FOL_CFG_EXAMPLE}}

</fol_cfg_example>

Example CFG for Answer Set Programming (ASP):

<asp_cfg_example>

{{ASP_CFG_EXAMPLE}}

</asp_cfg_example>

Now, follow these steps to create a CFG tailored to the dataset and solver:

1. Analyze the dataset:

- Identify common patterns and structures in the natural language problems.

- Note any specific terminology or concepts that appear frequently.

- Recognize the types of logical relationships expressed in the problems.

2. Consider the requirements of the logical notation and solver:

- Ensure that your grammar can express all necessary logical constructs.

- Include rules that align with the syntax expected by the solver.

3. Create the CFG:

- Start with high-level rules that represent the overall structure of the logical formulas.

- Define rules for logical operators, quantifiers, and other notation-specific elements.

- Include rules for common patterns identified in the dataset.

- Create rules for handling variables, constants, and predicates.

- Ensure that the grammar can generate well-formed formulas in the specified logical notation.

4. Tailor the grammar:

- Add specific rules or terminals that correspond to frequent terms or concepts in the dataset.

- Adjust the grammar to accommodate any unique requirements of the solver.

5. Verify coverage:

- Ensure that your grammar can generate formulas that cover all types of problems in the dataset.

- Check that the grammar aligns with the syntax expected by the solver.

Output your CFG using the following format:

<cfg>

[Your Context Free Grammar here]

</cfg>

Remember to make your grammar as specific as possible to the given dataset and solver while maintaining the ability to generate a wide range of logical formulas. Avoid overly general rules that might lead to the generation of irrelevant or incorrect formulas.

Now, based on the instructions above, please generate a Context Free Grammar tailored to the provided dataset and solver. Include a brief explanation of your design choices before the grammar itself.