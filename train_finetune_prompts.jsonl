{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All people who regularly drink coffee are dependent on caffeine.\n\nSketch First Order Logic Statement: ∀x (Drinks(x) → Dependent(x))\n\nPredicates:\n\"\"\"\nDependent(x)\nUnaware(x)\nJokes(x)\nStudent(x)\nDrinks(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Drinks(x) → Dependent(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No one who jokes about being addicted to caffeine is unaware that caffeine is a drug.\n\nSketch First Order Logic Statement:  (Jokes(x) → ¬Unaware(x))\n\nPredicates:\n\"\"\"\nDependent(x)\nUnaware(x)\nJokes(x)\nStudent(x)\nDrinks(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Jokes(x) → ¬Unaware(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Rina is either a student and unaware that caffeine is a drug, or neither a student nor unaware that caffeine is a drug.\n\nSketch First Order Logic Statement: (Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))\n\nPredicates:\n\"\"\"\nDependent(x)\nUnaware(x)\nJokes(x)\nStudent(x)\nDrinks(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "(Student(rina) ∧ Unaware(rina)) ⊕ ¬(Student(rina) ∨ Unaware(rina))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Rina is not a person dependent on caffeine and a student, then Rina is either a person dependent on caffeine and a student, or neither a person dependent on caffeine nor a student. \n\nSketch First Order Logic Statement: ¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependentrina) ∨ Student(rina)\n\nPredicates:\n\"\"\"\nDependent(x)\nUnaware(x)\nJokes(x)\nStudent(x)\nDrinks(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(Dependent(rina) ∧ Student(rina)) → (Dependent(rina) ∧ Student(rina)) ⊕ ¬(Dependent(rina) ∨ Student(rina))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some musicians love music.\n\nSketch First Order Logic Statement: ∃(x (Musici)an(x) → Love(x, music))\n\nPredicates:\n\"\"\"\nPublish(x, y)\nBook(x)\nChoralConductor(x)\nCzech(x)\nLove(x, y)\nAuthor(x, y)\nSpecialize(x, y)\nMusician(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Musician(x) → Love(x, music))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Miroslav Venhoda was a Czech choral conductor who specialized in the performance of Renaissance and Baroque music.\n\nSketch First Order Logic Statement: Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)\n\nPredicates:\n\"\"\"\nPublish(x, y)\nBook(x)\nChoralConductor(x)\nCzech(x)\nLove(x, y)\nAuthor(x, y)\nSpecialize(x, y)\nMusician(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Czech(miroslav) ∧ ChoralConductor(miroslav) ∧ Specialize(miroslav, renaissance) ∧ Specialize(miroslav, baroque)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Any choral conductor is a musician.\n\nSketch First Order Logic Statement:  (ChoralConductor(x) → ∀x  Musician(x))\n\nPredicates:\n\"\"\"\nPublish(x, y)\nBook(x)\nChoralConductor(x)\nCzech(x)\nLove(x, y)\nAuthor(x, y)\nSpecialize(x, y)\nMusician(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (ChoralConductor(x) → Musician(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All eels are fish. \n\nSketch First Order Logic Statement: ∀x  (Eel (x)→  Fish (x))\n\nPredicates:\n\"\"\"\nEel(x)\nAnimal(x)\nFish(x)\nPlant(x)\nBreathe(x)\nPaper(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x  (Eel (x)→  Fish (x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All eels are fish. \n\nSketch First Order Logic Statement: ∀x  (Eel (x)→  Fish (x))\n\nPredicates:\n\"\"\"\nEel(x)\nAnimal(x)\nFish(x)\nPlant(x)\nBreathe(x)\nPaper(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x  (Eel (x)→  Fish (x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a sea eel is either an eel or a plant, then a sea eel is an eel or an animal.\n\nSketch First Order Logic Statement:  Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) \n\nPredicates:\n\"\"\"\nEel(x)\nAnimal(x)\nFish(x)\nPlant(x)\nBreathe(x)\nPaper(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " Eel (seaEel) ⊕ Plant (seaEel) → Eel (seaEel) ∨ Animal (seaEel) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Blake McFall Company Building was added to the National Register of Historic Places in 1990.\n\nSketch First Order Logic Statement: ∀x (Blake(x) → Historic(x, year1990))\n\nPredicates:\n\"\"\"\nHistoric(x, y)\nBlake(x)\nFiveStory(x)\nWork(x, y)\nLocate(x, y)\nConstruct(x, y)\nBuilding(x)\nEmmet(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Blake(x) → Historic(x, year1990))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Emmet Building is a five-story building in Portland, Oregon.\n\nSketch First Order Logic Statement: ∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))\n\nPredicates:\n\"\"\"\nHistoric(x, y)\nBlake(x)\nFiveStory(x)\nWork(x, y)\nLocate(x, y)\nConstruct(x, y)\nBuilding(x)\nEmmet(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Emmet(x) → Building(x) ∧ FiveStory(x) ∧ Locate(x, portland))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Emmet Building was built in 1915.\n\nSketch First Order Logic Statement:  (Emmet(x) → Construct(x, year1915))\n\nPredicates:\n\"\"\"\nHistoric(x, y)\nBlake(x)\nFiveStory(x)\nWork(x, y)\nLocate(x, y)\nConstruct(x, y)\nBuilding(x)\nEmmet(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Emmet(x) → Construct(x, year1915))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: William Dickinson attended Westminster school for high school and then the University of Edinburgh.\n\nSketch First Order Logic Statement: Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)\n\nPredicates:\n\"\"\"\nUniversity(x)\nBritishPolitician(x)\nHighschool(x)\nLocatedIn(x, y)\nAttended(x, y)\nSeatInParliament(x)\nSatInHouseOfCommons(x)\nSupported(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Attended(williamdickinson, westminster) ∧ Highschool(westminster) ∧ Attended(williamdickinson, universityofedinburgh)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The University of Edinburgh is a university located in the United Kingdom.\n\nSketch First Order Logic Statement: LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)\n\nPredicates:\n\"\"\"\nUniversity(x)\nBritishPolitician(x)\nHighschool(x)\nLocatedIn(x, y)\nAttended(x, y)\nSeatInParliament(x)\nSatInHouseOfCommons(x)\nSupported(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The University of Edinburgh is a university located in the United Kingdom.\n\nSketch First Order Logic Statement: LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)\n\nPredicates:\n\"\"\"\nUniversity(x)\nBritishPolitician(x)\nHighschool(x)\nLocatedIn(x, y)\nAttended(x, y)\nSeatInParliament(x)\nSatInHouseOfCommons(x)\nSupported(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "LocatedIn(universityofedinburgh, unitedkingdom) ∧ University(universityofedinburgh)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: William Dickinson supported the Portland Whigs.\n\nSketch First Order Logic Statement: Supported(williamdickinson, portlandwhigs)\n\nPredicates:\n\"\"\"\nUniversity(x)\nBritishPolitician(x)\nHighschool(x)\nLocatedIn(x, y)\nAttended(x, y)\nSeatInParliament(x)\nSatInHouseOfCommons(x)\nSupported(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Supported(williamdickinson, portlandwhigs)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Katya knows LanguageA. \n\nSketch First Order Logic Statement: ¬Communicate(katya, danil)\n\nPredicates:\n\"\"\"\nKnow(x, y)\nCommunicate(x, y)\nUniversalLanguage(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬Communicate(katya, danil)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some customers go to cinemas every week\n\nSketch First Order Logic Statement: ∃x CinemaEveryWeek(x)\n\nPredicates:\n\"\"\"\nAMC(x)\nWatchTVInCinema(x)\nCinemaEveryWeek(x)\nHBO(x)\nPreferTVSeries(x)\nThreeMovies(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (CinemaEveryWeek(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some customers go to cinemas every week\n\nSketch First Order Logic Statement: ∃x (CinemaEveryWeek(x))\n\nPredicates:\n\"\"\"\nAMC(x)\nWatchTVInCinema(x)\nCinemaEveryWeek(x)\nHBO(x)\nPreferTVSeries(x)\nThreeMovies(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (CinemaEveryWeek(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Customers either subscribe to AMC service or HBO service. \n\nSketch First Order Logic Statement:  (AMC(x) ∨ HBO(x))\n\nPredicates:\n\"\"\"\nAMC(x)\nWatchTVInCinema(x)\nCinemaEveryWeek(x)\nHBO(x)\nPreferTVSeries(x)\nThreeMovies(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (AMC(x) ∨ HBO(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All customers who are subscribed to AMC List are available to watch 3 movies every week without any additional fees. \n\nSketch First Order Logic Statement: ∀x (AMC(x) → Thr(eeMovies(x)))\n\nPredicates:\n\"\"\"\nAMC(x)\nWatchTVInCinema(x)\nCinemaEveryWeek(x)\nHBO(x)\nPreferTVSeries(x)\nThreeMovies(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (AMC(x) → ThreeMovies(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some customers go to cinemas every week\n\nSketch First Order Logic Statement: ∃x (CinemaEveryWeek(x))\n\nPredicates:\n\"\"\"\nAMC(x)\nWatchTVInCinema(x)\nCinemaEveryWeek(x)\nHBO(x)\nPreferTVSeries(x)\nThreeMovies(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (CinemaEveryWeek(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: In La Liga 2021-2022, Real Madrid recieves 86 points and Barcelon recieves 73 points.\n\nSketch First Order Logic Statement: MorePoints(realMadrid, barcelona)\n\nPredicates:\n\"\"\"\nLaLiga(x)\nMorePointsInGameBetween(x, y)\nHigherRank(x, y)\nMorePoints(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "MorePoints(realMadrid, barcelona)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: In La Liga 2021-2022, Real Madrid and Barcelona both recieve 3 points from the games between them.\n\nSketch First Order Logic Statement: ¬MorePointsInGameBetween(realMadrid, barcelona) ∧ ¬MorePointsInGameBetween(barcelona, realMadrid)\n\nPredicates:\n\"\"\"\nLaLiga(x)\nMorePointsInGameBetween(x, y)\nHigherRank(x, y)\nMorePoints(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬MorePointsInGameBetween(realMadrid, barcelona) ∧ ¬MorePointsInGameBetween(barcelona, realMadrid)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Tom is a citizen of Lawton Park.\n\nSketch First Order Logic Statement: Citizenof(tom, lawtonPark)\n\nPredicates:\n\"\"\"\nUsezipcode(x, y)\nNeighbourhoodin(x, y)\nCitizenof(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Citizenof(tom, lawtonPark)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All citizens of Lawton Park use the zip code 98199. \n\nSketch First Order Logic Statement: ∀x (Citizenof((x,) lawtonPark) → Usezipcode(x, number98199))\n\nPredicates:\n\"\"\"\nUsezipcode(x, y)\nNeighbourhoodin(x, y)\nCitizenof(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Citizenof(x, lawtonPark) → Usezipcode(x, number98199))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Daniel uses the zip code 98199. \n\nSketch First Order Logic Statement: Usezipcode(dani(el, number981)99)\n\nPredicates:\n\"\"\"\nUsezipcode(x, y)\nNeighbourhoodin(x, y)\nCitizenof(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Usezipcode(daniel, number98199)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All citizens of Lawton Park use the zip code 98199. \n\nSketch First Order Logic Statement: ∀x (Citizenofx, lawtonPark) → Usezipcode(x, number98199)\n\nPredicates:\n\"\"\"\nUsezipcode(x, y)\nNeighbourhoodin(x, y)\nCitizenof(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Citizenof(x, lawtonPark) → Usezipcode(x, number98199))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013.\n\nSketch First Order Logic Statement: IsLegislatortiffanyTAlston\n\nPredicates:\n\"\"\"\nSuspended(x)\nIsLegislator(x)\nStealsFunds(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "IsLegislator(tiffanyTAlston)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a legislator is found guilty of stealing government funds, they will be suspended from office.\n\nSketch First Order Logic Statement: ∀x IsLegislator(x ∧ StealsFunds(x) → Suspended(x))\n\nPredicates:\n\"\"\"\nSuspended(x)\nIsLegislator(x)\nStealsFunds(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (IsLegislator(x) ∧ StealsFunds(x) → Suspended(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Tiffany T. Alston was a legislator in Maryland's House of Delegates from 2011 to 2013.\n\nSketch First Order Logic Statement: IsLegislator(tiffanyTAlston)\n\nPredicates:\n\"\"\"\nSuspended(x)\nIsLegislator(x)\nStealsFunds(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "IsLegislator(tiffanyTAlston)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Stonefish is a fish.\n\nSketch First Order Logic Statement: Fish(stonefish)\n\nPredicates:\n\"\"\"\nSting(x, y)\nCauseDeath(x)\nUseAntivenom(x)\nTreated(x)\nFish(x)\nStepOn(x, y)\nApplyHeat(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Fish(stonefish)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Stonefish stings cause death if not treated.\n\nSketch First Order Logic Statement: ∀x (Sting(stonefish, x) ∧ (¬Treated()x) → CauseDeath(x))\n\nPredicates:\n\"\"\"\nSting(x, y)\nCauseDeath(x)\nUseAntivenom(x)\nTreated(x)\nFish(x)\nStepOn(x, y)\nApplyHeat(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Sting(stonefish, x) ∧ ¬Treated(x) → CauseDeath(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: It stings to step on a stonefish.\n\nSketch First Order Logic Statement: ∀x (StepOn(stonefish, x) → Sting(stonefish, x))\n\nPredicates:\n\"\"\"\nSting(x, y)\nCauseDeath(x)\nUseAntivenom(x)\nTreated(x)\nFish(x)\nStepOn(x, y)\nApplyHeat(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (StepOn(stonefish, x) → Sting(stonefish, x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All monitors in the library are produced by AOC. \n\nSketch First Order Logic Statement: ∀x (Libraryx) → AOC(x)\n\nPredicates:\n\"\"\"\nLG(x)\nAOC(x)\nTypeC(x)\nLibrary(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Library(x) → AOC(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: L-2021 is either in the library or has a type-c port.\n\nSketch First Order Logic Statement: Library(l2021) ⊕ TypeC(l2021) \n\nPredicates:\n\"\"\"\nLG(x)\nAOC(x)\nTypeC(x)\nLibrary(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Library(l2021) ⊕ TypeC(l2021) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If the monitor has a type-c port, then it is not produced by AOC.\n\nSketch First Order Logic Statement: ∀x (TypeC(x() → ¬AOC(x)))\n\nPredicates:\n\"\"\"\nLG(x)\nAOC(x)\nTypeC(x)\nLibrary(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (TypeC(x) → ¬AOC(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If the monitor has a type-c port, then it is not produced by AOC.\n\nSketch First Order Logic Statement: ∀x (TypeC(x) → ¬AOCx)\n\nPredicates:\n\"\"\"\nLG(x)\nAOC(x)\nTypeC(x)\nLibrary(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (TypeC(x) → ¬AOC(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some monitors produced by LG have a type-c port.\n\nSketch First Order Logic Statement: ∃x (L(G(x) ∧ Typ)eC(x))\n\nPredicates:\n\"\"\"\nLG(x)\nAOC(x)\nTypeC(x)\nLibrary(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (LG(x) ∧ TypeC(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people have busy schedules without time to cook, then they go to fast food places often.\n\nSketch First Order Logic Statement:  (Busy(x) → FastFood(x))\n\nPredicates:\n\"\"\"\nBusy(x)\nVegetarian(x)\nFastFood(x)\nHamburgers(x)\nMeat(x)\nConscious(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Busy(x) → FastFood(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Jeremy does not both go to fast food places often and is conscious about the environment or their health, then he goes to fast food places often.\n\nSketch First Order Logic Statement: ¬(FastFood(jeremy) ∧ Conscious(jeremy)) → FastFood(jeremy)\n\nPredicates:\n\"\"\"\nBusy(x)\nVegetarian(x)\nFastFood(x)\nHamburgers(x)\nMeat(x)\nConscious(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(FastFood(jeremy) ∧ Conscious(jeremy)) → FastFood(jeremy)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people have busy schedules without time to cook, then they go to fast food places often.\n\nSketch First Order Logic Statement:  (Busy(x) → ∀x  FastFood(x))\n\nPredicates:\n\"\"\"\nBusy(x)\nVegetarian(x)\nFastFood(x)\nHamburgers(x)\nMeat(x)\nConscious(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Busy(x) → FastFood(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Sam uses a Mac, he will play a song.\n\nSketch First Order Logic Statement:  ∃x (Use(sam, mac) → (Song(x) ∧ Play(sam, x)))\n\nPredicates:\n\"\"\"\nUse(x, y)\nPlay(x, y)\nProject(x)\nWrittenIn(x, y)\nBe(x, y)\nDo(x, y)\nSong(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∃x (Use(sam, mac) → (Song(x) ∧ Play(sam, x)))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Sam does a project written in Python, he will not use a Mac.\n\nSketch First Order Logic Statement:  ∀x (Project(x) ∧ WrittenIn(x, python) ∧ Do(sam, x) → ¬Use(sam, mac))\n\nPredicates:\n\"\"\"\nUse(x, y)\nPlay(x, y)\nProject(x)\nWrittenIn(x, y)\nBe(x, y)\nDo(x, y)\nSong(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (Project(x) ∧ WrittenIn(x, python) ∧ Do(sam, x) → ¬Use(sam, mac))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a song is not \"Perfect\", Sam will never play it.\n\nSketch First Order Logic Statement:  ∀x (¬Be(x, perfect) → ¬Play(sam, x))\n\nPredicates:\n\"\"\"\nUse(x, y)\nPlay(x, y)\nProject(x)\nWrittenIn(x, y)\nBe(x, y)\nDo(x, y)\nSong(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (¬Be(x, perfect) → ¬Play(sam, x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some pets are rabbits.\n\nSketch First Order Logic Statement:  (Pet(x) ∧ Reptile(x))\n\nPredicates:\n\"\"\"\nHasFur(x)\nReptile(x)\nPet(x)\nRabbit(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Pet(x) ∧ Reptile(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All software is programmed. \n\nSketch First Order Logic Statement: ∀x (Software(x) → Program(x))\n\nPredicates:\n\"\"\"\nProgram(x)\nGood(x)\nApp(x)\nInstagram(x)\nInteresting(x)\nYoutube(x)\nEntertainment(x)\nSoftware(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Software(x) → Program(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All YouTube-related applications are video applications. \n\nSketch First Order Logic Statement:  (Youtube(x) → App(x))\n\nPredicates:\n\"\"\"\nProgram(x)\nGood(x)\nApp(x)\nInstagram(x)\nInteresting(x)\nYoutube(x)\nEntertainment(x)\nSoftware(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Youtube(x) → App(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: TikTok is not good.\n\nSketch First Order Logic Statement: ¬Goodtiktok\n\nPredicates:\n\"\"\"\nProgram(x)\nGood(x)\nApp(x)\nInstagram(x)\nInteresting(x)\nYoutube(x)\nEntertainment(x)\nSoftware(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬Good(tiktok)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: An APP is either related to YouTube or Instagram.\n\nSketch First Order Logic Statement: ∀x (Youtube(x) ∨ Instagram(x))\n\nPredicates:\n\"\"\"\nProgram(x)\nGood(x)\nApp(x)\nInstagram(x)\nInteresting(x)\nYoutube(x)\nEntertainment(x)\nSoftware(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Youtube(x) ∨ Instagram(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Located within Elliot County, Ordinary is on Kentucky Route 32.\n\nSketch First Order Logic Statement: In(ordinary, elliotcounty) ∧ On(ordinary, kentuckyroute32)\n\nPredicates:\n\"\"\"\nUnincorporatedCommunity(x)\nOn(x, y)\nIn(x, y)\nNorthwestOf(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "In(ordinary, elliotcounty) ∧ On(ordinary, kentuckyroute32)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Ordinary is an unincorporated community.\n\nSketch First Order Logic Statement: UnincorporatedCommunity(ordinary)\n\nPredicates:\n\"\"\"\nUnincorporatedCommunity(x)\nOn(x, y)\nIn(x, y)\nNorthwestOf(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "UnincorporatedCommunity(ordinary)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Susan is a Harvard student, then she is a young adult.\n\nSketch First Order Logic Statement: HarvardStudent(susan) → YoungAdult(susan)\n\nPredicates:\n\"\"\"\nYoungAdult(x)\nYaleStudent(x)\nCollegeStudent(x)\nDiligent(x)\nHarvardStudent(x)\nGoOnDiet(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "HarvardStudent(susan) → YoungAdult(susan)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Susan is a Harvard student, then she is a young adult.\n\nSketch First Order Logic Statement: HarvardStudent(susan) → YoungAdul(t(susa)n)\n\nPredicates:\n\"\"\"\nYoungAdult(x)\nYaleStudent(x)\nCollegeStudent(x)\nDiligent(x)\nHarvardStudent(x)\nGoOnDiet(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "HarvardStudent(susan) → YoungAdult(susan)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Someone is either a Yale student or a Harvard student.\n\nSketch First Order Logic Statement: ∀x (YaleStudent(x) ∨ HarvardStudent(x))\n\nPredicates:\n\"\"\"\nYoungAdult(x)\nYaleStudent(x)\nCollegeStudent(x)\nDiligent(x)\nHarvardStudent(x)\nGoOnDiet(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (YaleStudent(x) ∨ HarvardStudent(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Vic DiCara plays guitar and bass.\n\nSketch First Order Logic Statement: Play(vicdicara, guitar) ∧ Play(vicdicara, bass)\n\nPredicates:\n\"\"\"\nBand(x, y)\nPlay(x, y)\nMusic(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Play(vicdicara, guitar) ∧ Play(vicdicara, bass)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Vic DiCara plays guitar and bass.\n\nSketch First Order Logic Statement: Play(vicdicara, guitar) ∧ Play(vicdicara, bass)\n\nPredicates:\n\"\"\"\nBand(x, y)\nPlay(x, y)\nMusic(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Play(vicdicara, guitar) ∧ Play(vicdicara, bass)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Amy is good at sports or Amy is an Olympic gold medal winner.\n\nSketch First Order Logic Statement: GoodAtSports(amy) ∨ OlympicGoldMedalWinner(amy)\n\nPredicates:\n\"\"\"\nAthlete(x)\nScientist(x)\nNobelLaureate(x)\nOlympicGoldMedalWinner(x)\nGoodAtSports(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "GoodAtSports(amy) ∨ OlympicGoldMedalWinner(amy)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No scientists are good at sports.\n\nSketch First Order Logic Statement: ∀x (Scient(ist(x) )→ ¬GoodAtSports(x))\n\nPredicates:\n\"\"\"\nAthlete(x)\nScientist(x)\nNobelLaureate(x)\nOlympicGoldMedalWinner(x)\nGoodAtSports(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Scientist(x) → ¬GoodAtSports(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All Olympic gold medal winners are good athletes.\n\nSketch First Order Logic Statement: ∀x (OlympicGoldMedalWinner(x) → Athlete(x))\n\nPredicates:\n\"\"\"\nAthlete(x)\nScientist(x)\nNobelLaureate(x)\nOlympicGoldMedalWinner(x)\nGoodAtSports(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (OlympicGoldMedalWinner(x) → Athlete(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No fruits that are beneficial to people are on a warning list.\n\nSketch First Order Logic Statement:  (Benefit(x) → ∀x  ¬WarningList(x))\n\nPredicates:\n\"\"\"\nApple(x)\nVC(x)\nBenefit(x)\nWarningList(x)\nRedFruit(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Benefit(x) → ¬WarningList(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No fruits that are beneficial to people are on a warning list.\n\nSketch First Order Logic Statement:  (Benefit(x) → ∀x  ¬WarningList(x))\n\nPredicates:\n\"\"\"\nApple(x)\nVC(x)\nBenefit(x)\nWarningList(x)\nRedFruit(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Benefit(x) → ¬WarningList(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If K is not beneficial to people and also not an apple, then it is a fruit with the color red.\n\nSketch First Order Logic Statement: ¬(Benefit(k) ∧ Apple(k)) → (RedF)ruit(k)\n\nPredicates:\n\"\"\"\nApple(x)\nVC(x)\nBenefit(x)\nWarningList(x)\nRedFruit(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(Benefit(k) ∧ Apple(k)) → RedFruit(k)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All fruits with the color red contain a large amount of vitamin C.\n\nSketch First Order Logic Statement: ∀x RedFruit(x → VC(x))\n\nPredicates:\n\"\"\"\nApple(x)\nVC(x)\nBenefit(x)\nWarningList(x)\nRedFruit(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (RedFruit(x) → VC(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All fruits with the color red contain a large amount of vitamin C.\n\nSketch First Order Logic Statement:  (RedFruit(x) → VC(x))\n\nPredicates:\n\"\"\"\nApple(x)\nVC(x)\nBenefit(x)\nWarningList(x)\nRedFruit(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (RedFruit(x) → VC(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: James has a car or works at Meta.\n\nSketch First Order Logic Statement: HaveCars(james) ∨ Meta(james)\n\nPredicates:\n\"\"\"\nHighIncome(x)\nMeta(x)\nHaveCars(x)\nBus(x)\nStudent(x)\nDrive(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "HaveCars(james) ∨ Meta(james)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No students drive to their destination. \n\nSketch First Order Logic Statement:  (Student(x) → ¬Drive(x))\n\nPredicates:\n\"\"\"\nHighIncome(x)\nMeta(x)\nHaveCars(x)\nBus(x)\nStudent(x)\nDrive(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Student(x) → ¬Drive(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a person has a high income, then he/she will not take a bus to their destination.\n\nSketch First Order Logic Statement:  (HighIncome(x) → ¬Bus(x))\n\nPredicates:\n\"\"\"\nHighIncome(x)\nMeta(x)\nHaveCars(x)\nBus(x)\nStudent(x)\nDrive(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (HighIncome(x) → ¬Bus(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Everyone who has a car will choose to drive to their destination. \n\nSketch First Order Logic Statement:  (HaveCars(x) → ∀x  Drive(x))\n\nPredicates:\n\"\"\"\nHighIncome(x)\nMeta(x)\nHaveCars(x)\nBus(x)\nStudent(x)\nDrive(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (HaveCars(x) → Drive(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People will either take a bus or drive to their destination. \n\nSketch First Order Logic Statement: ∀x (Bus(x) ∨ Drivex)\n\nPredicates:\n\"\"\"\nHighIncome(x)\nMeta(x)\nHaveCars(x)\nBus(x)\nStudent(x)\nDrive(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Bus(x) ∨ Drive(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Everyone working at Meta has a high income. \n\nSketch First Order Logic Statement: ∀x (Meta(x) → HighIncome(x))\n\nPredicates:\n\"\"\"\nHighIncome(x)\nMeta(x)\nHaveCars(x)\nBus(x)\nStudent(x)\nDrive(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Meta(x) → HighIncome(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Students either go to the park or go to the movies. \n\nSketch First Order Logic Statement: ∀x (Park(x) ⊕ Movies(x))\n\nPredicates:\n\"\"\"\nNature(x)\nMovies(x)\nNoClass(x)\nSummerCamp(x)\nPark(x)\nFreeTime(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Park(x) ⊕ Movies(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All students not in summer camp do not have class during the weekend. \n\nSketch First Order Logic Statement: ∀x (SummerCamp(x) → NoClass(x))\n\nPredicates:\n\"\"\"\nNature(x)\nMovies(x)\nNoClass(x)\nSummerCamp(x)\nPark(x)\nFreeTime(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (SummerCamp(x) → NoClass(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No television stars are certified public accountants.\n\nSketch First Order Logic Statement:  (TelevisionStar(x) → ∀x  ¬CertifiedPublicAccoutant(x))\n\nPredicates:\n\"\"\"\nGoodBusinessSense(x)\nTelevisionStar(x)\nCertifiedPublicAccoutant(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (TelevisionStar(x) → ¬CertifiedPublicAccoutant(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No student good at planning is awarded the Dean's List. \n\nSketch First Order Logic Statement:  (Planning(x) → ∀x  ¬Award(x))\n\nPredicates:\n\"\"\"\nMath(x)\nPlanning(x)\nExperiment(x)\nChemistry(x)\nAward(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Planning(x) → ¬Award(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All students good at chemistry enjoy conducting experiments. \n\nSketch First Order Logic Statement:  (Chemistry(x) → ∀x  Experiment(x))\n\nPredicates:\n\"\"\"\nMath(x)\nPlanning(x)\nExperiment(x)\nChemistry(x)\nAward(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Chemistry(x) → Experiment(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No student good at planning is awarded the Dean's List. \n\nSketch First Order Logic Statement:  (Planning(x) → ∀x  ¬Award(x))\n\nPredicates:\n\"\"\"\nMath(x)\nPlanning(x)\nExperiment(x)\nChemistry(x)\nAward(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Planning(x) → ¬Award(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All students that enjoy conducting experiments are good at planning. \n\nSketch First Order Logic Statement:  (Experiment(x) → Planning(x))\n\nPredicates:\n\"\"\"\nMath(x)\nPlanning(x)\nExperiment(x)\nChemistry(x)\nAward(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Experiment(x) → Planning(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A Leetode problem is either easy or hard.\n\nSketch First Order Logic Statement: ∀x (Easy(x) ⊕ Hard(x))\n\nPredicates:\n\"\"\"\nEasy(x)\nRecommended(x)\nHard(x)\nStarred(x)\nLowerAC(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Easy(x) ⊕ Hard(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A Leetode problem is either easy or hard.\n\nSketch First Order Logic Statement: ∀x (Easy(x) ⊕ Hard(x))\n\nPredicates:\n\"\"\"\nEasy(x)\nRecommended(x)\nHard(x)\nStarred(x)\nLowerAC(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Easy(x) ⊕ Hard(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All Leetcode problems that are recommended to novices are easy. \n\nSketch First Order Logic Statement: ∀x (Recommended(x) → Easy(x))\n\nPredicates:\n\"\"\"\nEasy(x)\nRecommended(x)\nHard(x)\nStarred(x)\nLowerAC(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Recommended(x) → Easy(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: For someone who does not own a car to drive somewhere, they must either borrow a car or rent a car.\n\nSketch First Order Logic Statement: ∀x ∀y (¬Own(x, car) ∧ DriveTo(x, y) → Borrow(x, car) ⊕ Rent(x, car))\n\nPredicates:\n\"\"\"\nSpend(x, y)\nBorrow(x, y)\nRent(x, y)\nDriveTo(x, y)\nOwn(x, y)\nGoesTo(x, y)\nCamping(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (¬Own(x, car) ∧ DriveTo(x, y) → Borrow(x, car) ⊕ Rent(x, car))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Carol is not both a pre-teen or other young child and attends weddings, then Carol is not getting married or has friends who are getting married.  \n\nSketch First Order Logic Statement: ¬(PreTeen(Carol) ∧ Weddings(Carol)) → ¬GettingMarried(Carol)\n\nPredicates:\n\"\"\"\nCelebrating(x)\nOutgoing(x)\nGettingMarried(x)\nWeddings(x)\nLargeGathering(x)\nPreTeen(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(PreTeen(Carol) ∧ Weddings(Carol)) → ¬GettingMarried(Carol)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people are fond of large organized group functions, then they enjoy celebrating life milestone events with other people.\n\nSketch First Order Logic Statement:  LargeGathering(x) → Celebrating(x)\n\nPredicates:\n\"\"\"\nCelebrating(x)\nOutgoing(x)\nGettingMarried(x)\nWeddings(x)\nLargeGathering(x)\nPreTeen(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x LargeGathering(x) → Celebrating(x)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All people who attend weddings are getting married or have friends who are getting married.\n\nSketch First Order Logic Statement:  Weddings(x) → GettingMarried(x)\n\nPredicates:\n\"\"\"\nCelebrating(x)\nOutgoing(x)\nGettingMarried(x)\nWeddings(x)\nLargeGathering(x)\nPreTeen(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x Weddings(x) → GettingMarried(x)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All Republicans are anti-abortion.\n\nSketch First Order Logic Statement: ∀x (Republicans(x) → Anti-abortion(x))\n\nPredicates:\n\"\"\"\nabortion(x)\nConservative(x)\nLiberal(x)\nDemocrats(x)\nRepublicans(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Republicans(x) → Anti-abortion(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Either Republicans or Democrats. \n\nSketch First Order Logic Statement:  ∀x (Republicans(x) ∨ Democrats(x))\n\nPredicates:\n\"\"\"\nabortion(x)\nConservative(x)\nLiberal(x)\nDemocrats(x)\nRepublicans(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (Republicans(x) ∨ Democrats(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Either conservative or liberal. \n\nSketch First Order Logic Statement:   (Conservative(x) ∨ ∀x  Liberal(x))\n\nPredicates:\n\"\"\"\nabortion(x)\nConservative(x)\nLiberal(x)\nDemocrats(x)\nRepublicans(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (Conservative(x) ∨ Liberal(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Either Republicans or Democrats. \n\nSketch First Order Logic Statement:   (Republicans(x) ∨ ∀x  Democrats(x))\n\nPredicates:\n\"\"\"\nabortion(x)\nConservative(x)\nLiberal(x)\nDemocrats(x)\nRepublicans(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (Republicans(x) ∨ Democrats(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Either Republicans or Democrats. \n\nSketch First Order Logic Statement:   (Republicans(x) ∨ ∀x  Democrats(x))\n\nPredicates:\n\"\"\"\nabortion(x)\nConservative(x)\nLiberal(x)\nDemocrats(x)\nRepublicans(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (Republicans(x) ∨ Democrats(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All Republicans are anti-abortion.\n\nSketch First Order Logic Statement: ∀x (Republicans(x) → Anti-abortion(x))\n\nPredicates:\n\"\"\"\nabortion(x)\nConservative(x)\nLiberal(x)\nDemocrats(x)\nRepublicans(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Republicans(x) → Anti-abortion(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A U.S government official is either conservative or a Republican.\n\nSketch First Order Logic Statement:  Conservative(USGovernmentOfficial) ⊕ Republicans(USGovernmentOfficial)\n\nPredicates:\n\"\"\"\nabortion(x)\nConservative(x)\nLiberal(x)\nDemocrats(x)\nRepublicans(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " Conservative(USGovernmentOfficial) ⊕ Republicans(USGovernmentOfficial)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Either conservative or liberal. \n\nSketch First Order Logic Statement:   (Conservative(x) ∨ Liberal(x))\n\nPredicates:\n\"\"\"\nabortion(x)\nConservative(x)\nLiberal(x)\nDemocrats(x)\nRepublicans(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (Conservative(x) ∨ Liberal(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All advocates of high tariff rates are Republicans.\n\nSketch First Order Logic Statement:  (AdvocateOfHighTariff(x) → Republican(x))\n\nPredicates:\n\"\"\"\nRepublican(x)\nConservative(x)\nAdvocateOfHighTariff(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (AdvocateOfHighTariff(x) → Republican(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No athletes are slow runners. \n\nSketch First Order Logic Statement: ∀x (Athlete(x) → ¬SlowRunner(x))\n\nPredicates:\n\"\"\"\nProfessionalBasketballPlayer(x)\nAthlete(x)\nKnicksPlayer(x)\nNBAPlayer(x)\nSlowRunner(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Athlete(x) → ¬SlowRunner(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Jim is either not a professional basketball player or not a slow runner. \n\nSketch First Order Logic Statement: ¬(ProfessionalBasketballPlayer(jim) ⊕ SlowRunner(jim))\n\nPredicates:\n\"\"\"\nProfessionalBasketballPlayer(x)\nAthlete(x)\nKnicksPlayer(x)\nNBAPlayer(x)\nSlowRunner(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(ProfessionalBasketballPlayer(jim) ⊕ SlowRunner(jim))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All NBA players are professional basketball players. \n\nSketch First Order Logic Statement:  (NBAPlayer(x) → ProfessionalBasketballPlayer(x))\n\nPredicates:\n\"\"\"\nProfessionalBasketballPlayer(x)\nAthlete(x)\nKnicksPlayer(x)\nNBAPlayer(x)\nSlowRunner(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All kids love animals.\n\nSketch First Order Logic Statement:  (Kid(x) → ∀x  LoveAnimals(x))\n\nPredicates:\n\"\"\"\nLoveAnimals(x)\nToddler(x)\nKid(x)\nBad(x)\nPirate(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Kid(x) → LoveAnimals(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Nancy is not a pirate, then Nancy loves animals.\n\nSketch First Order Logic Statement: ¬Pirate(nancy) → LoveAnimals(nancy)\n\nPredicates:\n\"\"\"\nLoveAnimals(x)\nToddler(x)\nKid(x)\nBad(x)\nPirate(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬Pirate(nancy) → LoveAnimals(nancy)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If someone loves animals, then they are not bad.\n\nSketch First Order Logic Statement: ∀x (LoveAnimals((x) → ¬Bad)(x))\n\nPredicates:\n\"\"\"\nLoveAnimals(x)\nToddler(x)\nKid(x)\nBad(x)\nPirate(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (LoveAnimals(x) → ¬Bad(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Kirkland is a US city.\n\nSketch First Order Logic Statement: CityCountry(kirkland, us)\n\nPredicates:\n\"\"\"\nFromCountry(x, y)\nIsFilm(x)\nDirectedBy(x, y)\nNomination(x, y)\nIsDocumentary(x)\nFilmmaker(x)\nFromCity(x, y)\nCityCountry(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "CityCountry(kirkland, us)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Lana Wilson directed After Tiller, The Departure, and Miss Americana.\n\nSketch First Order Logic Statement: DirectedBy(after_Tiller, lana_Wilson) ∧ DirectedBy(the_Departure, lana_Wilson) ∧ DirectedBy(miss_Americana, lana_Wilson)\n\nPredicates:\n\"\"\"\nFromCountry(x, y)\nIsFilm(x)\nDirectedBy(x, y)\nNomination(x, y)\nIsDocumentary(x)\nFilmmaker(x)\nFromCity(x, y)\nCityCountry(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "DirectedBy(after_Tiller, lana_Wilson) ∧ DirectedBy(the_Departure, lana_Wilson) ∧ DirectedBy(miss_Americana, lana_Wilson)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a person is from a city in a country, the person is from the country.\n\nSketch First Order Logic Statement:  ∀y ∀z (FromCity(x, y) ∧ CityCountry(y, z) → FromCountry(x, z))\n\nPredicates:\n\"\"\"\nFromCountry(x, y)\nIsFilm(x)\nDirectedBy(x, y)\nNomination(x, y)\nIsDocumentary(x)\nFilmmaker(x)\nFromCity(x, y)\nCityCountry(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y ∀z (FromCity(x, y) ∧ CityCountry(y, z) → FromCountry(x, z))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All bears in zoos are not wild. \n\nSketch First Order Logic Statement: ∀x ((Bear(x) ∧( InZoo(x)) → ¬Wild()x))\n\nPredicates:\n\"\"\"\nBear(x)\nWild(x)\nInZoo(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ((Bear(x) ∧ InZoo(x)) → ¬Wild(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Queens are female.\n\nSketch First Order Logic Statement:  (Queen(x) → Female(x))\n\nPredicates:\n\"\"\"\nLeader(x)\nFemale(x)\nMale(x)\nKing(x)\nInMonarchy(x)\nQueen(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Queen(x) → Female(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Leaders are either a king or a queen.\n\nSketch First Order Logic Statement:  (Leader(x) → King(x) ⊕ Queen(x))\n\nPredicates:\n\"\"\"\nLeader(x)\nFemale(x)\nMale(x)\nKing(x)\nInMonarchy(x)\nQueen(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Leader(x) → King(x) ⊕ Queen(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Elizabeth is a leader\n\nSketch First Order Logic Statement: Leaderelizabeth\n\nPredicates:\n\"\"\"\nLeader(x)\nFemale(x)\nMale(x)\nKing(x)\nInMonarchy(x)\nQueen(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Leader(elizabeth)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All people who prefer working at home over going to the office every day do not have regular 9-5 jobs.\n\nSketch First Order Logic Statement: ∀x (WorkHome(x) → Jobs(x))\n\nPredicates:\n\"\"\"\nLate(x)\nJobs(x)\nWorkHome(x)\nCalifornia(x)\nCelebrities(x)\nMatcha(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (WorkHome(x) → Jobs(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people make their own matcha teas every morning with ceremonial-grade matcha powder, then they do not wake up late and start their schedules past noon regularly.\n\nSketch First Order Logic Statement: ∀x (Matcha(x) → ¬Late(x))\n\nPredicates:\n\"\"\"\nLate(x)\nJobs(x)\nWorkHome(x)\nCalifornia(x)\nCelebrities(x)\nMatcha(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Matcha(x) → ¬Late(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Clay either both prefers to work at home over going to the office every day and makes his own matcha teas every morning with ceremonial-grade matcha powder, or he neither prefers to work at home over going to the office every day nor makes his own matcha teas every morning with ceremonial-grade matcha powder.\n\nSketch First Order Logic Statement: (WorkHome(clay) ∧ Matcha(clay)) ⊕ (¬WorkHome(clay) ∧ ¬Matcha(clay))\n\nPredicates:\n\"\"\"\nLate(x)\nJobs(x)\nWorkHome(x)\nCalifornia(x)\nCelebrities(x)\nMatcha(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "(WorkHome(clay) ∧ Matcha(clay)) ⊕ (¬WorkHome(clay) ∧ ¬Matcha(clay))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Thomas Barber played in the Football League for Aston Villa.\n\nSketch First Order Logic Statement: PlayedInTheFootballLeagueFor(thomasBarber, astonVilla)\n\nPredicates:\n\"\"\"\nProfessionalFootballer(x)\nPlayedInTheFootballLeagueFor(x, y)\nPlayedAs(x, y)\nScoredTheWinningGoalIn(x, y)\nEnglish(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "PlayedInTheFootballLeagueFor(thomasBarber, astonVilla)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Thomas Barber scored the winning goal in the 1913 FA Cup Final.\n\nSketch First Order Logic Statement: ScoredTheWinningGoalIn(thomasBarber, facupfinal1913)\n\nPredicates:\n\"\"\"\nProfessionalFootballer(x)\nPlayedInTheFootballLeagueFor(x, y)\nPlayedAs(x, y)\nScoredTheWinningGoalIn(x, y)\nEnglish(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "ScoredTheWinningGoalIn(thomasBarber, facupfinal1913)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Thomas Barber played as a half back and inside left.\n\nSketch First Order Logic Statement: PlayedAs(thomasBarber, aHalfBack) ∧ PlayedAs(thomasBarber, anInsideLeft)\n\nPredicates:\n\"\"\"\nProfessionalFootballer(x)\nPlayedInTheFootballLeagueFor(x, y)\nPlayedAs(x, y)\nScoredTheWinningGoalIn(x, y)\nEnglish(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "PlayedAs(thomasBarber, aHalfBack) ∧ PlayedAs(thomasBarber, anInsideLeft)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people play the instrument in the concert, then he is good at playing this kind of instrument.\n\nSketch First Order Logic Statement: ∀x ∀y (PlayInConcert(y, x) → GoodAt(y, x))\n\nPredicates:\n\"\"\"\nPlay(x, y)\nPlayInConcert(x, y)\nPlayerInConcert(x)\nGoodAt(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀y ∀x (PlayInConcert(y, x) → GoodAt(y, x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Peter plays piano, violin, and saxophone.\n\nSketch First Order Logic Statement: Play(peter, piano) ∧Play(peter, violin)\n\nPredicates:\n\"\"\"\nPlay(x, y)\nPlayInConcert(x, y)\nPlayerInConcert(x)\nGoodAt(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Play(peter, piano) ∧Play(peter, violin)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Oliver plays a different musical instrument from Peter in the concert.\n\nSketch First Order Logic Statement: ¬PlayInConcert(oliver, piano)\n\nPredicates:\n\"\"\"\nPlay(x, y)\nPlayInConcert(x, y)\nPlayerInConcert(x)\nGoodAt(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬PlayInConcert(oliver, piano)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Every animal that travels on land enjoys basking in the sun.\n\nSketch First Order Logic Statement: ∀x (TravelsOnLand(x) → EnjoysBasking(x))\n\nPredicates:\n\"\"\"\nCanSwim(x)\nTravelsOnLand(x)\nSplashes(x)\nCanWalk(x)\nGoesUnderwater(x)\nEnjoysWater(x)\nEnjoysBasking(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (TravelsOnLand(x) → EnjoysBasking(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If something can go underwater, then it enjoys water.\n\nSketch First Order Logic Statement: ∀x (GoesUnderwater(x) → EnjoysWater(x))\n\nPredicates:\n\"\"\"\nCanSwim(x)\nTravelsOnLand(x)\nSplashes(x)\nCanWalk(x)\nGoesUnderwater(x)\nEnjoysWater(x)\nEnjoysBasking(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (GoesUnderwater(x) → EnjoysWater(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Either an animal can swim or it can walk.\n\nSketch First Order Logic Statement: ∀x (CanSwim(x) ∨ CanWalk(x))\n\nPredicates:\n\"\"\"\nCanSwim(x)\nTravelsOnLand(x)\nSplashes(x)\nCanWalk(x)\nGoesUnderwater(x)\nEnjoysWater(x)\nEnjoysBasking(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (CanSwim(x) ∨ CanWalk(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value.\n\nSketch First Order Logic Statement:  PValue(cancerResearchers, theImportanceOfSubstitutionsToCancerGrowth)\n\nPredicates:\n\"\"\"\nFindingGeneticAlterationsConferSelectiveAdvantageCancerCells(x)\nThresholdsForBelief(x)\nPValue(x, y)\nMetricsOfEffect(x)\nPValue(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " PValue(cancerResearchers, theImportanceOfSubstitutionsToCancerGrowth)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Cancer researchers have frequently ranked the importance of substitutions to cancer growth by P value.\n\nSketch First Order Logic Statement:  PValue(cancerResearchers, theImportanceOfS(ubstitu)tionsToCancerGrowth)\n\nPredicates:\n\"\"\"\nFindingGeneticAlterationsConferSelectiveAdvantageCancerCells(x)\nThresholdsForBelief(x)\nPValue(x, y)\nMetricsOfEffect(x)\nPValue(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " PValue(cancerResearchers, theImportanceOfSubstitutionsToCancerGrowth)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Cancer biology is finding genetic alterations that confer selective advantage to cancer cells. \n\nSketch First Order Logic Statement: FindingGeneticAlterationsConferSelectiveAdvantageCancerCells(cancerBiology)\n\nPredicates:\n\"\"\"\nFindingGeneticAlterationsConferSelectiveAdvantageCancerCells(x)\nThresholdsForBelief(x)\nPValue(x, y)\nMetricsOfEffect(x)\nPValue(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "FindingGeneticAlterationsConferSelectiveAdvantageCancerCells(cancerBiology)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: P values are thresholds for belief, not metrics of effect. \n\nSketch First Order Logic Statement:   (PValue(x) → ThresholdsForBelief(x) ∧ ∀x  ¬MetricsOfEffect(x))\n\nPredicates:\n\"\"\"\nFindingGeneticAlterationsConferSelectiveAdvantageCancerCells(x)\nThresholdsForBelief(x)\nPValue(x, y)\nMetricsOfEffect(x)\nPValue(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (PValue(x) → ThresholdsForBelief(x) ∧ ¬MetricsOfEffect(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A worksheet is either paper or is environment-friendly.\n\nSketch First Order Logic Statement: Paper(worksheet) ⊕ EnvironmentFriendly(worksheet)\n\nPredicates:\n\"\"\"\nWoodware(x)\nGood(x)\nBad(x)\nDispensable(x)\nEnvironmentFriendly(x)\nPaper(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Paper(worksheet) ⊕ EnvironmentFriendly(worksheet)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All environment-friendly things are good.\n\nSketch First Order Logic Statement: ∀x (EnvironmentFriendly(x) → Good(x))\n\nPredicates:\n\"\"\"\nWoodware(x)\nGood(x)\nBad(x)\nDispensable(x)\nEnvironmentFriendly(x)\nPaper(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (EnvironmentFriendly(x) → Good(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All environment-friendly things are good.\n\nSketch First Order Logic Statement:  (EnvironmentFriendly(x) → ∀x  Good(x))\n\nPredicates:\n\"\"\"\nWoodware(x)\nGood(x)\nBad(x)\nDispensable(x)\nEnvironmentFriendly(x)\nPaper(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (EnvironmentFriendly(x) → Good(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All woodware is dispensable.\n\nSketch First Order Logic Statement:  (Woodware(x) → Dispensable(x))\n\nPredicates:\n\"\"\"\nWoodware(x)\nGood(x)\nBad(x)\nDispensable(x)\nEnvironmentFriendly(x)\nPaper(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Woodware(x) → Dispensable(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All snakes are reptiles.\n\nSketch First Order Logic Statement: ∀x (Snake(x) → Reptile(x))\n\nPredicates:\n\"\"\"\nHasFur(x)\nSnake(x)\nReptile(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Snake(x) → Reptile(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All buildings owned by Bloomberg are located in Manhattans. \n\nSketch First Order Logic Statement:  (Bloomberg(x) → ∀x  Located(manhattans, x))\n\nPredicates:\n\"\"\"\nHigh(x)\nBloomberg(x)\nYaleHousing(x)\nBloombergLogo(x)\nLocated(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Bloomberg(x) → Located(manhattans, x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All buildings owned by Bloomberg are located in Manhattans. \n\nSketch First Order Logic Statement:  (Bloomberg(x) → Located(manhattans, x))\n\nPredicates:\n\"\"\"\nHigh(x)\nBloomberg(x)\nYaleHousing(x)\nBloombergLogo(x)\nLocated(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Bloomberg(x) → Located(manhattans, x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Tower A is managed by the Yale Housing.\n\nSketch First Order Logic Statement: YaleHousing(tower-a)\n\nPredicates:\n\"\"\"\nHigh(x)\nBloomberg(x)\nYaleHousing(x)\nBloombergLogo(x)\nLocated(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "YaleHousing(tower-a)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Either an animal is a bird or it eats other animals.\n\nSketch First Order Logic Statement:  (Bird(x) ∨ EatOtherAnimals(x))\n\nPredicates:\n\"\"\"\nCarnivore(x)\nReptile(x)\nLizard(x)\nBird(x)\nColdBlooded(x)\nEatOtherAnimals(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Bird(x) ∨ EatOtherAnimals(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If an animal eats other animals, then it is a carnivore.\n\nSketch First Order Logic Statement: ∀x (EatOtherAnimals(x) → Carnivore((x)))\n\nPredicates:\n\"\"\"\nCarnivore(x)\nReptile(x)\nLizard(x)\nBird(x)\nColdBlooded(x)\nEatOtherAnimals(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (EatOtherAnimals(x) → Carnivore(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If an animal eats other animals, then it is a carnivore.\n\nSketch First Order Logic Statement: ∀x (EatOth(erAnimals)(x) → Carnivore(x))\n\nPredicates:\n\"\"\"\nCarnivore(x)\nReptile(x)\nLizard(x)\nBird(x)\nColdBlooded(x)\nEatOtherAnimals(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (EatOtherAnimals(x) → Carnivore(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Mongol region was where Ambiorus Dementjevi lived.\n\nSketch First Order Logic Statement:  (AmbiortusDementjevi(x) → Lived(x, mongolregion))\n\nPredicates:\n\"\"\"\nPrehistoric(x)\nBirdGenus(x)\nSpecies(x, y)\nLived(x, y)\nDiscovered(x, y)\nAmbiortusDementjevi(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (AmbiortusDementjevi(x) → Lived(x, mongolregion))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Mongol region was where Ambiorus Dementjevi lived.\n\nSketch First Order Logic Statement:  (AmbiortusDementjevi(x) → ∀x  Lived(x, mongolregion))\n\nPredicates:\n\"\"\"\nPrehistoric(x)\nBirdGenus(x)\nSpecies(x, y)\nLived(x, y)\nDiscovered(x, y)\nAmbiortusDementjevi(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (AmbiortusDementjevi(x) → Lived(x, mongolregion))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Ambiortus is a prehistoric bird genus.\n\nSketch First Order Logic Statement: Prehistoric(ambiortus) ∧ BirdGenus(ambiortus)\n\nPredicates:\n\"\"\"\nPrehistoric(x)\nBirdGenus(x)\nSpecies(x, y)\nLived(x, y)\nDiscovered(x, y)\nAmbiortusDementjevi(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Prehistoric(ambiortus) ∧ BirdGenus(ambiortus)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Mongol region was where Ambiorus Dementjevi lived.\n\nSketch First Order Logic Statement:  (AmbiortusDementjevi(x) → ∀x  Lived(x, mongolregion))\n\nPredicates:\n\"\"\"\nPrehistoric(x)\nBirdGenus(x)\nSpecies(x, y)\nLived(x, y)\nDiscovered(x, y)\nAmbiortusDementjevi(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (AmbiortusDementjevi(x) → Lived(x, mongolregion))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Either someone is a football player or a basketball player.\n\nSketch First Order Logic Statement: ∀x (BasketballPlayer(x) ∨ PlayFootball(x))\n\nPredicates:\n\"\"\"\nInShape(x)\nThrowFootball(x)\nThrowFootballSpiral(x)\nTall(x)\nPlayFootball(x)\nBasketballPlayer(x)\nUseFootball(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (BasketballPlayer(x) ∨ PlayFootball(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If someone is tall, then they are in shape.\n\nSketch First Order Logic Statement: ∀x (Tall(x) → InShape(x))\n\nPredicates:\n\"\"\"\nInShape(x)\nThrowFootball(x)\nThrowFootballSpiral(x)\nTall(x)\nPlayFootball(x)\nBasketballPlayer(x)\nUseFootball(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Tall(x) → InShape(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Jack is neither tall nor a basketball player,  then Jack is neither tall nor can throw a football.\n\nSketch First Order Logic Statement: ¬Tall(jack) ∧ ¬BasketballPlayer(jack) → ¬Tall(jack) ∧ ¬ThrowFootball(jack)\n\nPredicates:\n\"\"\"\nInShape(x)\nThrowFootball(x)\nThrowFootballSpiral(x)\nTall(x)\nPlayFootball(x)\nBasketballPlayer(x)\nUseFootball(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬Tall(jack) ∧ ¬BasketballPlayer(jack) → ¬Tall(jack) ∧ ¬ThrowFootball(jack)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Fort Ticonderoga is the current name for Fort Carillon.\n\nSketch First Order Logic Statement: CurrentNamefortticonderoga, fortcarillon\n\nPredicates:\n\"\"\"\nLocatedIn(x, y)\nCurrentName(x, y)\nBuilt(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "CurrentName(fortticonderoga, fortcarillon)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Fort Carillon was located in New France.\n\nSketch First Order Logic Statement: LocatedIn(fortcarillon, newfrance)\n\nPredicates:\n\"\"\"\nLocatedIn(x, y)\nCurrentName(x, y)\nBuilt(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "LocatedIn(fortcarillon, newfrance)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: New France is not in Europe.\n\nSketch First Order Logic Statement: ¬LocatedIn(newfrance, europe)\n\nPredicates:\n\"\"\"\nLocatedIn(x, y)\nCurrentName(x, y)\nBuilt(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬LocatedIn(newfrance, europe)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All NBA players are professional basketball players.\n\nSketch First Order Logic Statement:  (NBAPlayer(x) → ∀x  ProfessionalBasketballPlayer(x))\n\nPredicates:\n\"\"\"\nProfessionalBasketballPlayer(x)\nDefender(x)\nSoccerPlayer(x)\nCenterback(x)\nNBAPlayer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No soccer players are professional basketball players.\n\nSketch First Order Logic Statement: ¬(∃x (SoccerPlayer(x) ∧ ProfessionalBasketballPlayer(x)))\n\nPredicates:\n\"\"\"\nProfessionalBasketballPlayer(x)\nDefender(x)\nSoccerPlayer(x)\nCenterback(x)\nNBAPlayer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(∃x (SoccerPlayer(x) ∧ ProfessionalBasketballPlayer(x)))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All NBA players are professional basketball players.\n\nSketch First Order Logic Statement: ∀x (NBAPlayer(x) → Professi(ona)lBasketballPlayer(x))\n\nPredicates:\n\"\"\"\nProfessionalBasketballPlayer(x)\nDefender(x)\nSoccerPlayer(x)\nCenterback(x)\nNBAPlayer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All folk songs are songs. \n\nSketch First Order Logic Statement: ∀x (FolkSong(x) → Song(x))\n\nPredicates:\n\"\"\"\nVisual(x)\nScifiMovie(x)\nFolkSong(x)\nMovie(x)\nVideo(x)\nSong(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (FolkSong(x) → Song(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Inception is a sci-fi movie.\n\nSketch First Order Logic Statement: ScifiMovie(inception)\n\nPredicates:\n\"\"\"\nVisual(x)\nScifiMovie(x)\nFolkSong(x)\nMovie(x)\nVideo(x)\nSong(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "ScifiMovie(inception)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All sci-fi movies are movies.\n\nSketch First Order Logic Statement: ∀x (ScifiMoviex) → Movie(x)\n\nPredicates:\n\"\"\"\nVisual(x)\nScifiMovie(x)\nFolkSong(x)\nMovie(x)\nVideo(x)\nSong(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (ScifiMovie(x) → Movie(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No songs are visual. \n\nSketch First Order Logic Statement: ∀x (Song(x) → ¬Visual(x))\n\nPredicates:\n\"\"\"\nVisual(x)\nScifiMovie(x)\nFolkSong(x)\nMovie(x)\nVideo(x)\nSong(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Song(x) → ¬Visual(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Jeff is not an extrovert and someone who likes to talk to strangers.\n\nSketch First Order Logic Statement:  ¬Extroverts(jeff) ∧ ¬LikeToTalkToStrangersjeff\n\nPredicates:\n\"\"\"\nExtroverts(x)\nOvertlyExpressive(x)\nLikeToTalkToStrangers(x)\nShyAndReticentPerson(x)\nIntroverts(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ¬Extroverts(jeff) ∧ ¬LikeToTalkToStrangers(jeff)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People are either extroverts or introverts.\n\nSketch First Order Logic Statement:   (Extroverts(x) ∨ ∀x  Introverts(x)) \n\nPredicates:\n\"\"\"\nExtroverts(x)\nOvertlyExpressive(x)\nLikeToTalkToStrangers(x)\nShyAndReticentPerson(x)\nIntroverts(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (Extroverts(x) ∨ Introverts(x)) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No shy and reticent person likes to talk to strangers.\n\nSketch First Order Logic Statement:  ∀x ShyAndReticentPerson(x → ¬LikeToTalkToStrangers(x))\n\nPredicates:\n\"\"\"\nExtroverts(x)\nOvertlyExpressive(x)\nLikeToTalkToStrangers(x)\nShyAndReticentPerson(x)\nIntroverts(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (ShyAndReticentPerson(x) → ¬LikeToTalkToStrangers(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n\nSketch First Order Logic Statement: ∀x (ThreePointer(x) → TwoPointer(x))\n\nPredicates:\n\"\"\"\nTopPlayer(x)\nTwoPointer(x)\nThreePointer(x)\nLowScore(x)\nBadMid(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (ThreePointer(x) → TwoPointer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Candace is either a low-scoring player or successfully shoots a high percentage of 3-pointers.\n\nSketch First Order Logic Statement: LowScore(candace) ⊕ ThreePointer(candace)\n\nPredicates:\n\"\"\"\nTopPlayer(x)\nTwoPointer(x)\nThreePointer(x)\nLowScore(x)\nBadMid(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "LowScore(candace) ⊕ ThreePointer(candace)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n\nSketch First Order Logic Statement:  (TopPlayer(x) ∨ ∀x  ThreePointer(x))\n\nPredicates:\n\"\"\"\nTopPlayer(x)\nTwoPointer(x)\nThreePointer(x)\nLowScore(x)\nBadMid(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (TopPlayer(x) ∨ ThreePointer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All players who successfully shoot a high percentage of 3-pointers are solid at shooting 2-pointers.\n\nSketch First Order Logic Statement:  (ThreePointer(x) → TwoPointer(x))\n\nPredicates:\n\"\"\"\nTopPlayer(x)\nTwoPointer(x)\nThreePointer(x)\nLowScore(x)\nBadMid(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (ThreePointer(x) → TwoPointer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No low-scoring players are top players in the league.\n\nSketch First Order Logic Statement:  (LowScore(x) → ∀x  ¬TopPlayer(x))\n\nPredicates:\n\"\"\"\nTopPlayer(x)\nTwoPointer(x)\nThreePointer(x)\nLowScore(x)\nBadMid(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (LowScore(x) → ¬TopPlayer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Basketball players are either top players in the league or successfully shoot a high percentage of 3-pointers.\n\nSketch First Order Logic Statement: ∀x (TopPlayer(x) ∨ ThreePointer(x))\n\nPredicates:\n\"\"\"\nTopPlayer(x)\nTwoPointer(x)\nThreePointer(x)\nLowScore(x)\nBadMid(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (TopPlayer(x) ∨ ThreePointer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No players who are solid at shooting 2-pointers are bad at mid-range shots.\n\nSketch First Order Logic Statement: ∀x (Two(Pointer(x) → ¬BadM)id(x))\n\nPredicates:\n\"\"\"\nTopPlayer(x)\nTwoPointer(x)\nThreePointer(x)\nLowScore(x)\nBadMid(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (TwoPointer(x) → ¬BadMid(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No players who are solid at shooting 2-pointers are bad at mid-range shots.\n\nSketch First Order Logic Statement: ∀x TwoPointer(x → ¬BadMid(x))\n\nPredicates:\n\"\"\"\nTopPlayer(x)\nTwoPointer(x)\nThreePointer(x)\nLowScore(x)\nBadMid(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (TwoPointer(x) → ¬BadMid(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No players who are solid at shooting 2-pointers are bad at mid-range shots.\n\nSketch First Order Logic Statement: ∀x (TwoPointer(x) → ¬BadMid(x))\n\nPredicates:\n\"\"\"\nTopPlayer(x)\nTwoPointer(x)\nThreePointer(x)\nLowScore(x)\nBadMid(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (TwoPointer(x) → ¬BadMid(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No plants are fungi.\n\nSketch First Order Logic Statement:  (Plant(x) → ∀x  ¬Fungi(x))\n\nPredicates:\n\"\"\"\nPlant(x)\nMushroom(x)\nFungi(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Plant(x) → ¬Fungi(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: And some streets are roads.\n\nSketch First Order Logic Statement: ∃x (Street(x) ∧ Road(x))\n\nPredicates:\n\"\"\"\nStreet(x)\nRoad(x)\nClean(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Street(x) ∧ Road(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: New York City is on the East Coast. \n\nSketch First Order Logic Statement: On(newyorkcity, eastcoast)\n\nPredicates:\n\"\"\"\nUncomfortable(x)\nInFirstClass(x)\nOn(x, y)\nTravelingTo(x, y)\nTravelingFrom(x, y)\nOnLongFlight(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "On(newyorkcity, eastcoast)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Singh Kaur is a musician and famous.\n\nSketch First Order Logic Statement: Musician(singhKaur) ∧ Famous(singhKaur)\n\nPredicates:\n\"\"\"\nFamous(x)\nSinger(x)\nBusy(x)\nMusician(x)\nWriter(x)\nMakeMoney(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Musician(singhKaur) ∧ Famous(singhKaur)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A musician can be a singer or a writer.\n\nSketch First Order Logic Statement:  (Musician(x) ∧ ∃x  Singer(x) ∨ Writer(x))\n\nPredicates:\n\"\"\"\nFamous(x)\nSinger(x)\nBusy(x)\nMusician(x)\nWriter(x)\nMakeMoney(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Musician(x) ∧ Singer(x) ∨ Writer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Musicians have very busy lives.\n\nSketch First Order Logic Statement:  (Musician(x) → ∀x  Busy(x))\n\nPredicates:\n\"\"\"\nFamous(x)\nSinger(x)\nBusy(x)\nMusician(x)\nWriter(x)\nMakeMoney(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Musician(x) → Busy(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Everything tall has  height.\n\nSketch First Order Logic Statement:  (Tall(x) → HasHeight(x))\n\nPredicates:\n\"\"\"\nBuilding(x)\nTall(x)\nHasHeight(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Tall(x) → HasHeight(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A cat named Garfield, which is the main character of the film Garfield, is orange and fat and likes having lasagna. \n\nSketch First Order Logic Statement: Cat(garfield) ∧ MainCharacterGarfield(garfield) ∧ BeOrange(garfield) ∧ BeFat(garfield) ∧ LikeLasagna(garfield)\n\nPredicates:\n\"\"\"\nShareHome(x, y)\nLikeLasagna(x)\nBeFat(x)\nHate(x, y)\nBeOrange(x)\nBeChildish(x)\nCat(x)\nMainCharacterGarfield(x)\nPet(x, y)\nBePossessive(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Cat(garfield) ∧ MainCharacterGarfield(garfield) ∧ BeOrange(garfield) ∧ BeFat(garfield) ∧ LikeLasagna(garfield)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Hulu is a goat or a human.\n\nSketch First Order Logic Statement: Goat(hulu) ∨ Human(hulu)\n\nPredicates:\n\"\"\"\nHuman(x)\nDirt(x)\nEat(x)\nAnimal(x)\nGoat(x)\nPlant(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Goat(hulu) ∨ Human(hulu)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All goats are animals.\n\nSketch First Order Logic Statement: ∀x (Goat(x) → Animal(x))\n\nPredicates:\n\"\"\"\nHuman(x)\nDirt(x)\nEat(x)\nAnimal(x)\nGoat(x)\nPlant(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Goat(x) → Animal(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All humans eat.\n\nSketch First Order Logic Statement: ∀x Human(x → Eat(x))\n\nPredicates:\n\"\"\"\nHuman(x)\nDirt(x)\nEat(x)\nAnimal(x)\nGoat(x)\nPlant(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Human(x) → Eat(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If something eats, then it is not a plant.\n\nSketch First Order Logic Statement:  (Eat(x) → ¬Plant(x))\n\nPredicates:\n\"\"\"\nHuman(x)\nDirt(x)\nEat(x)\nAnimal(x)\nGoat(x)\nPlant(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Eat(x) → ¬Plant(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All humans eat.\n\nSketch First Order Logic Statement: ∀x (Human(x) → Eat(x))\n\nPredicates:\n\"\"\"\nHuman(x)\nDirt(x)\nEat(x)\nAnimal(x)\nGoat(x)\nPlant(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Human(x) → Eat(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All goats are animals.\n\nSketch First Order Logic Statement: ∀x (Goat(x) → Animal(x))\n\nPredicates:\n\"\"\"\nHuman(x)\nDirt(x)\nEat(x)\nAnimal(x)\nGoat(x)\nPlant(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Goat(x) → Animal(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Controlled Substances Act was an act passed in 1971.\n\nSketch First Order Logic Statement: PassedIn(controlledSubstancesAct, year1971) ∧ Act(controlledSubstancesAct)\n\nPredicates:\n\"\"\"\nPassedIn(x, y)\nHarmful(x)\nPreventsHarm(x)\nBeneficial(x)\nDrugs(x)\nChemicalEndangerment(x)\nAct(x)\nExposedToControlledSubstance(x, y)\nControlledSubstances(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "PassedIn(controlledSubstancesAct, year1971) ∧ Act(controlledSubstancesAct)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Controlled Substances Act was an act passed in 1971.\n\nSketch First Order Logic Statement: PassedIn(controlledSubstancesAct, year1971) ∧ Act(controlledSubstancesAct)\n\nPredicates:\n\"\"\"\nPassedIn(x, y)\nHarmful(x)\nPreventsHarm(x)\nBeneficial(x)\nDrugs(x)\nChemicalEndangerment(x)\nAct(x)\nExposedToControlledSubstance(x, y)\nControlledSubstances(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "PassedIn(controlledSubstancesAct, year1971) ∧ Act(controlledSubstancesAct)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some Acts prevent harmful things.\n\nSketch First Order Logic Statement: ∃x (Act(x) ∧ Preven(tsHarm()x))\n\nPredicates:\n\"\"\"\nPassedIn(x, y)\nHarmful(x)\nPreventsHarm(x)\nBeneficial(x)\nDrugs(x)\nChemicalEndangerment(x)\nAct(x)\nExposedToControlledSubstance(x, y)\nControlledSubstances(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Act(x) ∧ PreventsHarm(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All entrepreneurs are starting a new company.\n\nSketch First Order Logic Statement:  ∀x (Entrepreneurs(x) → StartingANewCompany(x))\n\nPredicates:\n\"\"\"\nWorkAtCorporateJobs(x)\nEntrepreneurs(x)\naverse(x)\nHateWorkingForOthers(x)\nStartingANewCompany(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (Entrepreneurs(x) → StartingANewCompany(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No people who work at corporate jobs are starting a new company.\n\nSketch First Order Logic Statement: ∀x (WorkAtCorporateJobs(x) → ¬StartingANewCompany(x))\n\nPredicates:\n\"\"\"\nWorkAtCorporateJobs(x)\nEntrepreneurs(x)\naverse(x)\nHateWorkingForOthers(x)\nStartingANewCompany(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (WorkAtCorporateJobs(x) → ¬StartingANewCompany(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Mark Zuckerberg is neither an entrepreneur nor a person who hates working for others, then Mark Zuckerberg is not a risk-averse person.\n\nSketch First Order Logic Statement:  ¬Entrepreneurs(markZuckerberg) ∨ ¬HateWorkingForOthers(markZuckerberg) → ¬Risk-averse(markZuckerberg)\n\nPredicates:\n\"\"\"\nWorkAtCorporateJobs(x)\nEntrepreneurs(x)\naverse(x)\nHateWorkingForOthers(x)\nStartingANewCompany(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ¬Entrepreneurs(markZuckerberg) ∨ ¬HateWorkingForOthers(markZuckerberg) → ¬Risk-averse(markZuckerberg)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.\n\nSketch First Order Logic Statement: (Cook(downstairs) ∧ Run(ac)) → Smokey(secondFloor)\n\nPredicates:\n\"\"\"\nCook(x)\nRun(x)\nSmokey(x)\nKitchen(x)\nUp(x)\nDown(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "(Cook(downstairs) ∧ Run(ac)) → Smokey(secondFloor)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: There are two kitchens in the house: the upstairs kitchen and the downstairs kitchen.\n\nSketch First Order Logic Statement:  (Kitchen(x) → Up(x) ⊕ Down(x))\n\nPredicates:\n\"\"\"\nCook(x)\nRun(x)\nSmokey(x)\nKitchen(x)\nUp(x)\nDown(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Kitchen(x) → Up(x) ⊕ Down(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If the air conditioner is running and someone is cooking in the downstairs kitchen, all the smoke travels to the second floor.\n\nSketch First Order Logic Statement: (Cook(downstairs) ∧ Run(ac)) → Smokey(secondFloor)\n\nPredicates:\n\"\"\"\nCook(x)\nRun(x)\nSmokey(x)\nKitchen(x)\nUp(x)\nDown(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "(Cook(downstairs) ∧ Run(ac)) → Smokey(secondFloor)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: New York City is a highly developed city.\n\nSketch First Order Logic Statement: HighlyDeveloped(nyc)\n\nPredicates:\n\"\"\"\nLocate(x, y)\nHighlyDeveloped(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "HighlyDeveloped(nyc)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: New York City is Located in the United States of America.\n\nSketch First Order Logic Statement: Locate(nyc, usa)\n\nPredicates:\n\"\"\"\nLocate(x, y)\nHighlyDeveloped(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Locate(nyc, usa)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: New York City is Located in the United States of America.\n\nSketch First Order Logic Statement: Locate(nyc, usa)\n\nPredicates:\n\"\"\"\nLocate(x, y)\nHighlyDeveloped(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Locate(nyc, usa)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Callus 4 is a poem that was written by the ancient Roman writer Catullus.\n\nSketch First Order Logic Statement: Poem(callus4) ∧ WrittenBy(callus4, catullus) ∧ Roman(catullus)\n\nPredicates:\n\"\"\"\nPoem(x)\nWrittenBy(x, y)\nAgingAnalogy(x)\nWaves(x)\nRoman(x)\nRetirementShip(x)\nLambic(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Poem(callus4) ∧ WrittenBy(callus4, catullus) ∧ Roman(catullus)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Callus 4 is a story about the retirement of a well-traveled ship.\n\nSketch First Order Logic Statement: Retirem(entShip(callus)4)\n\nPredicates:\n\"\"\"\nPoem(x)\nWrittenBy(x, y)\nAgingAnalogy(x)\nWaves(x)\nRoman(x)\nRetirementShip(x)\nLambic(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "RetirementShip(callus4)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Callus 4 is a story about the retirement of a well-traveled ship.\n\nSketch First Order Logic Statement: RetirementShip(callus4)\n\nPredicates:\n\"\"\"\nPoem(x)\nWrittenBy(x, y)\nAgingAnalogy(x)\nWaves(x)\nRoman(x)\nRetirementShip(x)\nLambic(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "RetirementShip(callus4)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Westworld is an American science fiction-thriller TV series.\n\nSketch First Order Logic Statement: TVSeries(westworld) ∧ American(westworld) ∧ ScienceFictionThriller(westworld)\n\nPredicates:\n\"\"\"\nTVSeries(x)\nScienceFictionThriller(x)\nDebut(x, y)\nDirect(x, y)\nAdapt(x, y)\nWrite(x, y)\nAbout(x, y)\nProduce(x, y)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "TVSeries(westworld) ∧ American(westworld) ∧ ScienceFictionThriller(westworld)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The TV series Westworld is adapted from the original film in 1973, which was written and directed by Michael Crichton.\n\nSketch First Order Logic Statement:  (Adapt(westworld, x) ∧ Produce(x, year1973) ∧ Write(michael, x) ∧ Direct(michael, x))\n\nPredicates:\n\"\"\"\nTVSeries(x)\nScienceFictionThriller(x)\nDebut(x, y)\nDirect(x, y)\nAdapt(x, y)\nWrite(x, y)\nAbout(x, y)\nProduce(x, y)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Adapt(westworld, x) ∧ Produce(x, year1973) ∧ Write(michael, x) ∧ Direct(michael, x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The United States placed second in the gold medal tally but won the highest number of medals overall (112) in the 2008 Summer Olympics.\n\nSketch First Order Logic Statement: Placed(unitedstates, secondingoldmedals) ∧ Won(unitedstates, highestnumberofmedals)\n\nPredicates:\n\"\"\"\nCountry(x)\nWon(x, y)\nFewerGoldMedalsThan(x, y)\nPlaced(x, y)\nSecondToBe(x, y)\nHeldIn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Placed(unitedstates, secondingoldmedals) ∧ Won(unitedstates, highestnumberofmedals)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a country places third in gold medals, then they had fewer gold medals than the team that won the most gold medals.\n\nSketch First Order Logic Statement: ∀x ∀y (Placed(x, thirdingoldmedals) ∧ Wony, mostgoldmedals) → FewerGoldMedalsThan(x, y)\n\nPredicates:\n\"\"\"\nCountry(x)\nWon(x, y)\nFewerGoldMedalsThan(x, y)\nPlaced(x, y)\nSecondToBe(x, y)\nHeldIn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (Placed(x, thirdingoldmedals) ∧ Won(y, mostgoldmedals) → FewerGoldMedalsThan(x, y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: China won the most gold medals (48) in the 2008 Summer Olympics.\n\nSketch First Order Logic Statement: Won(china, mostgoldmedals)\n\nPredicates:\n\"\"\"\nCountry(x)\nWon(x, y)\nFewerGoldMedalsThan(x, y)\nPlaced(x, y)\nSecondToBe(x, y)\nHeldIn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Won(china, mostgoldmedals)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Yangshuo is not a district in Guilin. \n\nSketch First Order Logic Statement: ¬DistrictIn(yangshuo, guilin)\n\nPredicates:\n\"\"\"\nDistrictIn(x, y)\nCity(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬DistrictIn(yangshuo, guilin)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Xiufeng, Xiangshan, Diecai, Qixing are districts in the city of Guilin.\n\nSketch First Order Logic Statement: DistrictIn(xiufeng, guilin) ∧ DistrictIn(xiangshan, guilin) (∧ DistrictIn(diecai, gui)lin) ∧ DistrictIn(qixing, guilin) ∧ City(guilin)\n\nPredicates:\n\"\"\"\nDistrictIn(x, y)\nCity(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "DistrictIn(xiufeng, guilin) ∧ DistrictIn(xiangshan, guilin) ∧ DistrictIn(diecai, guilin) ∧ DistrictIn(qixing, guilin) ∧ City(guilin)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Yangshuo is not a district in Guilin. \n\nSketch First Order Logic Statement: ¬DistrictIn(ya(ngshuo, guili)n)\n\nPredicates:\n\"\"\"\nDistrictIn(x, y)\nCity(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬DistrictIn(yangshuo, guilin)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people regularly tout the benefits of homegrown and homecooked meals over fast food, then they enjoy going out often to restaurants with friends. \n\nSketch First Order Logic Statement: ∀x (Homecooked(x) → GoingOut(x))\n\nPredicates:\n\"\"\"\nHomecooked(x)\nGoingOut(x)\nProfessional(x)\nSpace(x)\nGarden(x)\nTakeout(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Homecooked(x) → GoingOut(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people enjoy going out often to restaurants with friends, then they order takeout from delivery services often.\n\nSketch First Order Logic Statement:  (GoingOut(x) → Takeout(x))\n\nPredicates:\n\"\"\"\nHomecooked(x)\nGoingOut(x)\nProfessional(x)\nSpace(x)\nGarden(x)\nTakeout(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (GoingOut(x) → Takeout(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All people who grow their own fresh vegetables in their home garden also have ample space.\n\nSketch First Order Logic Statement:  (Garden(x) → ∀x  Space(x))\n\nPredicates:\n\"\"\"\nHomecooked(x)\nGoingOut(x)\nProfessional(x)\nSpace(x)\nGarden(x)\nTakeout(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Garden(x) → Space(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All devices belonging to the company are connected to Google Home. \n\nSketch First Order Logic Statement: ∀x (Company(x) → GoogleHome(x))\n\nPredicates:\n\"\"\"\nControlled(x)\nCompany(x)\nWifi(x)\nGoogleHome(x)\nEmployee(x)\nEasyToOperate(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Company(x) → GoogleHome(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All devices belonging to employees are connected to the company's wifi. \n\nSketch First Order Logic Statement: ∀x (Employee(x) → Wifi(x))\n\nPredicates:\n\"\"\"\nControlled(x)\nCompany(x)\nWifi(x)\nGoogleHome(x)\nEmployee(x)\nEasyToOperate(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Employee(x) → Wifi(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All devices that connect to the company's wifi are easy to operate. \n\nSketch First Order Logic Statement: ∀x (Wifi(x) → EasyToOperatex)\n\nPredicates:\n\"\"\"\nControlled(x)\nCompany(x)\nWifi(x)\nGoogleHome(x)\nEmployee(x)\nEasyToOperate(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Wifi(x) → EasyToOperate(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Musicians are either permanent members of an orchestra or have a unique musical voice or style.\n\nSketch First Order Logic Statement: ∀x (Orchestra(x) ⊕ Unique(x))\n\nPredicates:\n\"\"\"\nCapable(x)\nUnique(x)\nTouring(x)\nInteresting(x)\nOrchestra(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Orchestra(x) ⊕ Unique(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All musicians who are interesting as individual performers are capable of attracting large audiences.\n\nSketch First Order Logic Statement: ∀x (Interesting(x)( → Cap)able(x))\n\nPredicates:\n\"\"\"\nCapable(x)\nUnique(x)\nTouring(x)\nInteresting(x)\nOrchestra(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Interesting(x) → Capable(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No touring musicians are permanent members of an orchestra.\n\nSketch First Order Logic Statement: ∀x (Orchestra(x) → ¬Touring(x))\n\nPredicates:\n\"\"\"\nCapable(x)\nUnique(x)\nTouring(x)\nInteresting(x)\nOrchestra(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Orchestra(x) → ¬Touring(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Potter is a wizard and flies.\n\nSketch First Order Logic Statement: Wizard((potter) ∧ Fly(potte)r)\n\nPredicates:\n\"\"\"\nWizard(x)\nCool(x)\nKnowMagic(x)\nFly(x)\nAngry(x)\nYell(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Wizard(potter) ∧ Fly(potter)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Potter is a wizard and flies.\n\nSketch First Order Logic Statement: Wizard(potter) ∧ Flypotter\n\nPredicates:\n\"\"\"\nWizard(x)\nCool(x)\nKnowMagic(x)\nFly(x)\nAngry(x)\nYell(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Wizard(potter) ∧ Fly(potter)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Every person that knows magic can fly.\n\nSketch First Order Logic Statement: ∀x (KnowMagic(x) → Fly(x))\n\nPredicates:\n\"\"\"\nWizard(x)\nCool(x)\nKnowMagic(x)\nFly(x)\nAngry(x)\nYell(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (KnowMagic(x) → Fly(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Harry either yells and flies, or neither yells nor flies.\n\nSketch First Order Logic Statement: (Yell(harry) ∧ Fly(harry)) ⊕ (¬Yell(harry) ∧ ¬Fly(harry))\n\nPredicates:\n\"\"\"\nWizard(x)\nCool(x)\nKnowMagic(x)\nFly(x)\nAngry(x)\nYell(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "(Yell(harry) ∧ Fly(harry)) ⊕ (¬Yell(harry) ∧ ¬Fly(harry))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All produced in the US are sold in the US. \n\nSketch First Order Logic Statement:  (US(x) → SoldInUS(x))\n\nPredicates:\n\"\"\"\nSoldInUS(x)\nSoldInWalmart(x)\nLabeled(x)\nChina(x)\nCheaper(x)\nReturnedByCustomer(x)\nUS(x)\nDisplayedInHomepage(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (US(x) → SoldInUS(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All sold in the US are sold in Walmart. \n\nSketch First Order Logic Statement:  (SoldInUS(x) → ∀x  SoldInWalmart(x))\n\nPredicates:\n\"\"\"\nSoldInUS(x)\nSoldInWalmart(x)\nLabeled(x)\nChina(x)\nCheaper(x)\nReturnedByCustomer(x)\nUS(x)\nDisplayedInHomepage(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (SoldInUS(x) → SoldInWalmart(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: G-910 is either displayed on the homepage or cheaper.\n\nSketch First Order Logic Statement: ¬(DisplayedInHomepage(g910) ⊕ Cheaper(g910))\n\nPredicates:\n\"\"\"\nSoldInUS(x)\nSoldInWalmart(x)\nLabeled(x)\nChina(x)\nCheaper(x)\nReturnedByCustomer(x)\nUS(x)\nDisplayedInHomepage(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(DisplayedInHomepage(g910) ⊕ Cheaper(g910))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Products are either produced in China or the US. \n\nSketch First Order Logic Statement: ∀x (China(x) ⊕ USx)\n\nPredicates:\n\"\"\"\nSoldInUS(x)\nSoldInWalmart(x)\nLabeled(x)\nChina(x)\nCheaper(x)\nReturnedByCustomer(x)\nUS(x)\nDisplayedInHomepage(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (China(x) ⊕ US(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All produced in China are labeled. \n\nSketch First Order Logic Statement:  (China(x) → Labeled(x))\n\nPredicates:\n\"\"\"\nSoldInUS(x)\nSoldInWalmart(x)\nLabeled(x)\nChina(x)\nCheaper(x)\nReturnedByCustomer(x)\nUS(x)\nDisplayedInHomepage(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (China(x) → Labeled(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people are environmentally conscious, then they have solar panels in their homes.\n\nSketch First Order Logic Statement: ∀x (Environmental(x) → Solar(x))\n\nPredicates:\n\"\"\"\nEnvironmental(x)\nDailyMail(x)\nAmazon(x)\nSaveMoney(x)\nNeighborhood(x)\nSolar(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Environmental(x) → Solar(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people order a lot of Amazon packages, then they get a lot of daily mail delivered.\n\nSketch First Order Logic Statement: ∀x (Ama(zon(x) → )DailyMail(x))\n\nPredicates:\n\"\"\"\nEnvironmental(x)\nDailyMail(x)\nAmazon(x)\nSaveMoney(x)\nNeighborhood(x)\nSolar(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Amazon(x) → DailyMail(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Evidence can be either satisfactory or unsatisfactory.\n\nSketch First Order Logic Statement:  (Crime(x) ∧ ∀x  Evidence(x) ∧ (Satisfactory(x) ⊕ Unsatisfactory(x)))\n\nPredicates:\n\"\"\"\nSatisfactory(x)\nInvestigatePersonally(x, y)\nEvidence(x)\nCountry(x)\nCrime(x)\nProsecutor(x)\nPoliceCompInves(x)\nHandToProsecutor(x, y)\nUnsatisfactory(x)\nProsecuteTheOffender(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Crime(x) ∧ Evidence(x) ∧ (Satisfactory(x) ⊕ Unsatisfactory(x)))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Once the police complete investigations of a crime, they hand the evidence to the prosecutor. \n\nSketch First Order Logic Statement:  ∀y (Crime(y) ∧ PoliceCompInves(y) ∧ Prosecutor(x) → ∀x  Evidence(y) ∧ HandToProsecutor(x, y))\n\nPredicates:\n\"\"\"\nSatisfactory(x)\nInvestigatePersonally(x, y)\nEvidence(x)\nCountry(x)\nCrime(x)\nProsecutor(x)\nPoliceCompInves(x)\nHandToProsecutor(x, y)\nUnsatisfactory(x)\nProsecuteTheOffender(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (Crime(y) ∧ PoliceCompInves(y) ∧ Prosecutor(x) → Evidence(y) ∧ HandToProsecutor(x, y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: In Indonesia, the prosecutor only personally investigates cases of some special crimes.\n\nSketch First Order Logic Statement: ∃y ∃x (Country(indonesia) ∧ Prosecutor(x) ∧ Crime(y) → InvestigatePersonally(x, y))\n\nPredicates:\n\"\"\"\nSatisfactory(x)\nInvestigatePersonally(x, y)\nEvidence(x)\nCountry(x)\nCrime(x)\nProsecutor(x)\nPoliceCompInves(x)\nHandToProsecutor(x, y)\nUnsatisfactory(x)\nProsecuteTheOffender(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x ∃y (Country(indonesia) ∧ Prosecutor(x) ∧ Crime(y) → InvestigatePersonally(x, y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Moonwatch is not a digital watch or an automatic.\n\nSketch First Order Logic Statement: ¬DigitalWat(ch(moonwatch) ⊕ Auto)maticWatch(moonwatch)\n\nPredicates:\n\"\"\"\nAutomaticWatch(x)\nMechanicalWatch(x)\nDigitalWatch(x)\nBatteryPoweredWatch(x)\nSmartWatch(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬DigitalWatch(moonwatch) ⊕ AutomaticWatch(moonwatch)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No watch that is battery-powered is automatic.\n\nSketch First Order Logic Statement:  (BatteryPoweredWatch(x) → ¬AutomaticWatch(x))\n\nPredicates:\n\"\"\"\nAutomaticWatch(x)\nMechanicalWatch(x)\nDigitalWatch(x)\nBatteryPoweredWatch(x)\nSmartWatch(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (BatteryPoweredWatch(x) → ¬AutomaticWatch(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All digital watches are battery-powered.\n\nSketch First Order Logic Statement:  (DigitalWatch(x) → ∀x  BatteryPoweredWatch(x))\n\nPredicates:\n\"\"\"\nAutomaticWatch(x)\nMechanicalWatch(x)\nDigitalWatch(x)\nBatteryPoweredWatch(x)\nSmartWatch(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (DigitalWatch(x) → BatteryPoweredWatch(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some mechanical watches are automatic.\n\nSketch First Order Logic Statement:  (MechanicalWatch(x) ∧ AutomaticWatch(x))\n\nPredicates:\n\"\"\"\nAutomaticWatch(x)\nMechanicalWatch(x)\nDigitalWatch(x)\nBatteryPoweredWatch(x)\nSmartWatch(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (MechanicalWatch(x) ∧ AutomaticWatch(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A country cannot simultaneously regulate the exchange rate and successfully control inflation.\n\nSketch First Order Logic Statement: ¬( (InfControl(x) ∧ ∀x  ExRate(x)))\n\nPredicates:\n\"\"\"\nExRate(x)\nStongCurr(x)\nExportFall(x)\nEffMonPolicy(x)\nEmbargo(x)\nInfControl(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(∀x (InfControl(x) ∧ ExRate(x)))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Video Gag is a French television series that airs weekly.\n\nSketch First Order Logic Statement: ∀x (VideoGag(x) → FrenchTelevision(x) ∧ AirsWeekly(x))\n\nPredicates:\n\"\"\"\nVideoGag(x)\nAirsWeekly(x)\nFrench(x)\nFunnyVideos(x)\nChannelTF1(x)\nFrenchTelevision(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (VideoGag(x) → FrenchTelevision(x) ∧ AirsWeekly(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Video Gag airs on the French broadcast channel TF1. \n\nSketch First Order Logic Statement:  (VideoGag(x) → ChannelTF1(x))\n\nPredicates:\n\"\"\"\nVideoGag(x)\nAirsWeekly(x)\nFrench(x)\nFunnyVideos(x)\nChannelTF1(x)\nFrenchTelevision(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (VideoGag(x) → ChannelTF1(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All iPhones are cellphones. \n\nSketch First Order Logic Statement: ∀x (Iphone(x) → Cellphone(x))\n\nPredicates:\n\"\"\"\nThing(x)\nEngineer(x)\nHuman(x)\nPhone(x)\nIphone(x)\nWorker(x)\nCellphone(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Iphone(x) → Cellphone(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Jack is either an engineer or a worker.\n\nSketch First Order Logic Statement: Engineer(jack) ⊕ Worker(jack) \n\nPredicates:\n\"\"\"\nThing(x)\nEngineer(x)\nHuman(x)\nPhone(x)\nIphone(x)\nWorker(x)\nCellphone(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Engineer(jack) ⊕ Worker(jack) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All iPhones are cellphones. \n\nSketch First Order Logic Statement: ∀x (Iphone(x) → C(ellphon)e(x))\n\nPredicates:\n\"\"\"\nThing(x)\nEngineer(x)\nHuman(x)\nPhone(x)\nIphone(x)\nWorker(x)\nCellphone(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Iphone(x) → Cellphone(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All engineers are workers.\n\nSketch First Order Logic Statement:  (Engineer(x) → Worker(x))\n\nPredicates:\n\"\"\"\nThing(x)\nEngineer(x)\nHuman(x)\nPhone(x)\nIphone(x)\nWorker(x)\nCellphone(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Engineer(x) → Worker(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some phones are iPhones.\n\nSketch First Order Logic Statement:  (Phone(x) ∧ ∃x  IPhone(x))\n\nPredicates:\n\"\"\"\nElectronic(x)\nPhone(x)\nIPhone(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Phone(x) ∧ IPhone(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Metropolitan Museum of Art is a museum in NYC.\n\nSketch First Order Logic Statement: Museum(metropolitanMuseumofArt) ∧ InNYC(metropolitanMuseumofArt)\n\nPredicates:\n\"\"\"\nInNYC(x)\nInclude(x, y)\nMuseum(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Museum(metropolitanMuseumofArt) ∧ InNYC(metropolitanMuseumofArt)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Museum of Modern Art (MoMA) is a museum if NYC. \n\nSketch First Order Logic Statement: Museum(museumofModernArt) ∧ InNYC(museumofModernArt)\n\nPredicates:\n\"\"\"\nInNYC(x)\nInclude(x, y)\nMuseum(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Museum(museumofModernArt) ∧ InNYC(museumofModernArt)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Metropolitan Museum of Art includes Bytantine and Islamic Art. \n\nSketch First Order Logic Statement: Include(metropolitanMuseumofArt, byzantineArt) ∧ Include(metropolitanMuseumofArt, islamicArt)\n\nPredicates:\n\"\"\"\nInNYC(x)\nInclude(x, y)\nMuseum(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Include(metropolitanMuseumofArt, byzantineArt) ∧ Include(metropolitanMuseumofArt, islamicArt)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Benji is not a person who likes eating cheese and a person who studies Spanish.\n\nSketch First Order Logic Statement: ¬(Cheese(benji) ∧ Spanish(benji))\n\nPredicates:\n\"\"\"\nSpanish(x)\nFrancophile(x)\nSpainFav(x)\nFrench(x)\nCheese(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(Cheese(benji) ∧ Spanish(benji))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Benji is not a person who likes eating cheese and a person who studies Spanish.\n\nSketch First Order Logic Statement: ¬(Cheese(benji) ∧ Spanish(benji))\n\nPredicates:\n\"\"\"\nSpanish(x)\nFrancophile(x)\nSpainFav(x)\nFrench(x)\nCheese(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(Cheese(benji) ∧ Spanish(benji))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A person likes Spain as their favorite country or likes eating cheese.\n\nSketch First Order Logic Statement:  (SpainFav(x) ∨ ∀x  Cheese(x))\n\nPredicates:\n\"\"\"\nSpanish(x)\nFrancophile(x)\nSpainFav(x)\nFrench(x)\nCheese(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (SpainFav(x) ∨ Cheese(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No cities are villages.\n\nSketch First Order Logic Statement:  (City(x) → ∀x  ¬Village(x))\n\nPredicates:\n\"\"\"\nCity(x)\nProvince(x)\nPopulation155(x)\nLocatedIn(x, y)\nDutch(x)\nVillage(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (City(x) → ¬Village(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Gasteren is village located in the province of Drenthe.\n\nSketch First Order Logic Statement: Village(gasteren) ∧ Province(drenthe) ∧ LocatedIn(gasteren, drenthe)\n\nPredicates:\n\"\"\"\nCity(x)\nProvince(x)\nPopulation155(x)\nLocatedIn(x, y)\nDutch(x)\nVillage(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Village(gasteren) ∧ Province(drenthe) ∧ LocatedIn(gasteren, drenthe)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Drenthe is a Dutch province. \n\nSketch First Order Logic Statement: Province(drenthe) ∧ Dutch(drenthe)\n\nPredicates:\n\"\"\"\nCity(x)\nProvince(x)\nPopulation155(x)\nLocatedIn(x, y)\nDutch(x)\nVillage(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Province(drenthe) ∧ Dutch(drenthe)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All animals are either vertebrates or invertebrates.\n\nSketch First Order Logic Statement:  (Animal(x) → Invertebrate(x) ⊕ Vertebrate(x))\n\nPredicates:\n\"\"\"\nHyrax(x)\nVertebrate(x)\nMammal(x)\nPlatypuses(x)\nAnimal(x)\nGrebes(x)\nLayEgg(x)\nInvertebrate(x)\nEchidnas(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Animal(x) → Invertebrate(x) ⊕ Vertebrate(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Grebes lay eggs.\n\nSketch First Order Logic Statement: ∀x (Grebes(x) → LayEgg(x))\n\nPredicates:\n\"\"\"\nHyrax(x)\nVertebrate(x)\nMammal(x)\nPlatypuses(x)\nAnimal(x)\nGrebes(x)\nLayEgg(x)\nInvertebrate(x)\nEchidnas(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Grebes(x) → LayEgg(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No mammals are invertebrates.\n\nSketch First Order Logic Statement: ∀x (Mammalx) → ¬Invertebrate(x)\n\nPredicates:\n\"\"\"\nHyrax(x)\nVertebrate(x)\nMammal(x)\nPlatypuses(x)\nAnimal(x)\nGrebes(x)\nLayEgg(x)\nInvertebrate(x)\nEchidnas(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Mammal(x) → ¬Invertebrate(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Bobby Flynn was born in Queensland.\n\nSketch First Order Logic Statement: BornIn(bobbyFlynn, queensland)\n\nPredicates:\n\"\"\"\nCompetedOnAustralianIdol(x)\nMadeNationWideTour2007(x)\nSinger(x)\nFinished7th(x)\nIsMember(x, y)\nBornIn(x, y)\nSongWriter(x)\nAustralianCitizen(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "BornIn(bobbyFlynn, queensland)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Bobby Flynn is a member of The Omega Three band.\n\nSketch First Order Logic Statement: IsMember(bobbyFlynn, theOmegaThreeBand)\n\nPredicates:\n\"\"\"\nCompetedOnAustralianIdol(x)\nMadeNationWideTour2007(x)\nSinger(x)\nFinished7th(x)\nIsMember(x, y)\nBornIn(x, y)\nSongWriter(x)\nAustralianCitizen(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "IsMember(bobbyFlynn, theOmegaThreeBand)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Bobby Flynn is a member of The Omega Three band.\n\nSketch First Order Logic Statement: IsMember(bobbyFlynn, theOmegaThreeBand)\n\nPredicates:\n\"\"\"\nCompetedOnAustralianIdol(x)\nMadeNationWideTour2007(x)\nSinger(x)\nFinished7th(x)\nIsMember(x, y)\nBornIn(x, y)\nSongWriter(x)\nAustralianCitizen(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "IsMember(bobbyFlynn, theOmegaThreeBand)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All enzymes are organic compounds.\n\nSketch First Order Logic Statement:  (Enzyme(x) → OrganicCompound(x))\n\nPredicates:\n\"\"\"\nProtein(x)\nOrganicCompound(x)\nEnzyme(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Enzyme(x) → OrganicCompound(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Maggie Friedman produced and developed Eastwick.\n\nSketch First Order Logic Statement: Produced(maggiefriedman, eastwick) ∧ Developed(maggiefriedman, eastw(ic)k)\n\nPredicates:\n\"\"\"\nBy(x, y)\nExecutiveProducerOf(x, y)\nLifetimeTelevisionSeries(x)\nProducer(x)\nDrama(x)\nShowRunnerOf(x, y)\nSeries(x)\nProduced(x, y)\nDeveloped(x, y)\nScreenwriter(x)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Produced(maggiefriedman, eastwick) ∧ Developed(maggiefriedman, eastwick)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Maggie Friedman produced and developed Eastwick.\n\nSketch First Order Logic Statement: Produced(maggiefriedman, eastwick) ∧ Developed(maggiefriedman, eastwick)\n\nPredicates:\n\"\"\"\nBy(x, y)\nExecutiveProducerOf(x, y)\nLifetimeTelevisionSeries(x)\nProducer(x)\nDrama(x)\nShowRunnerOf(x, y)\nSeries(x)\nProduced(x, y)\nDeveloped(x, y)\nScreenwriter(x)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Produced(maggiefriedman, eastwick) ∧ Developed(maggiefriedman, eastwick)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Maggie Friedman produced and developed Eastwick.\n\nSketch First Order Logic Statement: Produced(maggiefriedman, eastwick) ∧ Developed(maggiefriedman, eastwick)\n\nPredicates:\n\"\"\"\nBy(x, y)\nExecutiveProducerOf(x, y)\nLifetimeTelevisionSeries(x)\nProducer(x)\nDrama(x)\nShowRunnerOf(x, y)\nSeries(x)\nProduced(x, y)\nDeveloped(x, y)\nScreenwriter(x)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Produced(maggiefriedman, eastwick) ∧ Developed(maggiefriedman, eastwick)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a company has employees working for them somewhere, then they have an office there.\n\nSketch First Order Logic Statement: ∀x ∀x ∀z (C(ompany(x) ∧ )WorkedFor(y, x) ∧ WorkedIn(y, z) → HasOfficeIn(x, z))\n\nPredicates:\n\"\"\"\nCompany(x)\nElectricalEngineer(x)\nWorkedIn(x, y)\nWorkedFor(x, y)\nGreek(x)\nHasOfficeIn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀x ∀z (Company(x) ∧ WorkedFor(y, x) ∧ WorkedIn(y, z) → HasOfficeIn(x, z))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a company has employees working for them somewhere, then they have an office there.\n\nSketch First Order Logic Statement: ∀x ∀x ∀z (Company(x) ∧ WorkedFor(y, x) ∧ WorkedIn(y, z) → HasOfficeIn(x, z))\n\nPredicates:\n\"\"\"\nCompany(x)\nElectricalEngineer(x)\nWorkedIn(x, y)\nWorkedFor(x, y)\nGreek(x)\nHasOfficeIn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀x ∀z (Company(x) ∧ WorkedFor(y, x) ∧ WorkedIn(y, z) → HasOfficeIn(x, z))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Nevertheless, \"Hooray! Hooray! It's a Holi-Holiday!\" broke Boney M's streak of consecutive German #1 singles.\n\nSketch First Order Logic Statement: Song(hooray) ∧ ¬N1GermanSingle(hooray)\n\nPredicates:\n\"\"\"\nBy(x, y)\nHitEurope(x)\nSong(x)\nPeaksBelowN1(x)\nN1GermanSingle(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Song(hooray) ∧ ¬N1GermanSingle(hooray)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: \"Hooray! Hooray! It's a Holi-Holiday!\" was a big hit all over Europe.\n\nSketch First Order Logic Statement: Song(hooray) ∧ HitEurope(hooray)\n\nPredicates:\n\"\"\"\nBy(x, y)\nHitEurope(x)\nSong(x)\nPeaksBelowN1(x)\nN1GermanSingle(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Song(hooray) ∧ HitEurope(hooray)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A song that peaks below #1 on the german charts is also a song that is not the #1 single\n\nSketch First Order Logic Statement: ∀x (PeaksBelowN1(x) ↔ ¬N1GermanSingle(x))\n\nPredicates:\n\"\"\"\nBy(x, y)\nHitEurope(x)\nSong(x)\nPeaksBelowN1(x)\nN1GermanSingle(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (PeaksBelowN1(x) ↔ ¬N1GermanSingle(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Bakers who can also make scrambled eggs can make a good breakfast.\n\nSketch First Order Logic Statement: ∀x (Baker(x) ∧ MakeScrambledEggs(x) → MakeGoodBreakfast(x))\n\nPredicates:\n\"\"\"\nMakeMuffins(x)\nCook(x)\nMakeCookies(x)\nBaker(x)\nMakeGoodBreakfast(x)\nMakeScrambledEggs(x)\nChef(x)\nMakePasta(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ((Baker(x) ∧ MakeScrambledEggs(x)) → MakeGoodBreakfast(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People who cook can make scrambled eggs and pasta.\n\nSketch First Order Logic Statement: ∀x (Cook(x) → MakeScrambledEggs(x) ∧ MakePasta(x))\n\nPredicates:\n\"\"\"\nMakeMuffins(x)\nCook(x)\nMakeCookies(x)\nBaker(x)\nMakeGoodBreakfast(x)\nMakeScrambledEggs(x)\nChef(x)\nMakePasta(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Cook(x) → (MakeScrambledEggs(x) ∧ MakePasta(x)))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries.\n\nSketch First Order Logic Statement: ∃x (Administers(ets, x) ∧ InternationalTest(x) ∧ (TOEFL(x) ∨ TOEIC(x) ∨ GRE(x) ∨ SubjectTests(x)))\n\nPredicates:\n\"\"\"\nDevelops(x, y)\nFor(x, y)\nAdministers(x, y)\nAssociatedWith(x, y)\nIn(x, y)\nUsedFor(x, y)\nGRE(x)\nStandardizedTest(x)\nTOEFL(x)\nInternationalTest(x)\nSubjectTests(x)\nStateWideAssesment(x)\nTOEIC(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Administers(ets, x) ∧ InternationalTest(x) ∧ (TOEFL(x) ∨ TOEIC(x) ∨ GRE(x) ∨ SubjectTests(x)))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Many of the assessments ETS develops are associated with entry to the US tertiary and quaternary education institutions. \n\nSketch First Order Logic Statement: ∃x (Develops(ets, x) ∧ AssociatedWith(x, entrytou(se)ducationinstitutions))\n\nPredicates:\n\"\"\"\nDevelops(x, y)\nFor(x, y)\nAdministers(x, y)\nAssociatedWith(x, y)\nIn(x, y)\nUsedFor(x, y)\nGRE(x)\nStandardizedTest(x)\nTOEFL(x)\nInternationalTest(x)\nSubjectTests(x)\nStateWideAssesment(x)\nTOEIC(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Develops(ets, x) ∧ AssociatedWith(x, entrytouseducationinstitutions))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: ETS administers international tests including the TOEFL, TOEIC, GRE and subject tests in more than 180 countries.\n\nSketch First Order Logic Statement: ∃x (Administers(ets, x) ∧ InternationalTest(x) ∧ (TOEFL(x) ∨ TOEIC(x) ∨ GRE(x) ∨ SubjectTests(x)))\n\nPredicates:\n\"\"\"\nDevelops(x, y)\nFor(x, y)\nAdministers(x, y)\nAssociatedWith(x, y)\nIn(x, y)\nUsedFor(x, y)\nGRE(x)\nStandardizedTest(x)\nTOEFL(x)\nInternationalTest(x)\nSubjectTests(x)\nStateWideAssesment(x)\nTOEIC(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Administers(ets, x) ∧ InternationalTest(x) ∧ (TOEFL(x) ∨ TOEIC(x) ∨ GRE(x) ∨ SubjectTests(x)))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people love to travel and vacation often, then they often take study abroad semesters to Europe.\n\nSketch First Order Logic Statement: ∀x (Travel(x) → Europe(x()))\n\nPredicates:\n\"\"\"\nGelato(x)\nEurope(x)\nResist(x)\nItaly(x)\nRegret(x)\nTravel(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Travel(x) → Europe(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people love to travel and vacation often, then they often take study abroad semesters to Europe.\n\nSketch First Order Logic Statement: ∀x (Travel(x) → Europe(x))\n\nPredicates:\n\"\"\"\nGelato(x)\nEurope(x)\nResist(x)\nItaly(x)\nRegret(x)\nTravel(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Travel(x) → Europe(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All people who enjoy eating gelato ice cream would enjoy a vacation to Italy.\n\nSketch First Order Logic Statement:  (Gelato(x) → ∀x  Italy(x))\n\nPredicates:\n\"\"\"\nGelato(x)\nEurope(x)\nResist(x)\nItaly(x)\nRegret(x)\nTravel(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Gelato(x) → Italy(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All PhD graduates can work full time. \n\nSketch First Order Logic Statement: ∀x (PhdGraduate(x) → WorkFullTime(x))\n\nPredicates:\n\"\"\"\nWorkFullTime(x)\nFullTimeAcademic(x)\nPhdGraduate(x)\nStudyAbroad(x)\nStudentVisa(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (PhdGraduate(x) → WorkFullTime(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Everyone who wants to study abroad needs to have a student visa.\n\nSketch First Order Logic Statement: ∀x (StudyAbroad(x) → Student(Visa)(x))\n\nPredicates:\n\"\"\"\nWorkFullTime(x)\nFullTimeAcademic(x)\nPhdGraduate(x)\nStudyAbroad(x)\nStudentVisa(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (StudyAbroad(x) → StudentVisa(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Everyone who wants to study abroad needs to have a student visa.\n\nSketch First Order Logic Statement: ∀x (StudyAbroad(x) → StudentVisa(x))\n\nPredicates:\n\"\"\"\nWorkFullTime(x)\nFullTimeAcademic(x)\nPhdGraduate(x)\nStudyAbroad(x)\nStudentVisa(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (StudyAbroad(x) → StudentVisa(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The installment sales method is the approach to recognize revenue under the US GAAP.\n\nSketch First Order Logic Statement:  (UsesGAAP(x) → UsesInstallmentMethod(x))\n\nPredicates:\n\"\"\"\nUsesGAAP(x)\nRecognizedWhen(x, y)\nUsesAccruralAccounting(x)\nWorksFor(x, y)\nUsesCashAccounting(x)\nUsesInstallmentMethod(x)\nDevelopedBy(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (UsesGAAP(x) → UsesInstallmentMethod(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: In cash accounting, revenues are recognized when cash is received.\n\nSketch First Order Logic Statement:  (UsesCashAccounting(x) → ∀x  RecognizedWhen(revenues, cashrecieved))\n\nPredicates:\n\"\"\"\nUsesGAAP(x)\nRecognizedWhen(x, y)\nUsesAccruralAccounting(x)\nWorksFor(x, y)\nUsesCashAccounting(x)\nUsesInstallmentMethod(x)\nDevelopedBy(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (UsesCashAccounting(x) → RecognizedWhen(revenues, cashrecieved))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Sally works for the US Securities and Exchange Commission.\n\nSketch First Order Logic Statement: WorksFor(sally, ussecuritiesandexchangecommission)\n\nPredicates:\n\"\"\"\nUsesGAAP(x)\nRecognizedWhen(x, y)\nUsesAccruralAccounting(x)\nWorksFor(x, y)\nUsesCashAccounting(x)\nUsesInstallmentMethod(x)\nDevelopedBy(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "WorksFor(sally, ussecuritiesandexchangecommission)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a person is respected by others, then he/she contributes to the country. \n\nSketch First Order Logic Statement: ∀x (Respected(x) → ContributeToCountry(x))\n\nPredicates:\n\"\"\"\nPrison(x)\nThief(x)\nHaveVisitWithoutAnyFees(x)\nArmy(x)\nContributeToCountry(x)\nRespected(x)\nBadRecord(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Respected(x) → ContributeToCountry(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: James is either with a bad record in the local state or respected by others. \n\nSketch First Order Logic Statement: BadRecord(james) ⊕ Respected(james)\n\nPredicates:\n\"\"\"\nPrison(x)\nThief(x)\nHaveVisitWithoutAnyFees(x)\nArmy(x)\nContributeToCountry(x)\nRespected(x)\nBadRecord(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "BadRecord(james) ⊕ Respected(james)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All people who once stayed in prison for some time have a bad record in the local state. \n\nSketch First Order Logic Statement: ∀x (Prison(x) → BadReco(rd()x))\n\nPredicates:\n\"\"\"\nPrison(x)\nThief(x)\nHaveVisitWithoutAnyFees(x)\nArmy(x)\nContributeToCountry(x)\nRespected(x)\nBadRecord(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Prison(x) → BadRecord(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All people who once were sentenced for thief stayed in prison for some time. \n\nSketch First Order Logic Statement: ∀x (Thief(x) → Prison(x))\n\nPredicates:\n\"\"\"\nPrison(x)\nThief(x)\nHaveVisitWithoutAnyFees(x)\nArmy(x)\nContributeToCountry(x)\nRespected(x)\nBadRecord(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Thief(x) → Prison(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Croton River is in southwestern New York.\n\nSketch First Order Logic Statement: In(crotonriver, so(uthwesternnewy)ork)\n\nPredicates:\n\"\"\"\nDrainageBasinOf(x, y)\nIn(x, y)\nFrom(x, y)\nFlowsTo(x, y)\nWater(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "In(crotonriver, southwesternnewyork)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Croton River is in southwestern New York.\n\nSketch First Order Logic Statement: In(crotonriver, southwesternnewyork)\n\nPredicates:\n\"\"\"\nDrainageBasinOf(x, y)\nIn(x, y)\nFrom(x, y)\nFlowsTo(x, y)\nWater(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "In(crotonriver, southwesternnewyork)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Bronx is in New York.\n\nSketch First Order Logic Statement: In(bronx, newyork)\n\nPredicates:\n\"\"\"\nDrainageBasinOf(x, y)\nIn(x, y)\nFrom(x, y)\nFlowsTo(x, y)\nWater(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "In(bronx, newyork)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No nuclear-powered submarines are commercial vessels.\n\nSketch First Order Logic Statement:  (NuclearPoweredSubmarine(x) → ∀x  ¬CommercialVessel(x))\n\nPredicates:\n\"\"\"\nNuclearPoweredSubmarine(x)\nWarship(x)\nCommercialVessel(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (NuclearPoweredSubmarine(x) → ¬CommercialVessel(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a album is written by a rock band, then the genre of the album is rock.\n\nSketch First Order Logic Statement:  ∀y ∀z (AlbumByBand(x, y) ∧ RockBand(y, z) → ∀x  Genre(x, rock))\n\nPredicates:\n\"\"\"\nAlbumAward(x, y)\nAlbumByBand(x, y)\nRockBand(x, y)\nSongInAlbum(x, y)\nGenre(x, y)\nRockBandAward(x, y)\nSongInFilm(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y ∀z (AlbumByBand(x, y) ∧ RockBand(y, z) → Genre(x, rock))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A song in Trouble at the Henhouse appeared in a film.\n\nSketch First Order Logic Statement: ∃x (SongInFilm(x) ∧ SongInAlbum(x, trouble_at_the_Henhouse))\n\nPredicates:\n\"\"\"\nAlbumAward(x, y)\nAlbumByBand(x, y)\nRockBand(x, y)\nSongInAlbum(x, y)\nGenre(x, y)\nRockBandAward(x, y)\nSongInFilm(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (SongInFilm(x) ∧ SongInAlbum(x, trouble_at_the_Henhouse))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Trouble at the Henhouse is an album by The Tragically Hip.\n\nSketch First Order Logic Statement: AlbumByBand(trouble_at_the_Henhouse, the_Tragically_Hip)\n\nPredicates:\n\"\"\"\nAlbumAward(x, y)\nAlbumByBand(x, y)\nRockBand(x, y)\nSongInAlbum(x, y)\nGenre(x, y)\nRockBandAward(x, y)\nSongInFilm(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "AlbumByBand(trouble_at_the_Henhouse, the_Tragically_Hip)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Daniel’s older sister works at Meta as a technical sourcer. \n\nSketch First Order Logic Statement:  WorksAtMeta(danielsOlderSister) ∧ TechnicalSourcer(danielsOlderSister)\n\nPredicates:\n\"\"\"\nTechnicalSourcer(x)\nWorksAtMeta(x)\nGraduatedFromStanfordUniversity(x)\nDoctorPracticingInternalMedicine(x, y)\nStudiedBioengineering(x, y)\nSoftwareEngineer(x)\nWorksAt(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " WorksAtMeta(danielsOlderSister) ∧ TechnicalSourcer(danielsOlderSister)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Daniel is a software engineer and he works at Palantir Technologies.\n\nSketch First Order Logic Statement: SoftwareEngineer(daniel) ∧ WorksAtdaniel, palantirTechnologies\n\nPredicates:\n\"\"\"\nTechnicalSourcer(x)\nWorksAtMeta(x)\nGraduatedFromStanfordUniversity(x)\nDoctorPracticingInternalMedicine(x, y)\nStudiedBioengineering(x, y)\nSoftwareEngineer(x)\nWorksAt(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "SoftwareEngineer(daniel) ∧ WorksAt(daniel, palantirTechnologies)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Daniel’s dad and older sister both graduated from Stanford University.\n\nSketch First Order Logic Statement:  GraduatedFromStanfordUniversity(danielsOlderSister) ∧ GraduatedFromStanfordUniversity(danielsDad)\n\nPredicates:\n\"\"\"\nTechnicalSourcer(x)\nWorksAtMeta(x)\nGraduatedFromStanfordUniversity(x)\nDoctorPracticingInternalMedicine(x, y)\nStudiedBioengineering(x, y)\nSoftwareEngineer(x)\nWorksAt(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " GraduatedFromStanfordUniversity(danielsOlderSister) ∧ GraduatedFromStanfordUniversity(danielsDad)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Airbus made more in revenue than Boeing last year.\n\nSketch First Order Logic Statement: MoreinRevenue(airbus, boeing)\n\nPredicates:\n\"\"\"\nProducedBy(x, y)\nCommercialAircraft(x)\nMoreinRevenue(x, y)\nAmericanAirlinesAircraft(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "MoreinRevenue(airbus, boeing)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All commerical aircraft are produced by either Boeing or Airbus.\n\nSketch First Order Logic Statement: ∀x ((CommercialAircraft(x)) → ProducedBy(x, boeing) ⊕ ProducedBy(x, airbus))\n\nPredicates:\n\"\"\"\nProducedBy(x, y)\nCommercialAircraft(x)\nMoreinRevenue(x, y)\nAmericanAirlinesAircraft(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (CommercialAircraft(x) → ProducedBy(x, boeing) ⊕ ProducedBy(x, airbus))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All commerical aircraft are produced by either Boeing or Airbus.\n\nSketch First Order Logic Statement: ∀x (CommercialAircraft(x) → ProducedBy(x, boeing) ⊕ ProducedBy(x, airbus))\n\nPredicates:\n\"\"\"\nProducedBy(x, y)\nCommercialAircraft(x)\nMoreinRevenue(x, y)\nAmericanAirlinesAircraft(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (CommercialAircraft(x) → ProducedBy(x, boeing) ⊕ ProducedBy(x, airbus))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All commerical aircraft are produced by either Boeing or Airbus.\n\nSketch First Order Logic Statement: ∀x (CommercialAircraft(x) → ProducedBy(x, boeing) ⊕ ProducedBy(x, airbus))\n\nPredicates:\n\"\"\"\nProducedBy(x, y)\nCommercialAircraft(x)\nMoreinRevenue(x, y)\nAmericanAirlinesAircraft(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (CommercialAircraft(x) → ProducedBy(x, boeing) ⊕ ProducedBy(x, airbus))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Luzon is an island in the Philippines.\n\nSketch First Order Logic Statement: Island(luzon)( ∧ In(luzon,) philippines)\n\nPredicates:\n\"\"\"\nKilled(x)\nStruckIn(x, y)\nIsland(x)\nEarthquake(x)\nIn(x, y)\nStruck(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Island(luzon) ∧ In(luzon, philippines)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Luzon is an island in the Philippines.\n\nSketch First Order Logic Statement: Island(luzon) ∧ In(luzon, philippines)\n\nPredicates:\n\"\"\"\nKilled(x)\nStruckIn(x, y)\nIsland(x)\nEarthquake(x)\nIn(x, y)\nStruck(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Island(luzon) ∧ In(luzon, philippines)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People died in the December 1999 earthquake in Luzon.\n\nSketch First Order Logic Statement: ∃x (Earthquake(x) ∧ StruckIn(x, december1999) ∧ Struck(x, luzon) ∧ Killed(x))\n\nPredicates:\n\"\"\"\nKilled(x)\nStruckIn(x, y)\nIsland(x)\nEarthquake(x)\nIn(x, y)\nStruck(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Earthquake(x) ∧ StruckIn(x, december1999) ∧ Struck(x, luzon) ∧ Killed(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People who spend a lot of money at casinos and other betting games visit the Las Vegas Strip regularly.\n\nSketch First Order Logic Statement:  (Casinos(x) → LasVegas(x))\n\nPredicates:\n\"\"\"\nDisposableIncome(x)\nNewspapers(x)\nCasinos(x)\nInvests(x)\nLasVegas(x)\nGambling(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Casinos(x) → LasVegas(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people invest in the public stock market regularly, then they read the Wall Street Journal and other newspapers regularly to keep updated on financial metrics.\n\nSketch First Order Logic Statement: ∀x (Investsx) → Newspapers(x)\n\nPredicates:\n\"\"\"\nDisposableIncome(x)\nNewspapers(x)\nCasinos(x)\nInvests(x)\nLasVegas(x)\nGambling(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Invests(x) → Newspapers(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People either invest in the public stock market regularly or enjoy gambling regularly.\n\nSketch First Order Logic Statement: ∀x (Invests(x) ∨( Gambling(x)))\n\nPredicates:\n\"\"\"\nDisposableIncome(x)\nNewspapers(x)\nCasinos(x)\nInvests(x)\nLasVegas(x)\nGambling(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Invests(x) ∨ Gambling(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All students learning piano can strike the right notes. \n\nSketch First Order Logic Statement: ∀x (Student(x) ∧ LearningPiano(x) → StrikeRightNotes(x))\n\nPredicates:\n\"\"\"\nLearningPiano(x)\nFindCoordinationChallenging(x)\nStartCoordination(x)\nStrikeRightNotes(x)\nGetRhythmRight(x)\nGoodAtCoordination(x)\nStudent(x)\nPutEmotion(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Student(x) ∧ LearningPiano(x) → StrikeRightNotes(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All students learning piano can strike the right notes. \n\nSketch First Order Logic Statement: ∀x (Student(x) ∧ LearningPiano(x) → StrikeRightNotes(x))\n\nPredicates:\n\"\"\"\nLearningPiano(x)\nFindCoordinationChallenging(x)\nStartCoordination(x)\nStrikeRightNotes(x)\nGetRhythmRight(x)\nGoodAtCoordination(x)\nStudent(x)\nPutEmotion(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Student(x) ∧ LearningPiano(x) → StrikeRightNotes(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Barbara Ann Marshall participated in the preliminary heat in the freestyle relay.\n\nSketch First Order Logic Statement: Participa(tedIn(barbaraannmarshall, prelim)inaryheatfreestylerelay)\n\nPredicates:\n\"\"\"\nParticipatedIn(x, y)\nFormerSwimmer(x)\nRepresented(x, y)\nRecieved(x, y)\nRelaySwimmer(x)\nFormerWorldRecordHolder(x)\nHomeCountry(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "ParticipatedIn(barbaraannmarshall, preliminaryheatfreestylerelay)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Barbara Ann Marshall participated in the 1972 Summer Olympics.\n\nSketch First Order Logic Statement: ParticipatedIn(barbaraannmarshall, summer1972olympics)\n\nPredicates:\n\"\"\"\nParticipatedIn(x, y)\nFormerSwimmer(x)\nRepresented(x, y)\nRecieved(x, y)\nRelaySwimmer(x)\nFormerWorldRecordHolder(x)\nHomeCountry(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "ParticipatedIn(barbaraannmarshall, summer1972olympics)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The yellow stage comes after the red stage.\n\nSketch First Order Logic Statement: ∀x (Player(x) → RedToYellow(x))\n\nPredicates:\n\"\"\"\nYellowToGreen(x)\nStartRed(x)\nRedToYellow(x)\nRedToGreen(x)\nPlayer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Player(x) → RedToYellow(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All players must proceed one stage at a time.\n\nSketch First Order Logic Statement:  (Player(x) → ¬RedToGreen(x))\n\nPredicates:\n\"\"\"\nYellowToGreen(x)\nStartRed(x)\nRedToYellow(x)\nRedToGreen(x)\nPlayer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Player(x) → ¬RedToGreen(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Each player begins at the red stage.\n\nSketch First Order Logic Statement:  (Player(x) → ∀x  StartRed(x))\n\nPredicates:\n\"\"\"\nYellowToGreen(x)\nStartRed(x)\nRedToYellow(x)\nRedToGreen(x)\nPlayer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Player(x) → StartRed(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People are either scared of animals or love animals.\n\nSketch First Order Logic Statement: ∀x (ScaredOfAnimals(x) ∨ LoveAnimals(x))\n\nPredicates:\n\"\"\"\nLoveAnimals(x)\nGoodWithPets(x)\nScaredOfAnimals(x)\nPhysical(x)\nWords(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (ScaredOfAnimals(x) ∨ LoveAnimals(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People either value physical touch as an especially important love language or value words of affirmation as an especially important love language.\n\nSketch First Order Logic Statement: ∀x (Physical(x) ∨ Words(x))\n\nPredicates:\n\"\"\"\nLoveAnimals(x)\nGoodWithPets(x)\nScaredOfAnimals(x)\nPhysical(x)\nWords(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Physical(x) ∨ Words(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People either value physical touch as an especially important love language or value words of affirmation as an especially important love language.\n\nSketch First Order Logic Statement: ∀x (Physical(x) ∨ Words(x))\n\nPredicates:\n\"\"\"\nLoveAnimals(x)\nGoodWithPets(x)\nScaredOfAnimals(x)\nPhysical(x)\nWords(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Physical(x) ∨ Words(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People are either scared of animals or love animals.\n\nSketch First Order Logic Statement: ∀x (ScaredOfAnimals(x) ∨ LoveAnimals(x))\n\nPredicates:\n\"\"\"\nLoveAnimals(x)\nGoodWithPets(x)\nScaredOfAnimals(x)\nPhysical(x)\nWords(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (ScaredOfAnimals(x) ∨ LoveAnimals(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People are either scared of animals or love animals.\n\nSketch First Order Logic Statement: ∀x (ScaredOfAnimals(x) ∨ LoveAnimals(x))\n\nPredicates:\n\"\"\"\nLoveAnimals(x)\nGoodWithPets(x)\nScaredOfAnimals(x)\nPhysical(x)\nWords(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (ScaredOfAnimals(x) ∨ LoveAnimals(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All birds have wings.\n\nSketch First Order Logic Statement:  (Bird(x) → ∀x  Winged(x))\n\nPredicates:\n\"\"\"\nWinged(x)\nBird(x)\nReptile(x)\nIguana(x)\nFly(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Bird(x) → Winged(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: John is neither an iguana nor a bird.\n\nSketch First Order Logic Statement: ¬Iguana(john) ⊕ Bird(john)\n\nPredicates:\n\"\"\"\nWinged(x)\nBird(x)\nReptile(x)\nIguana(x)\nFly(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬Iguana(john) ⊕ Bird(john)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: John is neither an iguana nor a bird.\n\nSketch First Order Logic Statement: ¬Iguana(john) ⊕ Bird(john)\n\nPredicates:\n\"\"\"\nWinged(x)\nBird(x)\nReptile(x)\nIguana(x)\nFly(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬Iguana(john) ⊕ Bird(john)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: EndGame is a movie released in 2006.\n\nSketch First Order Logic Statement: MovieendGame ∧ Released(endGame, year2006)\n\nPredicates:\n\"\"\"\nSet(x, y)\nDirected(x, y)\nReleased(x, y)\nFrom(x, y)\nMovie(x)\nFilmedOutside(x, y)\nFilmedIn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Movie(endGame) ∧ Released(endGame, year2006)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: EndGame is a movie released in 2006.\n\nSketch First Order Logic Statement: Movie(endGame) ∧ Released(endGame, year2006)\n\nPredicates:\n\"\"\"\nSet(x, y)\nDirected(x, y)\nReleased(x, y)\nFrom(x, y)\nMovie(x)\nFilmedOutside(x, y)\nFilmedIn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Movie(endGame) ∧ Released(endGame, year2006)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Andy Chang is from Hong Kong.\n\nSketch First Order Logic Statement: From(andyChang, hongKong)\n\nPredicates:\n\"\"\"\nSet(x, y)\nDirected(x, y)\nReleased(x, y)\nFrom(x, y)\nMovie(x)\nFilmedOutside(x, y)\nFilmedIn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "From(andyChang, hongKong)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a real number equals another real number adding one, the first number is larger.\n\nSketch First Order Logic Statement: ∀x ∀y (RealNum(x) ∧ RealNum(y) ∧ EqualAddOne(x, y) → Larger(x, y))\n\nPredicates:\n\"\"\"\nEqualDouble(x, y)\nPositive(x)\nLarger(x, y)\nRealNum(x)\nEqualAddOne(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (RealNum(x) ∧ RealNum(y) ∧ EqualAddOne(x, y) → Larger(x, y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Seven equals six plus one.\n\nSketch First Order Logic Statement: EqualAddOne(seven, six)\n\nPredicates:\n\"\"\"\nEqualDouble(x, y)\nPositive(x)\nLarger(x, y)\nRealNum(x)\nEqualAddOne(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "EqualAddOne(seven, six)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Four is the double of two.\n\nSketch First Order Logic Statement: Equa(lDouble(f)our, two)\n\nPredicates:\n\"\"\"\nEqualDouble(x, y)\nPositive(x)\nLarger(x, y)\nRealNum(x)\nEqualAddOne(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "EqualDouble(four, two)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some poker players are dogs.\n\nSketch First Order Logic Statement:  (PokerPlayer(x) ∧ ∃x  Dog(x))\n\nPredicates:\n\"\"\"\nDog(x)\nNeverTellsTruth(x)\nPokerPlayer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (PokerPlayer(x) ∧ Dog(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All Chinese are Asian.\n\nSketch First Order Logic Statement: ∀x ( Chinese(x)→  Asian(x))\n\nPredicates:\n\"\"\"\nHuman(x)\nSpanish(x)\nChinese(x)\nBritish(x)\nIndian(x)\nAsian(x)\nEuropean(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ( Chinese(x)→  Asian(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Jessee is either both an Indian and a human, or neither an Indian nor a human.\n\nSketch First Order Logic Statement: ( Indian(jesse) ∧ Human(jesse)) ⊕ (¬ Indian(jesse) ∧ ¬ Human(jesse))\n\nPredicates:\n\"\"\"\nHuman(x)\nSpanish(x)\nChinese(x)\nBritish(x)\nIndian(x)\nAsian(x)\nEuropean(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "( Indian(jesse) ∧ Human(jesse)) ⊕ (¬ Indian(jesse) ∧ ¬ Human(jesse))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All Chinese are Asian.\n\nSketch First Order Logic Statement: ∀x ( Chinese(x)→  Asian(x))\n\nPredicates:\n\"\"\"\nHuman(x)\nSpanish(x)\nChinese(x)\nBritish(x)\nIndian(x)\nAsian(x)\nEuropean(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ( Chinese(x)→  Asian(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some well-informed people are people who never admit a mistake.\n\nSketch First Order Logic Statement:  (WellInformed(x) ∧ ∃x  NeverAdmitMistakes(x))\n\nPredicates:\n\"\"\"\nNeverAdmitMistakes(x)\nGoodTeacher(x)\nWellInformed(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (WellInformed(x) ∧ NeverAdmitMistakes(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Mort is a piece of Philatelic literature.\n\nSketch First Order Logic Statement: PhilatelicLit(mort)\n\nPredicates:\n\"\"\"\nPeriodical(x)\nStamp(x)\nAuction(x)\nBook(x)\nBackground(x)\nPhilatelicLit(x)\nBibliography(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "PhilatelicLit(mort)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Mort is not a Stamp catalogue.\n\nSketch First Order Logic Statement: ¬Stamp(mort)\n\nPredicates:\n\"\"\"\nPeriodical(x)\nStamp(x)\nAuction(x)\nBook(x)\nBackground(x)\nPhilatelicLit(x)\nBibliography(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬Stamp(mort)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Mort is not a periodical, auction catalogue, bibliography, or background material.\n\nSketch First Order Logic Statement: ¬(Periodical(mort) ∨ Auctionmort) ∨ Bibliography(mort ∨ Background(mort))\n\nPredicates:\n\"\"\"\nPeriodical(x)\nStamp(x)\nAuction(x)\nBook(x)\nBackground(x)\nPhilatelicLit(x)\nBibliography(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(Periodical(mort) ∨ Auction(mort) ∨ Bibliography(mort) ∨ Background(mort))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Tintin was produced by Paramount.\n\nSketch First Order Logic Statement: Produced(paramount, tintin)\n\nPredicates:\n\"\"\"\nChildrensFilm(x)\nProduced(x, y)\nAdventureFilm(x)\nDramaFilm(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Produced(paramount, tintin)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Adventures of Rusty is a drama film and children's film.\n\nSketch First Order Logic Statement: DramaFilm(adventuresofrusty) ∧ ChildrensFilm(adventuresofrusty)\n\nPredicates:\n\"\"\"\nChildrensFilm(x)\nProduced(x, y)\nAdventureFilm(x)\nDramaFilm(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "DramaFilm(adventuresofrusty) ∧ ChildrensFilm(adventuresofrusty)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Columbia Pictures produced Adventures of Rusty\n\nSketch First Order Logic Statement: Produced(columbiapictures, adventuresofrusty)\n\nPredicates:\n\"\"\"\nChildrensFilm(x)\nProduced(x, y)\nAdventureFilm(x)\nDramaFilm(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Produced(columbiapictures, adventuresofrusty)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Adventures of Rusty is a drama film and children's film.\n\nSketch First Order Logic Statement: DramaFilm(adventuresofrusty) ∧ ChildrensFilm(adventuresofrusty)\n\nPredicates:\n\"\"\"\nChildrensFilm(x)\nProduced(x, y)\nAdventureFilm(x)\nDramaFilm(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "DramaFilm(adventuresofrusty) ∧ ChildrensFilm(adventuresofrusty)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Deng Xiaoping became instrumental in China's economic reconstruction following the disastrous Great Leap Forward (1958–1960).\n\nSketch First Order Logic Statement: InstrumentalIn(dengxiaoping, chinaseconomicreconstruction) ∧ Following(chinaseconomicreconstruction, greatleapforward) ∧ Disastrous(greatleapforward)\n\nPredicates:\n\"\"\"\nVicePremier(x)\nInstrumentalIn(x, y)\nParamountLeaderOf(x, y)\nPartysSecretaryGeneral(x)\nDisastrous(x)\nPresidedOver(x, y)\nUnder(x, y)\nLaunchedBy(x, y)\nPraisedFor(x, y)\nFollowing(x, y)\nDiedIn(x, y)\nGraduallyRoseTo(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "InstrumentalIn(dengxiaoping, chinaseconomicreconstruction) ∧ Following(chinaseconomicreconstruction, greatleapforward) ∧ Disastrous(greatleapforward)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Deng Xiaoping served as the paramount leader of the People's Republic of China (PRC). \n\nSketch First Order Logic Statement: ParamountLeaderOf(dengxiaoping, prc)\n\nPredicates:\n\"\"\"\nVicePremier(x)\nInstrumentalIn(x, y)\nParamountLeaderOf(x, y)\nPartysSecretaryGeneral(x)\nDisastrous(x)\nPresidedOver(x, y)\nUnder(x, y)\nLaunchedBy(x, y)\nPraisedFor(x, y)\nFollowing(x, y)\nDiedIn(x, y)\nGraduallyRoseTo(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "ParamountLeaderOf(dengxiaoping, prc)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Deng Xiaoping became instrumental in China's economic reconstruction following the disastrous Great Leap Forward (1958–1960).\n\nSketch First Order Logic Statement: InstrumentalIn(dengxiaoping, chinaseconomicreconstruction) ∧ Following(chinaseconomicreconstruction, greatleapforward) ∧ Disastrous(greatleapforward)\n\nPredicates:\n\"\"\"\nVicePremier(x)\nInstrumentalIn(x, y)\nParamountLeaderOf(x, y)\nPartysSecretaryGeneral(x)\nDisastrous(x)\nPresidedOver(x, y)\nUnder(x, y)\nLaunchedBy(x, y)\nPraisedFor(x, y)\nFollowing(x, y)\nDiedIn(x, y)\nGraduallyRoseTo(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "InstrumentalIn(dengxiaoping, chinaseconomicreconstruction) ∧ Following(chinaseconomicreconstruction, greatleapforward) ∧ Disastrous(greatleapforward)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Either science-fiction or fact. \n\nSketch First Order Logic Statement:   (Science-fiction(x) ∨ Fact(x))\n\nPredicates:\n\"\"\"\nFact(x)\nImaginativeProcess(x)\nProvedToBeFalse(x)\nfiction(x)\nProducedInHumanBrains(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (Science-fiction(x) ∨ Fact(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Either science-fiction or fact. \n\nSketch First Order Logic Statement:  ∀x (Science-fiction(x) ∨ Fact(x))\n\nPredicates:\n\"\"\"\nFact(x)\nImaginativeProcess(x)\nProvedToBeFalse(x)\nfiction(x)\nProducedInHumanBrains(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (Science-fiction(x) ∨ Fact(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Either science-fiction or fact. \n\nSketch First Order Logic Statement:  ∀x (Science-fiction(x) ∨ Fact(x))\n\nPredicates:\n\"\"\"\nFact(x)\nImaginativeProcess(x)\nProvedToBeFalse(x)\nfiction(x)\nProducedInHumanBrains(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (Science-fiction(x) ∨ Fact(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All imaginative processes are produced in human brains.\n\nSketch First Order Logic Statement:  (ImaginativeProcess(x) → ProducedInHumanBrains(x))\n\nPredicates:\n\"\"\"\nFact(x)\nImaginativeProcess(x)\nProvedToBeFalse(x)\nfiction(x)\nProducedInHumanBrains(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (ImaginativeProcess(x) → ProducedInHumanBrains(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No facts are proven to be false.\n\nSketch First Order Logic Statement:   (Fact(x) → ∀x  ¬ProvedToBeFalse(x)) \n\nPredicates:\n\"\"\"\nFact(x)\nImaginativeProcess(x)\nProvedToBeFalse(x)\nfiction(x)\nProducedInHumanBrains(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (Fact(x) → ¬ProvedToBeFalse(x)) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No facts are proven to be false.\n\nSketch First Order Logic Statement:  ∀x (Fact(x) → ¬ProvedToBeFalse(x)) \n\nPredicates:\n\"\"\"\nFact(x)\nImaginativeProcess(x)\nProvedToBeFalse(x)\nfiction(x)\nProducedInHumanBrains(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (Fact(x) → ¬ProvedToBeFalse(x)) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All imaginative processes are produced in human brains.\n\nSketch First Order Logic Statement:  (ImaginativeProcess(x) → ∀x  ProducedInHumanBrains(x))\n\nPredicates:\n\"\"\"\nFact(x)\nImaginativeProcess(x)\nProvedToBeFalse(x)\nfiction(x)\nProducedInHumanBrains(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (ImaginativeProcess(x) → ProducedInHumanBrains(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All imaginative processes are produced in human brains.\n\nSketch First Order Logic Statement:  (ImaginativeProcess(x) → ProducedInHumanBrains(x))\n\nPredicates:\n\"\"\"\nFact(x)\nImaginativeProcess(x)\nProvedToBeFalse(x)\nfiction(x)\nProducedInHumanBrains(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (ImaginativeProcess(x) → ProducedInHumanBrains(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No facts are proven to be false.\n\nSketch First Order Logic Statement:  ∀x (Fact(x) → ¬ProvedToBeFalse(x)) \n\nPredicates:\n\"\"\"\nFact(x)\nImaginativeProcess(x)\nProvedToBeFalse(x)\nfiction(x)\nProducedInHumanBrains(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (Fact(x) → ¬ProvedToBeFalse(x)) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Dune is a science-fiction or proven to be false.\n\nSketch First Order Logic Statement:  Science-fiction(dune) ∨ ProvedToBeFalse(dune)\n\nPredicates:\n\"\"\"\nFact(x)\nImaginativeProcess(x)\nProvedToBeFalse(x)\nfiction(x)\nProducedInHumanBrains(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " Science-fiction(dune) ∨ ProvedToBeFalse(dune)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a superhero is American, he speaks English.\n\nSketch First Order Logic Statement:   (Superhero(x) ∧ American(x) → Speak(x, english)) \n\nPredicates:\n\"\"\"\nSuperhero(x)\nSpeak(x, y)\nComeFrom(x, y)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (Superhero(x) ∧ American(x) → Speak(x, english)) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Captain America is a superhero.\n\nSketch First Order Logic Statement:  Superhero(captain america) \n\nPredicates:\n\"\"\"\nSuperhero(x)\nSpeak(x, y)\nComeFrom(x, y)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " Superhero(captain america) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Captain America is an American.\n\nSketch First Order Logic Statement:  America(n(cap)tain america) \n\nPredicates:\n\"\"\"\nSuperhero(x)\nSpeak(x, y)\nComeFrom(x, y)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " American(captain america) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Robert Zimmer is an essayist.\n\nSketch First Order Logic Statement: IsEssayist(robertZimmer)\n\nPredicates:\n\"\"\"\nIsEssayist(x)\nIsGerman(x)\nIsWriter(x)\nBornIn(x, y)\nBornInGermany(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "IsEssayist(robertZimmer)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Robert Zimmer is an essayist.\n\nSketch First Order Logic Statement: IsEssayist(robertZimmer)\n\nPredicates:\n\"\"\"\nIsEssayist(x)\nIsGerman(x)\nIsWriter(x)\nBornIn(x, y)\nBornInGermany(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "IsEssayist(robertZimmer)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Every person born in Germany is German.\n\nSketch First Order Logic Statement: ∀x (BornInGermany(x) → IsGerman(x))\n\nPredicates:\n\"\"\"\nIsEssayist(x)\nIsGerman(x)\nIsWriter(x)\nBornIn(x, y)\nBornInGermany(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (BornInGermany(x) → IsGerman(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: John has a high salary.\n\nSketch First Order Logic Statement: HighSalary(john)\n\nPredicates:\n\"\"\"\nHighCreditScore(x)\nRepay(x)\nMortgage(x)\nHighSalary(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "HighSalary(john)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some PhD students have high IQs.\n\nSketch First Order Logic Statement: ∃x (PhDStudent(x) ∧ HighIQ(x))\n\nPredicates:\n\"\"\"\nGraduateStudent(x)\nMemberOfUniversity(x)\nHighIQ(x)\nPhDStudent(x)\nStudent(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (PhDStudent(x) ∧ HighIQ(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All students are members of the university.\n\nSketch First Order Logic Statement: ∀x (Student(x) → MemberOfUniversity(x))\n\nPredicates:\n\"\"\"\nGraduateStudent(x)\nMemberOfUniversity(x)\nHighIQ(x)\nPhDStudent(x)\nStudent(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Student(x) → MemberOfUniversity(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All graduate students are students.\n\nSketch First Order Logic Statement: ∀x (GraduateStudent(x) → Student(x))\n\nPredicates:\n\"\"\"\nGraduateStudent(x)\nMemberOfUniversity(x)\nHighIQ(x)\nPhDStudent(x)\nStudent(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (GraduateStudent(x) → Student(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Eiffel Tower is one of the main tourist attractions located in Paris.\n\nSketch First Order Logic Statement: TouristAttraction(eiffelTower) ∧ LocatedIn(eiffelTower, paris)\n\nPredicates:\n\"\"\"\nSee(x, y)\nTouristAttraction(x)\nEuropeanCountry(x)\nSpeak(x, y)\nLiveIn(x, y)\nCapitalOf(x, y)\nLocatedIn(x, y)\nGoTo(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "TouristAttraction(eiffelTower) ∧ LocatedIn(eiffelTower, paris)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Belgium, France and Germany are European countries.\n\nSketch First Order Logic Statement: EuropeanCountry(belgium) ∨ EuropeanCountry(f(rance) ∨ EuropeanCou)ntry(germany)\n\nPredicates:\n\"\"\"\nSee(x, y)\nTouristAttraction(x)\nEuropeanCountry(x)\nSpeak(x, y)\nLiveIn(x, y)\nCapitalOf(x, y)\nLocatedIn(x, y)\nGoTo(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "EuropeanCountry(belgium) ∨ EuropeanCountry(france) ∨ EuropeanCountry(germany)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If John goes to Europe, he will see some tourist attractions.\n\nSketch First Order Logic Statement: ∃x (GoTo(john, europe) → (See(john, x) ∧ TouristAttraction(x)))\n\nPredicates:\n\"\"\"\nSee(x, y)\nTouristAttraction(x)\nEuropeanCountry(x)\nSpeak(x, y)\nLiveIn(x, y)\nCapitalOf(x, y)\nLocatedIn(x, y)\nGoTo(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (GoTo(john, europe) → (See(john, x) ∧ TouristAttraction(x)))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All sports cars are loud.\n\nSketch First Order Logic Statement:  (SportsCar(x) → ∀x  LoudCar(x))\n\nPredicates:\n\"\"\"\nMadeInMaranello(x)\nFerrari(x)\nLoudCar(x)\nSportsCar(x)\nElectricCar(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (SportsCar(x) → LoudCar(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No loud cars are electric.\n\nSketch First Order Logic Statement: ∀x (LoudCar(x) → ¬ElectricCar(x))\n\nPredicates:\n\"\"\"\nMadeInMaranello(x)\nFerrari(x)\nLoudCar(x)\nSportsCar(x)\nElectricCar(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (LoudCar(x) → ¬ElectricCar(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All sports cars are loud.\n\nSketch First Order Logic Statement: ∀x (SportsCar(x) → (Lo)udCar(x))\n\nPredicates:\n\"\"\"\nMadeInMaranello(x)\nFerrari(x)\nLoudCar(x)\nSportsCar(x)\nElectricCar(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (SportsCar(x) → LoudCar(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a car is a Ferrari, then it is a sports car.\n\nSketch First Order Logic Statement: ∀x (Ferrari(x) → SportsCar(x))\n\nPredicates:\n\"\"\"\nMadeInMaranello(x)\nFerrari(x)\nLoudCar(x)\nSportsCar(x)\nElectricCar(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Ferrari(x) → SportsCar(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All flowers are plants.\n\nSketch First Order Logic Statement: ∀x (Flower(x) → Plant(x))\n\nPredicates:\n\"\"\"\nFlower(x)\nGrownInGarden(x)\nKitten(x)\nPlant(x)\nCuteAnimal(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Flower(x) → Plant(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Piper is a kitten or a cute animal.\n\nSketch First Order Logic Statement: Kitten(piper) ∨ CuteAnimal(piper)\n\nPredicates:\n\"\"\"\nFlower(x)\nGrownInGarden(x)\nKitten(x)\nPlant(x)\nCuteAnimal(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Kitten(piper) ∨ CuteAnimal(piper)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All flowers are plants.\n\nSketch First Order Logic Statement: ∀x Flower(x → Plant(x))\n\nPredicates:\n\"\"\"\nFlower(x)\nGrownInGarden(x)\nKitten(x)\nPlant(x)\nCuteAnimal(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Flower(x) → Plant(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Guam has participated in the Winter Olympics.\n\nSketch First Order Logic Statement: ParticipatedIn(guam, wintero(l)ympics)\n\nPredicates:\n\"\"\"\nSendAthletes(x)\nParticipatedIn(x, y)\nYear(x)\nBeHeld(x, y)\nBeFrom(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "ParticipatedIn(guam, winterolympics)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Judd Bankert is the only athlete from Guam who has ever competed in the Winter Olympics.\n\nSketch First Order Logic Statement: BeFrom(bankert, guam) ∧ ParticipatedIn(bankert, winterolympics)\n\nPredicates:\n\"\"\"\nSendAthletes(x)\nParticipatedIn(x, y)\nYear(x)\nBeHeld(x, y)\nBeFrom(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "BeFrom(bankert, guam) ∧ ParticipatedIn(bankert, winterolympics)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Michael O'Donnell was born in Yorkshire as the son of a general practitioner.\n\nSketch First Order Logic Statement:  (BornIn(michael, yorkshire) ∧ Son(michael, x) ∧ GeneralPractitioner(x))\n\nPredicates:\n\"\"\"\nJournalist(x)\nEditedBy(x, y)\nWordSetter(x)\nSon(x, y)\nBritish(x)\nAuthor(x)\nMagazine(x)\nPhysician(x)\nBornIn(x, y)\nBroadcaster(x)\nGeneralPractitioner(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (BornIn(michael, yorkshire) ∧ Son(michael, x) ∧ GeneralPractitioner(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: One of the word-setters of My Word! was Michael O'Donnell.\n\nSketch First Order Logic Statement: WordSetter(michael)\n\nPredicates:\n\"\"\"\nJournalist(x)\nEditedBy(x, y)\nWordSetter(x)\nSon(x, y)\nBritish(x)\nAuthor(x)\nMagazine(x)\nPhysician(x)\nBornIn(x, y)\nBroadcaster(x)\nGeneralPractitioner(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "WordSetter(michael)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: One of the word-setters of My Word! was Michael O'Donnell.\n\nSketch First Order Logic Statement: WordSetter(michael)\n\nPredicates:\n\"\"\"\nJournalist(x)\nEditedBy(x, y)\nWordSetter(x)\nSon(x, y)\nBritish(x)\nAuthor(x)\nMagazine(x)\nPhysician(x)\nBornIn(x, y)\nBroadcaster(x)\nGeneralPractitioner(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "WordSetter(michael)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Michael O'Donnell is a British physician, journalist, author and broadcaster.\n\nSketch First Order Logic Statement: British(michael) ∧ Physician(michael) ∧ Journalist(michael) ∧ Author(michael) ∧ Broadcaster(michael)\n\nPredicates:\n\"\"\"\nJournalist(x)\nEditedBy(x, y)\nWordSetter(x)\nSon(x, y)\nBritish(x)\nAuthor(x)\nMagazine(x)\nPhysician(x)\nBornIn(x, y)\nBroadcaster(x)\nGeneralPractitioner(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "British(michael) ∧ Physician(michael) ∧ Journalist(michael) ∧ Author(michael) ∧ Broadcaster(michael)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The magazine World Medicine was edited by Michael O'Donnell.\n\nSketch First Order Logic Statement: Magazine(worldmedicine) ∧ EditedBy(worldmedicine, michael)\n\nPredicates:\n\"\"\"\nJournalist(x)\nEditedBy(x, y)\nWordSetter(x)\nSon(x, y)\nBritish(x)\nAuthor(x)\nMagazine(x)\nPhysician(x)\nBornIn(x, y)\nBroadcaster(x)\nGeneralPractitioner(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Magazine(worldmedicine) ∧ EditedBy(worldmedicine, michael)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some reading is homework.\n\nSketch First Order Logic Statement:  (IsReading(x) ∧ Homework(x))\n\nPredicates:\n\"\"\"\nHomework(x)\nIsReading(x)\nIsFun(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (IsReading(x) ∧ Homework(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If violence is good, it is justified.\n\nSketch First Order Logic Statement: ∀x ((Violence(x) ∧ Good(x)) → Justified(x))\n\nPredicates:\n\"\"\"\nViolence(x)\nLawful(x)\nGood(x)\nJustified(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ((Violence(x) ∧ Good(x)) → Justified(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people regularly ride horses for pleasure and sport, then they do not live in cramped residential buildings.\n\nSketch First Order Logic Statement:  (RegularlyRide(x) → ∀x  ¬Cramped(x))\n\nPredicates:\n\"\"\"\nDisposableIncome(x)\nCompete(x)\nInvested(x)\nRanch(x)\nRegularlyRide(x)\nCramped(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (RegularlyRide(x) → ¬Cramped(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Manny either has a horse ranch and lives in cramped residential buildings, or he neither has a horse ranch nor lives in cramped residential buildings.\n\nSketch First Order Logic Statement: (Ranch(manny) ∧ Cramped(manny)) ⊕ (¬Ranch(manny) ∧ ¬Cramped(manny))\n\nPredicates:\n\"\"\"\nDisposableIncome(x)\nCompete(x)\nInvested(x)\nRanch(x)\nRegularlyRide(x)\nCramped(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "(Ranch(manny) ∧ Cramped(manny)) ⊕ (¬Ranch(manny) ∧ ¬Cramped(manny))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people compete in horse dressage shows, then they have invested in high-quality equestrian gear and equipment.\n\nSketch First Order Logic Statement: ∀x (Compete(x) → Invested(x))\n\nPredicates:\n\"\"\"\nDisposableIncome(x)\nCompete(x)\nInvested(x)\nRanch(x)\nRegularlyRide(x)\nCramped(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Compete(x) → Invested(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A roundel is not higher than adjacent walls. \n\nSketch First Order Logic Statement: ∀x ∀y (Roundel(x) ∧ AdjacentWall(y) → ¬Higher(x, y))\n\nPredicates:\n\"\"\"\nBatteryTower(x)\nAdjacentWall(x)\nRoundel(x)\nOlder(x, y)\nArtilleryFortification(x)\nRounded(x)\nDeployCannons(x)\nHigher(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (Roundel(x) ∧ AdjacentWall(y) → ¬Higher(x, y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Battery towers are an artillery fortification.\n\nSketch First Order Logic Statement:  (BatteryTower(x) → ArtilleryFortification(x))\n\nPredicates:\n\"\"\"\nBatteryTower(x)\nAdjacentWall(x)\nRoundel(x)\nOlder(x, y)\nArtilleryFortification(x)\nRounded(x)\nDeployCannons(x)\nHigher(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (BatteryTower(x) → ArtilleryFortification(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A roundel is a rounded artillery fortification.\n\nSketch First Order Logic Statement: ∀x Roundel(x → Rounded(x) ∧ ArtilleryFortification(x))\n\nPredicates:\n\"\"\"\nBatteryTower(x)\nAdjacentWall(x)\nRoundel(x)\nOlder(x, y)\nArtilleryFortification(x)\nRounded(x)\nDeployCannons(x)\nHigher(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Roundel(x) → Rounded(x) ∧ ArtilleryFortification(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A roundel is a rounded artillery fortification.\n\nSketch First Order Logic Statement:  (Roundel(x) → ∀x  Rounded(x) ∧ ArtilleryFortification(x))\n\nPredicates:\n\"\"\"\nBatteryTower(x)\nAdjacentWall(x)\nRoundel(x)\nOlder(x, y)\nArtilleryFortification(x)\nRounded(x)\nDeployCannons(x)\nHigher(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Roundel(x) → Rounded(x) ∧ ArtilleryFortification(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some papers are tissues.\n\nSketch First Order Logic Statement:  (Paper(x) ∧ Tissue(x))\n\nPredicates:\n\"\"\"\nSoft(x)\nTissue(x)\nPaper(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Paper(x) ∧ Tissue(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Volunteers work in groups or individually.\n\nSketch First Order Logic Statement: ∀x (Volunteer(x) → (WorkInGroup(x) ∨ WorkIndividually(x)))\n\nPredicates:\n\"\"\"\nWorkRegularly(x)\nGetIntangibleBenefits(x)\nWorkInGroup(x)\nEnvironmental(x)\nTrained(x)\nWorkAsNeeded(x)\nVolunteer(x)\nWorkIndividually(x)\nContributeTo(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Volunteer(x) → (WorkInGroup(x) ∨ WorkIndividually(x)))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Volunteers work in groups or individually.\n\nSketch First Order Logic Statement: ∀x (Volunteer(x) → WorkInGroup(x) ∨ WorkIndividually(x))\n\nPredicates:\n\"\"\"\nWorkRegularly(x)\nGetIntangibleBenefits(x)\nWorkInGroup(x)\nEnvironmental(x)\nTrained(x)\nWorkAsNeeded(x)\nVolunteer(x)\nWorkIndividually(x)\nContributeTo(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Volunteer(x) → (WorkInGroup(x) ∨ WorkIndividually(x)))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All volunteers receive intangible benefits for their work.\n\nSketch First Order Logic Statement: ∀x (Volunteer(x) → GetInt(an)gibleBenefits(x))\n\nPredicates:\n\"\"\"\nWorkRegularly(x)\nGetIntangibleBenefits(x)\nWorkInGroup(x)\nEnvironmental(x)\nTrained(x)\nWorkAsNeeded(x)\nVolunteer(x)\nWorkIndividually(x)\nContributeTo(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Volunteer(x) → GetIntangibleBenefits(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All old people living in stable homes do not like surprises.\n\nSketch First Order Logic Statement:  (Old(x) → ∀x  NoSurprises(x))\n\nPredicates:\n\"\"\"\nImpulsive(x)\nNoSurprises(x)\nConsistent(x)\nNoShopping(x)\nOld(x)\nFlannel(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Old(x) → NoSurprises(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people have very high energy and are impulsive, then they like surprises.\n\nSketch First Order Logic Statement: ∀x (Impulsive(x) → ¬NoSurprises(x))\n\nPredicates:\n\"\"\"\nImpulsive(x)\nNoSurprises(x)\nConsistent(x)\nNoShopping(x)\nOld(x)\nFlannel(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Impulsive(x) → ¬NoSurprises(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All people who are very consistent and enjoy sticking to their regular routines do not like surprises.\n\nSketch First Order Logic Statement: ∀x( (Consistent(x) → N)oSurprises(x))\n\nPredicates:\n\"\"\"\nImpulsive(x)\nNoSurprises(x)\nConsistent(x)\nNoShopping(x)\nOld(x)\nFlannel(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Consistent(x) → NoSurprises(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Adam has a favorite car.\n\nSketch First Order Logic Statement: ∃x (Favorite(adam, x))\n\nPredicates:\n\"\"\"\nBroke(x, y)\nFavorite(x, y)\nOwns(x, y)\nEuropean(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Favorite(adam, x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Adam has a favorite car.\n\nSketch First Order Logic Statement: ∃x (Favorite(adam, x))\n\nPredicates:\n\"\"\"\nBroke(x, y)\nFavorite(x, y)\nOwns(x, y)\nEuropean(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Favorite(adam, x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No buildings in New Haven are higher than 400 meters. \n\nSketch First Order Logic Statement:  (NewHaven(x) → ¬High(x))\n\nPredicates:\n\"\"\"\nHigh(x)\nBloomberg(x)\nYaleHousing(x)\nManhattan(x)\nNewHaven(x)\nBloombergLogo(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (NewHaven(x) → ¬High(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All buildings managed by Yale Housing are in New Haven. \n\nSketch First Order Logic Statement: ∀x (YaleHousing(x) → NewHavenx)\n\nPredicates:\n\"\"\"\nHigh(x)\nBloomberg(x)\nYaleHousing(x)\nManhattan(x)\nNewHaven(x)\nBloombergLogo(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (YaleHousing(x) → NewHaven(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No buildings in New Haven are higher than 400 meters. \n\nSketch First Order Logic Statement: ∀x (NewHaven(x) → ¬High(x))\n\nPredicates:\n\"\"\"\nHigh(x)\nBloomberg(x)\nYaleHousing(x)\nManhattan(x)\nNewHaven(x)\nBloombergLogo(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (NewHaven(x) → ¬High(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All buildings with the Bloomberg logo are buildings owned by Bloomberg. \n\nSketch First Order Logic Statement: ∀x (BloombergLogo(x) → Bloomberg(x))\n\nPredicates:\n\"\"\"\nHigh(x)\nBloomberg(x)\nYaleHousing(x)\nManhattan(x)\nNewHaven(x)\nBloombergLogo(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (BloombergLogo(x) → Bloomberg(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Everything that is an osprey is a bird.\n\nSketch First Order Logic Statement: ∀x (Osprey(x) → Bird(x))\n\nPredicates:\n\"\"\"\nOsprey(x)\nFish(x)\nBird(x)\nGoldfish(x)\nCarp(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Osprey(x) → Bird(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No fish are birds.\n\nSketch First Order Logic Statement:  (Fish(x) → ∀x  ¬Bird(x))\n\nPredicates:\n\"\"\"\nOsprey(x)\nFish(x)\nBird(x)\nGoldfish(x)\nCarp(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Fish(x) → ¬Bird(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If something is a carp, then it is a fish.\n\nSketch First Order Logic Statement: ∀x (Carp(x) → Fish(x))\n\nPredicates:\n\"\"\"\nOsprey(x)\nFish(x)\nBird(x)\nGoldfish(x)\nCarp(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Carp(x) → Fish(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Cities in California that they are interested in are San Francisco, Los Angeles, and San Diego.\n\nSketch First Order Logic Statement: ∀x (((SanFrancisco(x) ∨ LosAngeles(x) ∨ SanDiego(x)) ∧ California(x)) → WantToGo(x))\n\nPredicates:\n\"\"\"\nWantToGo(x)\nLosAngeles(x)\nMiami(x)\nFloridaCityVisited(x, y)\nCaliforniaCityVisited(x, y)\nOrlando(x)\nFlorida(x)\nSanDiego(x)\nCalifornia(x)\nSanFrancisco(x)\nNeverGo(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (((SanFrancisco(x) ∨ LosAngeles(x) ∨ SanDiego(x)) ∧ California(x)) → WantToGo(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Mrs. Smith has been to one city in Florida.\n\nSketch First Order Logic Statement: FloridaCityVisited(mrs.smith, one)\n\nPredicates:\n\"\"\"\nWantToGo(x)\nLosAngeles(x)\nMiami(x)\nFloridaCityVisited(x, y)\nCaliforniaCityVisited(x, y)\nOrlando(x)\nFlorida(x)\nSanDiego(x)\nCalifornia(x)\nSanFrancisco(x)\nNeverGo(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "FloridaCityVisited(mrs.smith, one)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Cities in Florida that they are interested in are Orlando and Miami.\n\nSketch First Order Logic Statement: ∀x (((Orlando(x) ∨ Miami(x)) ∧ Florida(x)) → WantToGo(x))\n\nPredicates:\n\"\"\"\nWantToGo(x)\nLosAngeles(x)\nMiami(x)\nFloridaCityVisited(x, y)\nCaliforniaCityVisited(x, y)\nOrlando(x)\nFlorida(x)\nSanDiego(x)\nCalifornia(x)\nSanFrancisco(x)\nNeverGo(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (((Orlando(x) ∨ Miami(x)) ∧ Florida(x)) → WantToGo(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All light things are unstable.\n\nSketch First Order Logic Statement:  (Light(x) → ∀x  Unstable(x))\n\nPredicates:\n\"\"\"\nKinetic(x)\nHeavy(x)\nLight(x)\nSmall(x)\nChanging(x)\nStill(x)\nUnstable(x)\nBig(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Light(x) → Unstable(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All light things are unstable.\n\nSketch First Order Logic Statement: ∀x ((Light(x) → Un)stable(x))\n\nPredicates:\n\"\"\"\nKinetic(x)\nHeavy(x)\nLight(x)\nSmall(x)\nChanging(x)\nStill(x)\nUnstable(x)\nBig(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Light(x) → Unstable(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All small things are light. \n\nSketch First Order Logic Statement: ∀x (Small(x) → Light(x))\n\nPredicates:\n\"\"\"\nKinetic(x)\nHeavy(x)\nLight(x)\nSmall(x)\nChanging(x)\nStill(x)\nUnstable(x)\nBig(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Small(x) → Light(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All unstable things are kinetic. \n\nSketch First Order Logic Statement: ∀x (Unstable(x) → Kinetic(x))\n\nPredicates:\n\"\"\"\nKinetic(x)\nHeavy(x)\nLight(x)\nSmall(x)\nChanging(x)\nStill(x)\nUnstable(x)\nBig(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Unstable(x) → Kinetic(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All heavy things are still.\n\nSketch First Order Logic Statement: ∀x (Heavyx) → Still(x)\n\nPredicates:\n\"\"\"\nKinetic(x)\nHeavy(x)\nLight(x)\nSmall(x)\nChanging(x)\nStill(x)\nUnstable(x)\nBig(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Heavy(x) → Still(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Everything is either big or small.\n\nSketch First Order Logic Statement: ∀x (Big(x) ⊕ Small(x))\n\nPredicates:\n\"\"\"\nKinetic(x)\nHeavy(x)\nLight(x)\nSmall(x)\nChanging(x)\nStill(x)\nUnstable(x)\nBig(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Big(x) ⊕ Small(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: DI Ray is a police procedural television series.\n\nSketch First Order Logic Statement: TelevisionSeries(diRay)\n\nPredicates:\n\"\"\"\nBritish(x)\nTelevisionSeries(x)\nWrite(x, y)\nCreate(x, y)\nProduce(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "TelevisionSeries(diRay)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: DI Ray was produced by Jed Mercurio.\n\nSketch First Order Logic Statement: Pro(duce(jed, d)iRay)\n\nPredicates:\n\"\"\"\nBritish(x)\nTelevisionSeries(x)\nWrite(x, y)\nCreate(x, y)\nProduce(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Produce(jed, diRay)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All women are human.\n\nSketch First Order Logic Statement:  (Woman(x) → ∀x  Human(x))\n\nPredicates:\n\"\"\"\nHuman(x)\nGentleman(x)\nLawyer(x)\nMan(x)\nWoman(x)\nSheep(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Woman(x) → Human(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No sheep are human.\n\nSketch First Order Logic Statement: ∀x (Sheep(x) → ¬Human(x))\n\nPredicates:\n\"\"\"\nHuman(x)\nGentleman(x)\nLawyer(x)\nMan(x)\nWoman(x)\nSheep(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Sheep(x) → ¬Human(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All gentlemen are men.\n\nSketch First Order Logic Statement:  (Gentleman(x) → Man(x))\n\nPredicates:\n\"\"\"\nHuman(x)\nGentleman(x)\nLawyer(x)\nMan(x)\nWoman(x)\nSheep(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Gentleman(x) → Man(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some defenders are centerback.\n\nSketch First Order Logic Statement:  (Defender(x) ∧ Centerback(x))\n\nPredicates:\n\"\"\"\nProfessionalBasketballPlayer(x)\nDefender(x)\nSoccerPlayer(x)\nCenterback(x)\nNBAPlayer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Defender(x) ∧ Centerback(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All NBA players are professional basketball players.\n\nSketch First Order Logic Statement: ∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x))\n\nPredicates:\n\"\"\"\nProfessionalBasketballPlayer(x)\nDefender(x)\nSoccerPlayer(x)\nCenterback(x)\nNBAPlayer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (NBAPlayer(x) → ProfessionalBasketballPlayer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some defenders are centerback.\n\nSketch First Order Logic Statement: ∃x (Defender(x) ∧ Centerback(x))\n\nPredicates:\n\"\"\"\nProfessionalBasketballPlayer(x)\nDefender(x)\nSoccerPlayer(x)\nCenterback(x)\nNBAPlayer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Defender(x) ∧ Centerback(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a person doesn't have enough money to buy a product, then that person can't buy it.\n\nSketch First Order Logic Statement: ∀x  (Person(x) ∧ Product(y) ∧ ¬HaveEnoughMoneyFor(x, y) → ∀y  ¬Buy(x, y))\n\nPredicates:\n\"\"\"\nProduct(x)\nOneOEightO(x)\nTwoK(x)\nBuy(x, y)\nFourK(x)\nHaveEnoughMoneyFor(x, y)\nMonitor(x)\nMoreExpensive(x, y)\nPerson(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (Person(x) ∧ Product(y) ∧ ¬HaveEnoughMoneyFor(x, y) → ¬Buy(x, y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a person doesn't have enough money to buy a product, then that person can't buy it.\n\nSketch First Order Logic Statement: ∀x ∀y (Person(x) ∧ Product(y) ∧ ¬HaveEnoughMone(y)For(x, y) → ¬Buy(x, y))\n\nPredicates:\n\"\"\"\nProduct(x)\nOneOEightO(x)\nTwoK(x)\nBuy(x, y)\nFourK(x)\nHaveEnoughMoneyFor(x, y)\nMonitor(x)\nMoreExpensive(x, y)\nPerson(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (Person(x) ∧ Product(y) ∧ ¬HaveEnoughMoneyFor(x, y) → ¬Buy(x, y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All artificial satellites are important scientific achievements.\n\nSketch First Order Logic Statement: ∀x (ArtificialSatellite(x) → ImportantScientificAchievement(x))\n\nPredicates:\n\"\"\"\nImportantScientificAchievement(x)\nUSInvention(x)\nArtificialSatellite(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (ArtificialSatellite(x) → ImportantScientificAchievement(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some cats are not pets.\n\nSketch First Order Logic Statement:  (Cat(x) ∧ ¬Pet(x))\n\nPredicates:\n\"\"\"\nCat(x)\nMammal(x)\nPet(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Cat(x) ∧ ¬Pet(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All people who lead very busy lives that include 12-hour work hours make a lot of their own food at home using recipes and online guides.\n\nSketch First Order Logic Statement:  (Busy(x) → MakeFood(x))\n\nPredicates:\n\"\"\"\nCaffeineAddict(x)\nBusy(x)\nCoffeeShop(x)\nKitchenAppliance(x)\nMakeFood(x)\nTakeout(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Busy(x) → MakeFood(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All people who lead very busy lives that include 12-hour work hours make a lot of their own food at home using recipes and online guides.\n\nSketch First Order Logic Statement:  (Busy(x) → ∀x  MakeFood(x))\n\nPredicates:\n\"\"\"\nCaffeineAddict(x)\nBusy(x)\nCoffeeShop(x)\nKitchenAppliance(x)\nMakeFood(x)\nTakeout(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Busy(x) → MakeFood(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People either visit a coffee shop at least three times a week or order takeout at least once a day.\n\nSketch First Order Logic Statement: ∀x (CoffeeShop(x) ∨ Takeout(x))\n\nPredicates:\n\"\"\"\nCaffeineAddict(x)\nBusy(x)\nCoffeeShop(x)\nKitchenAppliance(x)\nMakeFood(x)\nTakeout(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (CoffeeShop(x) ∨ Takeout(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No professional basketball players are soccer players.\n\nSketch First Order Logic Statement: ¬( (SoccerPlayer(x) ∧ ∃x  ProfessionalBasketballPlayer(x)))\n\nPredicates:\n\"\"\"\nProfessionalBasketballPlayer(x)\nDefender(x)\nSoccerPlayer(x)\nCenterback(x)\nNBAPlayer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(∃x (SoccerPlayer(x) ∧ ProfessionalBasketballPlayer(x)))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All defenders are soccer players.\n\nSketch First Order Logic Statement: ∀x (Defender(x) → SoccerPlayer(x))\n\nPredicates:\n\"\"\"\nProfessionalBasketballPlayer(x)\nDefender(x)\nSoccerPlayer(x)\nCenterback(x)\nNBAPlayer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Defender(x) → SoccerPlayer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Roger Federer is not an NBA player or a defender.\n\nSketch First Order Logic Statement: ¬(NBAPlayer(rogerfederer) ⊕ Defender(rogerfederer))\n\nPredicates:\n\"\"\"\nProfessionalBasketballPlayer(x)\nDefender(x)\nSoccerPlayer(x)\nCenterback(x)\nNBAPlayer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(NBAPlayer(rogerfederer) ⊕ Defender(rogerfederer))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If someone is a lifeguard, then they work at a pool.\n\nSketch First Order Logic Statement: ∀x (Lifeguard(x) → WorkAtPool(x))\n\nPredicates:\n\"\"\"\nNice(x)\nTeacherWorkingAtPool(x)\nPoolManager(x)\nWorkAtPool(x)\nLifeguard(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Lifeguard(x) → WorkAtPool(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If someone is a lifeguard, then they work at a pool.\n\nSketch First Order Logic Statement: ∀x (Lifeguard(x) → WorkAtPool(x))\n\nPredicates:\n\"\"\"\nNice(x)\nTeacherWorkingAtPool(x)\nPoolManager(x)\nWorkAtPool(x)\nLifeguard(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Lifeguard(x) → WorkAtPool(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If someone is a lifeguard, then they work at a pool.\n\nSketch First Order Logic Statement:  (Lifeguard(x) → WorkAtPool(x))\n\nPredicates:\n\"\"\"\nNice(x)\nTeacherWorkingAtPool(x)\nPoolManager(x)\nWorkAtPool(x)\nLifeguard(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Lifeguard(x) → WorkAtPool(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Not all art pieces require talent.\n\nSketch First Order Logic Statement:  (ArtPiece(x) ∧ ¬RequiresTalent(x))\n\nPredicates:\n\"\"\"\nRequiresPractice(x)\nArtPiece(x)\nRequiresTalent(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (ArtPiece(x) ∧ ¬RequiresTalent(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Bernarda Bryson Shahn was married to Ben Shahn.\n\nSketch First Order Logic Statement: MarriedTo(bernardaBrysonShahn, benShahn)\n\nPredicates:\n\"\"\"\nLithographer(x)\nPainter(x)\nBornIn(x, y)\nMarriedTo(x, y)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "MarriedTo(bernardaBrysonShahn, benShahn)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Bernarda Bryson Shahn was born in Athens, Ohio. \n\nSketch First Order Logic Statement: BornIn(bernardaBrysonShahn, athensOhio)\n\nPredicates:\n\"\"\"\nLithographer(x)\nPainter(x)\nBornIn(x, y)\nMarriedTo(x, y)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "BornIn(bernardaBrysonShahn, athensOhio)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People born in Athens, Ohio are Americans.\n\nSketch First Order Logic Statement:  (BornIn(x, athensOhio) → ∀x  American(x))\n\nPredicates:\n\"\"\"\nLithographer(x)\nPainter(x)\nBornIn(x, y)\nMarriedTo(x, y)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (BornIn(x, athensOhio) → American(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People either are saving money for a down payment on a new house or they live in apartments in big metropolitan cities.\n\nSketch First Order Logic Statement:  (House(x) ∨ ∀x  Apartment(x))\n\nPredicates:\n\"\"\"\nRoommate(x)\nApartment(x)\nIphone(x)\nPet(x)\nTech(x)\nHouse(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (House(x) ∨ Apartment(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People either are saving money for a down payment on a new house or they live in apartments in big metropolitan cities.\n\nSketch First Order Logic Statement: ∀x (House(x) ∨ Apartment(x))\n\nPredicates:\n\"\"\"\nRoommate(x)\nApartment(x)\nIphone(x)\nPet(x)\nTech(x)\nHouse(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (House(x) ∨ Apartment(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All faculty members have a job at a school.\n\nSketch First Order Logic Statement:  (FacultyMember(x) → JobAtSchool(x))\n\nPredicates:\n\"\"\"\nJobAtSchool(x)\nPaidBySchool(x)\nOnPayroll(x)\nHasStudents(x)\nTeacher(x)\nFacultyMember(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (FacultyMember(x) → JobAtSchool(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All faculty members have a job at a school.\n\nSketch First Order Logic Statement:  (FacultyMember(x) → ∀x  JobAtSchool(x))\n\nPredicates:\n\"\"\"\nJobAtSchool(x)\nPaidBySchool(x)\nOnPayroll(x)\nHasStudents(x)\nTeacher(x)\nFacultyMember(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (FacultyMember(x) → JobAtSchool(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: One can either be a faculty member or a teacher.\n\nSketch First Order Logic Statement:  (FacultyMember(x) ∨ Teacher(x))\n\nPredicates:\n\"\"\"\nJobAtSchool(x)\nPaidBySchool(x)\nOnPayroll(x)\nHasStudents(x)\nTeacher(x)\nFacultyMember(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (FacultyMember(x) ∨ Teacher(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Kangaroo is an animal.\n\nSketch First Order Logic Statement: ∀x (Kangaroo(x) → Animal(x))\n\nPredicates:\n\"\"\"\nKangaroo(x)\nLiveIn(x, y)\nMaySee(x, y, z)\nAnimal(x)\nGoTo(x, y)\nFlyTo(x, y)\nEnoughMoney(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Kangaroo(x) → Animal(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Intro Geology has no prerequisites.\n\nSketch First Order Logic Statement: ∀x (¬Prereq(x, introgeology))\n\nPredicates:\n\"\"\"\nPrereq(x, y)\nCanTake(x)\nTaken(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (¬Prereq(x, introgeology))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Intro Geology has no prerequisites.\n\nSketch First Order Logic Statement: ∀x (¬Prereq(x, introgeology))\n\nPredicates:\n\"\"\"\nPrereq(x, y)\nCanTake(x)\nTaken(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (¬Prereq(x, introgeology))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Intro Geology has no prerequisites.\n\nSketch First Order Logic Statement: ∀x (¬Prereq(x, introgeolo(gy)))\n\nPredicates:\n\"\"\"\nPrereq(x, y)\nCanTake(x)\nTaken(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (¬Prereq(x, introgeology))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a class has prerequisites the student must take the prerequisites to take the class.\n\nSketch First Order Logic Statement: ∀x  ((Prereq(x, y) ∧ ∀y  Taken(x)) ↔ CanTake(y))\n\nPredicates:\n\"\"\"\nPrereq(x, y)\nCanTake(x)\nTaken(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y ((Prereq(x, y) ∧ Taken(x)) ↔ CanTake(y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Harry Potter series consists of 7 distinct works.\n\nSketch First Order Logic Statement: SevenDistinctWorks(harryPotter)\n\nPredicates:\n\"\"\"\nHeptalogy(x)\nSevenDistinctWorks(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "SevenDistinctWorks(harryPotter)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A heptalogy, is a compound literary or narrative work that is made up of seven distinct works.\n\nSketch First Order Logic Statement: ∀x (SevenDistinctWorks(x) → Heptalogy(x))\n\nPredicates:\n\"\"\"\nHeptalogy(x)\nSevenDistinctWorks(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (SevenDistinctWorks(x) → Heptalogy(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A heptalogy, is a compound literary or narrative work that is made up of seven distinct works.\n\nSketch First Order Logic Statement: ∀x (SevenDistinctWorks(x) → Heptalogy(x))\n\nPredicates:\n\"\"\"\nHeptalogy(x)\nSevenDistinctWorks(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (SevenDistinctWorks(x) → Heptalogy(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Clyde is not focused on the future and industry professions, then he is neither focused on the future and industry professions nor enjoys dressing up in old-fashioned and historical period clothing.\n\nSketch First Order Logic Statement: ¬Industry(clyde) → ¬(Industry(clyde) ∨ DressingUp(clyde))\n\nPredicates:\n\"\"\"\nNotAcademics(x)\nRenaissanceFair(x)\nIndustry(x)\nHistoryRenaissance(x)\nHistoryProf(x)\nDressingUp(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬Industry(clyde) → ¬(Industry(clyde) ∨ DressingUp(clyde))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Clyde is not focused on the future and industry professions, then he is neither focused on the future and industry professions nor enjoys dressing up in old-fashioned and historical period clothing.\n\nSketch First Order Logic Statement: ¬Industry(clyde) → ¬(Industry(clyde) ∨ DressingUp(clyde))\n\nPredicates:\n\"\"\"\nNotAcademics(x)\nRenaissanceFair(x)\nIndustry(x)\nHistoryRenaissance(x)\nHistoryProf(x)\nDressingUp(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬Industry(clyde) → ¬(Industry(clyde) ∨ DressingUp(clyde))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people are fascinated by the history of the Renaissance and other past eras, then they attend Renaissance fairs regularly.\n\nSketch First Order Logic Statement:  (HistoryRenaissance(x) → ∀x  RenaissanceFair(x))\n\nPredicates:\n\"\"\"\nNotAcademics(x)\nRenaissanceFair(x)\nIndustry(x)\nHistoryRenaissance(x)\nHistoryProf(x)\nDressingUp(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (HistoryRenaissance(x) → RenaissanceFair(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All automobiles designed for family use are vehicles intended to be driven at moderate speeds.\n\nSketch First Order Logic Statement: ∀x (ForFamilyUse(x) → IntendedToBeDrivenAtModerateSpeeds(x))\n\nPredicates:\n\"\"\"\nSportsCar(x)\nIntendedToBeDrivenAtModerateSpeeds(x)\nForFamilyUse(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (ForFamilyUse(x) → IntendedToBeDrivenAtModerateSpeeds(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Kat is either both a person who works well in teams in their workplace and is always tired every morning, or she neither works well in teams in their workplace nor is always tired every morning.\n\nSketch First Order Logic Statement: (WorkTeams(kat) ∧ Tired(kat)) ∨ (¬WorkTeams(kat) ∧ ¬Tired(kat))\n\nPredicates:\n\"\"\"\nTired(x)\nWorkTeams(x)\nPositiveAttitude(x)\nBossPromotions(x)\nNegativeFeedback(x)\nColleagues(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "(WorkTeams(kat) ∧ Tired(kat)) ∨ (¬WorkTeams(kat) ∧ ¬Tired(kat))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People either come into work every day with a positive attitude or are always tired every morning.\n\nSketch First Order Logic Statement: ∀x (PositiveAttitude(x) ⊕ Tired(x)) ∧ ((Tired(x) → BossPromotions(x)))\n\nPredicates:\n\"\"\"\nTired(x)\nWorkTeams(x)\nPositiveAttitude(x)\nBossPromotions(x)\nNegativeFeedback(x)\nColleagues(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (PositiveAttitude(x) ⊕ Tired(x)) ∧ ((Tired(x) → BossPromotions(x)))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people work well in teams in their workplace, then they get along with all their colleagues at their work.\n\nSketch First Order Logic Statement: ∀x (WorkTeams(x) → Colleagues(x))\n\nPredicates:\n\"\"\"\nTired(x)\nWorkTeams(x)\nPositiveAttitude(x)\nBossPromotions(x)\nNegativeFeedback(x)\nColleagues(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (WorkTeams(x) → Colleagues(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Drishti is open-source.\n\nSketch First Order Logic Statement: OpenSourcedrishti\n\nPredicates:\n\"\"\"\nModifyFree(x)\nOpenSource(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "OpenSource(drishti)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: There are five grades including A+, A, B+, B, and C in English.\n\nSketch First Order Logic Statement: Grade(a+) ∨ Gradea ∨ Grade(b+) ∨ Grade(b) ∨ Grade(c)\n\nPredicates:\n\"\"\"\nLowerThan90(x)\nGrade(x)\nGetGrade(x, y)\nBetter(x, y)\nRange90to95(x)\nGreaterThan95(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Grade(a+) ∨ Grade(a) ∨ Grade(b+) ∨ Grade(b) ∨ Grade(c)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a student gets A in English, then his score is in the range of 90-95.\n\nSketch First Order Logic Statement: ∀x (GetGrade(x, a) → Range90to95(x))\n\nPredicates:\n\"\"\"\nLowerThan90(x)\nGrade(x)\nGetGrade(x, y)\nBetter(x, y)\nRange90to95(x)\nGreaterThan95(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (GetGrade(x, a) → Range90to95(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Zhang got an A in English.\n\nSketch First Order Logic Statement: GetGrade(z(hang), a)\n\nPredicates:\n\"\"\"\nLowerThan90(x)\nGrade(x)\nGetGrade(x, y)\nBetter(x, y)\nRange90to95(x)\nGreaterThan95(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "GetGrade(zhang, a)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Olivia sleeps during the night.\n\nSketch First Order Logic Statement: ∀x (SleepingDuring(olivia, x) → Night(x))\n\nPredicates:\n\"\"\"\nPrefersCoolAt(x, y)\nNight(x)\nPrefersWarmAt(x, y)\nDay(x)\nWorkingDuring(x, y)\nSleepingDuring(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (SleepingDuring(olivia, x) → Night(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Taylor Swift gives a commencement speech in New York University in 2022.\n\nSketch First Order Logic Statement: Speech(taylorSwift, nyc)\n\nPredicates:\n\"\"\"\nManhattan(x)\nHaveAlbum(x)\nSpeech(x, y)\nIvyLeague(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Speech(taylorSwift, nyc)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Columbia University is one of the Ivy League schools.\n\nSketch First Order Logic Statement: IvyLeague(columbiaUniversity)\n\nPredicates:\n\"\"\"\nManhattan(x)\nHaveAlbum(x)\nSpeech(x, y)\nIvyLeague(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "IvyLeague(columbiaUniversity)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Customers either choose Plan A or Plan B.\n\nSketch First Order Logic Statement:  (PlanA(x) ∨ PlanB(x))\n\nPredicates:\n\"\"\"\nPlanA(x)\nStudyAtSchool(x)\nNoPlan(x)\nPlanB(x)\nOlderThan80(x)\nAward(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (PlanA(x) ∨ PlanB(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Customers either choose Plan A or Plan B.\n\nSketch First Order Logic Statement: ∀x (PlanA(x) ∨ PlanB(x))\n\nPredicates:\n\"\"\"\nPlanA(x)\nStudyAtSchool(x)\nNoPlan(x)\nPlanB(x)\nOlderThan80(x)\nAward(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (PlanA(x) ∨ PlanB(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: James is not a customer who is currently studying at school. \n\nSketch First Order Logic Statement: ¬StudyAtSchool(james)\n\nPredicates:\n\"\"\"\nPlanA(x)\nStudyAtSchool(x)\nNoPlan(x)\nPlanB(x)\nOlderThan80(x)\nAward(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬StudyAtSchool(james)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some horses are racehorses.\n\nSketch First Order Logic Statement:  (Horse(x) ∧ Racehorse(x))\n\nPredicates:\n\"\"\"\nHorse(x)\nDead(x)\nRacehorse(x)\nRacing(x)\nFalls(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Horse(x) ∧ Racehorse(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A horse is a racehorse if it is in a race.\n\nSketch First Order Logic Statement: ∀x (Horse(x) ∧ Racing(x) → Racehorse(x))\n\nPredicates:\n\"\"\"\nHorse(x)\nDead(x)\nRacehorse(x)\nRacing(x)\nFalls(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Horse(x) ∧ Racing(x) → Racehorse(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A horse is a racehorse if it is in a race.\n\nSketch First Order Logic Statement:  (Horse(x) ∧ Racing(x) → ∀x  Racehorse(x))\n\nPredicates:\n\"\"\"\nHorse(x)\nDead(x)\nRacehorse(x)\nRacing(x)\nFalls(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Horse(x) ∧ Racing(x) → Racehorse(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Frederick Monhoff was an architect, artist, and illustrator.\n\nSketch First Order Logic Statement: Architect(monhoff) ∧ Artist(monhoff) ∧ Illustrator(monhoff)\n\nPredicates:\n\"\"\"\nArchitect(x)\nSpeak(x, y)\nArtist(x)\nGoodAt(x, y)\nIllustrator(x)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Architect(monhoff) ∧ Artist(monhoff) ∧ Illustrator(monhoff)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All Americans speak English.\n\nSketch First Order Logic Statement:  (American(x) → ∀x  Speak(x, english))\n\nPredicates:\n\"\"\"\nArchitect(x)\nSpeak(x, y)\nArtist(x)\nGoodAt(x, y)\nIllustrator(x)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (American(x) → Speak(x, english))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Fiedler eigenvalue is the second smallest eigenvalue of the graph Laplacian.\n\nSketch First Order Logic Statement: TheSecondSmallestEige(nvalueOf(fie)dlerEigenvalue, theGraphLaplacian)\n\nPredicates:\n\"\"\"\nKnownFor(x, y)\nMathematician(x)\nHonoredBy(x, y)\nTheSecondSmallestEigenvalueOf(x, y)\nCzech(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "TheSecondSmallestEigenvalueOf(fiedlerEigenvalue, theGraphLaplacian)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Miroslav Fiedler is known for his contributions to linear algebra and graph theory.\n\nSketch First Order Logic Statement: KnownFor(miroslavfiedler, contributionsToLinearAlgebraAndGraphTheory)\n\nPredicates:\n\"\"\"\nKnownFor(x, y)\nMathematician(x)\nHonoredBy(x, y)\nTheSecondSmallestEigenvalueOf(x, y)\nCzech(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "KnownFor(miroslavfiedler, contributionsToLinearAlgebraAndGraphTheory)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Miroslav Fiedler is honored by the Fiedler eigenvalue.\n\nSketch First Order Logic Statement: HonoredBy(miroslavfiedler, fiedlerEigenvalue)\n\nPredicates:\n\"\"\"\nKnownFor(x, y)\nMathematician(x)\nHonoredBy(x, y)\nTheSecondSmallestEigenvalueOf(x, y)\nCzech(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "HonoredBy(miroslavfiedler, fiedlerEigenvalue)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: You can play games on a computer.\n\nSketch First Order Logic Statement:  (Computer(x) → ∀x  CanPlayGames(x))\n\nPredicates:\n\"\"\"\nLaptop(x)\nCanPlayGames(x)\nComputer(x)\nPhone(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Computer(x) → CanPlayGames(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A laptop is a computer.\n\nSketch First Order Logic Statement:  (Laptop(x) → Computer(x))\n\nPredicates:\n\"\"\"\nLaptop(x)\nCanPlayGames(x)\nComputer(x)\nPhone(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Laptop(x) → Computer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: While they were both in Toledo, Walter Folger Brown's father practiced law with Walter Folger Brown.\n\nSketch First Order Logic Statement: In(walterbrown, toledo) ∧ In(walterbrownfather, toledo) ∧ PracticedLawTogether(walterbrownfather, walterbrown)\n\nPredicates:\n\"\"\"\nMarried(x, y)\nIn(x, y)\nLawyer(x)\nGraduatedWith(x, y)\nPracticedLawTogether(x, y)\nServedAs(x, y)\nGraduated(x, y)\nAmericanPolitician(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "In(walterbrown, toledo) ∧ In(walterbrownfather, toledo) ∧ PracticedLawTogether(walterbrownfather, walterbrown)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Walter Folger Brown was an American politician and lawyer, and served as the postmaster general.\n\nSketch First Order Logic Statement: AmericanPolitician(walterbrown) ∧ Lawyer(walterbrown) ∧ ServedAs(walterbrown, postamastergeneral)\n\nPredicates:\n\"\"\"\nMarried(x, y)\nIn(x, y)\nLawyer(x)\nGraduatedWith(x, y)\nPracticedLawTogether(x, y)\nServedAs(x, y)\nGraduated(x, y)\nAmericanPolitician(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "AmericanPolitician(walterbrown) ∧ Lawyer(walterbrown) ∧ ServedAs(walterbrown, postamastergeneral)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Walter Folger Brown was an American politician and lawyer, and served as the postmaster general.\n\nSketch First Order Logic Statement: AmericanPolitician(walterbrown) ∧ Lawy(er(walterbrown) ∧ ServedAs(wa)lterbrown, postamastergeneral)\n\nPredicates:\n\"\"\"\nMarried(x, y)\nIn(x, y)\nLawyer(x)\nGraduatedWith(x, y)\nPracticedLawTogether(x, y)\nServedAs(x, y)\nGraduated(x, y)\nAmericanPolitician(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "AmericanPolitician(walterbrown) ∧ Lawyer(walterbrown) ∧ ServedAs(walterbrown, postamastergeneral)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All products sold in JD are shipped from China. \n\nSketch First Order Logic Statement: ∀x (SoldJD(x) → ShipChina(x))\n\nPredicates:\n\"\"\"\nFavoredByYoungPeople(x)\nShipChina(x)\nCommonlyUsedChina(x)\nSoldJD(x)\nMadeInChina(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (SoldJD(x) → ShipChina(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All products sold in JD are shipped from China. \n\nSketch First Order Logic Statement: ∀x (SoldJD(x) → ShipChina(x))\n\nPredicates:\n\"\"\"\nFavoredByYoungPeople(x)\nShipChina(x)\nCommonlyUsedChina(x)\nSoldJD(x)\nMadeInChina(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (SoldJD(x) → ShipChina(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: MacBook is not made in China and is not commonly used in China.\n\nSketch First Order Logic Statement: ¬(MadeInChina(macbook) ∧ CommonlyUsedChina(macbook))\n\nPredicates:\n\"\"\"\nFavoredByYoungPeople(x)\nShipChina(x)\nCommonlyUsedChina(x)\nSoldJD(x)\nMadeInChina(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(MadeInChina(macbook) ∧ CommonlyUsedChina(macbook))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: MacBook is not made in China and is not commonly used in China.\n\nSketch First Order Logic Statement: ¬(MadeInChina(macbook) ∧ CommonlyUsedChina(macbook))\n\nPredicates:\n\"\"\"\nFavoredByYoungPeople(x)\nShipChina(x)\nCommonlyUsedChina(x)\nSoldJD(x)\nMadeInChina(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(MadeInChina(macbook) ∧ CommonlyUsedChina(macbook))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All products commonly used in China are sold in JD.\n\nSketch First Order Logic Statement: ∀x (CommonlyUsedChina(x) → SoldJD(x))\n\nPredicates:\n\"\"\"\nFavoredByYoungPeople(x)\nShipChina(x)\nCommonlyUsedChina(x)\nSoldJD(x)\nMadeInChina(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (CommonlyUsedChina(x) → SoldJD(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.\n\nSketch First Order Logic Statement: CentralLine(oxfordCircus)\n\nPredicates:\n\"\"\"\nArchitect(x)\nBritish(x)\nLondon(x)\nRegentStreet(x)\nCentralLine(x)\nOxfordStreet(x)\nDesign(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "CentralLine(oxfordCircus)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.\n\nSketch First Order Logic Statement: CentralLine(oxfordCircus)\n\nPredicates:\n\"\"\"\nArchitect(x)\nBritish(x)\nLondon(x)\nRegentStreet(x)\nCentralLine(x)\nOxfordStreet(x)\nDesign(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "CentralLine(oxfordCircus)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Oxford Circus is the entrance to Oxford Circus tube station which is a part of the Central line in 1900.\n\nSketch First Order Logic Statement: CentralLine(oxfordCircus)\n\nPredicates:\n\"\"\"\nArchitect(x)\nBritish(x)\nLondon(x)\nRegentStreet(x)\nCentralLine(x)\nOxfordStreet(x)\nDesign(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "CentralLine(oxfordCircus)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Oxford Street is in London.\n\nSketch First Order Logic Statement: ∀x (OxfordStreet(x) → London(x))\n\nPredicates:\n\"\"\"\nArchitect(x)\nBritish(x)\nLondon(x)\nRegentStreet(x)\nCentralLine(x)\nOxfordStreet(x)\nDesign(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (OxfordStreet(x) → London(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A thing is either alive or dead.\n\nSketch First Order Logic Statement: ∀x (Alive(x) ⊕ Dead(x))\n\nPredicates:\n\"\"\"\nDog(x)\nDead(x)\nCat(x)\nGhost(x)\nAlive(x)\nBark(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Alive(x) ⊕ Dead(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A thing is either alive or dead.\n\nSketch First Order Logic Statement: ∀x (Alive(x) ⊕ Dead(x))\n\nPredicates:\n\"\"\"\nDog(x)\nDead(x)\nCat(x)\nGhost(x)\nAlive(x)\nBark(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Alive(x) ⊕ Dead(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: An animal is either a cat or a dog.\n\nSketch First Order Logic Statement: ∀x (Cat(x) ⊕ Dog(x))\n\nPredicates:\n\"\"\"\nDog(x)\nDead(x)\nCat(x)\nGhost(x)\nAlive(x)\nBark(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Cat(x) ⊕ Dog(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Everything that is a husky is a dog.\n\nSketch First Order Logic Statement:  (Husky(x) → Dog(x))\n\nPredicates:\n\"\"\"\nTiger(x)\nDog(x)\nCat(x)\nHusky(x)\nBengalTiger(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Husky(x) → Dog(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Fido is either a Bengal tiger or a cat.\n\nSketch First Order Logic Statement: Benga(lTiger(fido) ∨ C)at(fido)\n\nPredicates:\n\"\"\"\nTiger(x)\nDog(x)\nCat(x)\nHusky(x)\nBengalTiger(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "BengalTiger(fido) ∨ Cat(fido)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No cats are dogs.\n\nSketch First Order Logic Statement:  (Cat(x) → ∀x  ¬Dog(x))\n\nPredicates:\n\"\"\"\nTiger(x)\nDog(x)\nCat(x)\nHusky(x)\nBengalTiger(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Cat(x) → ¬Dog(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All Bengal tigers are tigers.\n\nSketch First Order Logic Statement: ∀x (BengalTiger((x) → Ti)ger(x))\n\nPredicates:\n\"\"\"\nTiger(x)\nDog(x)\nCat(x)\nHusky(x)\nBengalTiger(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (BengalTiger(x) → Tiger(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a city in a state, and a Summer Olympics is in this city, then the Summer Olympics is in this state.\n\nSketch First Order Logic Statement: ∀x ∀y ∀z (CityInState(x, y) ∧ SummerOlympicsCity(z, x) → SummerOlympicsState(z, y))\n\nPredicates:\n\"\"\"\nSummerOlympicsCountry(x, y)\nCityInCountry(x, y)\nCityInState(x, y)\nSummerOlympicsState(x, y)\nSummerOlympicsCity(x, y)\nStateInCountry(x, y)\nInSummerOlympics(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y ∀z (CityInState(x, y) ∧ SummerOlympicsCity(z, x) → SummerOlympicsState(z, y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The 2028 Summer Olympics is scheduled to take place in Los Angeles(LA).\n\nSketch First Order Logic Statement: SummerOlympicsCity(y2028, la)\n\nPredicates:\n\"\"\"\nSummerOlympicsCountry(x, y)\nCityInCountry(x, y)\nCityInState(x, y)\nSummerOlympicsState(x, y)\nSummerOlympicsCity(x, y)\nStateInCountry(x, y)\nInSummerOlympics(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "SummerOlympicsCity(y2028, la)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a city hold a Summer Olympics, and the city is a US city, then the Summer Olympics will be in the US.\n\nSketch First Order Logic Statement:  ∀y (SummerOlympicsCity(x, y) ∧ CityInCountry(y, us) → SummerOlympicsCountry(x, us))\n\nPredicates:\n\"\"\"\nSummerOlympicsCountry(x, y)\nCityInCountry(x, y)\nCityInState(x, y)\nSummerOlympicsState(x, y)\nSummerOlympicsCity(x, y)\nStateInCountry(x, y)\nInSummerOlympics(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (SummerOlympicsCity(x, y) ∧ CityInCountry(y, us) → SummerOlympicsCountry(x, us))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Cats like playing with all voles.\n\nSketch First Order Logic Statement:  (Vole(x) → CatLikePlayingWith(x))\n\nPredicates:\n\"\"\"\nVole(x)\nLiveInColdPlace(x)\nCatLikePlayingWith(x)\nLarger(x, y)\nFind(x, y)\nLive(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Vole(x) → CatLikePlayingWith(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The boreal taiga zone in North America is a cold place to live in.\n\nSketch First Order Logic Statement: ∀x (Find(x, northAmerica) ∧ Live(x, borealTaigaZone) → LiveInColdPlace(x))\n\nPredicates:\n\"\"\"\nVole(x)\nLiveInColdPlace(x)\nCatLikePlayingWith(x)\nLarger(x, y)\nFind(x, y)\nLive(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Find(x, northAmerica) ∧ Live(x, borealTaigaZone) → LiveInColdPlace(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No men have breast cancer.\n\nSketch First Order Logic Statement:   (Men(x) → ∀x  ¬BreastCancer(x))\n\nPredicates:\n\"\"\"\nWithoutTumor(x)\nBreastCancer(x)\nATypeOfCancer(x)\nWomen(x)\nMen(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (Men(x) → ¬BreastCancer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Either breast cancer or non-breast cancer. \n\nSketch First Order Logic Statement:  ∀x (Bre(astCancer )(x) ∨ Non-BreastCancer(x)) \n\nPredicates:\n\"\"\"\nWithoutTumor(x)\nBreastCancer(x)\nATypeOfCancer(x)\nWomen(x)\nMen(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (BreastCancer (x) ∨ Non-BreastCancer(x)) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Either breast cancer or non-breast cancer. \n\nSketch First Order Logic Statement:   (BreastCancer (x) ∨ ∀x  Non-BreastCancer(x)) \n\nPredicates:\n\"\"\"\nWithoutTumor(x)\nBreastCancer(x)\nATypeOfCancer(x)\nWomen(x)\nMen(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (BreastCancer (x) ∨ Non-BreastCancer(x)) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: LG34 is equipped in the lab.  \n\nSketch First Order Logic Statement: Lab(lg-34)\n\nPredicates:\n\"\"\"\nLab(x)\nA1080p(x)\nAOC(x)\nCheaper(x)\nTypeC(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Lab(lg-34)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some monitors equipped in the lab are produced by the company named AOC. \n\nSketch First Order Logic Statement:  (Lab(x) ∧ ∃x  AOC(x))\n\nPredicates:\n\"\"\"\nLab(x)\nA1080p(x)\nAOC(x)\nCheaper(x)\nTypeC(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Lab(x) ∧ AOC(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If the monitor is cheaper than its original prices, then its resolution is 1080p. \n\nSketch First Order Logic Statement: ∀x (Cheaper(x) → A1080p(x))\n\nPredicates:\n\"\"\"\nLab(x)\nA1080p(x)\nAOC(x)\nCheaper(x)\nTypeC(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Cheaper(x) → A1080p(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some fruits sold in New Haven are shipped from Mexico.\n\nSketch First Order Logic Statement: ∃x (SoldNewHaven(x) ∧ ShippedFromMexico(x))\n\nPredicates:\n\"\"\"\nSoldNewYork(x)\nShippedFromColumbia(x)\nSoldNewHaven(x)\nSoldBoston(x)\nShippedFromMexico(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (SoldNewHaven(x) ∧ ShippedFromMexico(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven. \n\nSketch First Order Logic Statement: ¬(ShippedFromColumbia(avocado) ⊕ SoldNewHaven(avocado))\n\nPredicates:\n\"\"\"\nSoldNewYork(x)\nShippedFromColumbia(x)\nSoldNewHaven(x)\nSoldBoston(x)\nShippedFromMexico(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(ShippedFromColumbia(avocado) ⊕ SoldNewHaven(avocado))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No fruits shipped from Columbia are fruits sold in New York. \n\nSketch First Order Logic Statement:  (ShippedFromColumbia(x) → ∀x  ¬SoldNewYork(x))\n\nPredicates:\n\"\"\"\nSoldNewYork(x)\nShippedFromColumbia(x)\nSoldNewHaven(x)\nSoldBoston(x)\nShippedFromMexico(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (ShippedFromColumbia(x) → ¬SoldNewYork(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Avocadoe are either shipped from Columbia and sold in New Haven, or neither shipped from Columbia nor sold in New Haven. \n\nSketch First Order Logic Statement: ¬(ShippedFromColumbia(avocado) ⊕ SoldNewHaven(avocado))\n\nPredicates:\n\"\"\"\nSoldNewYork(x)\nShippedFromColumbia(x)\nSoldNewHaven(x)\nSoldBoston(x)\nShippedFromMexico(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(ShippedFromColumbia(avocado) ⊕ SoldNewHaven(avocado))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A-2017 supports the type-c port. \n\nSketch First Order Logic Statement: TypeC(a-2017)\n\nPredicates:\n\"\"\"\nCheap(x)\nA1080p(x)\nAOC(x)\nLibrary(x)\nTypeC(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "TypeC(a-2017)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a monitor has a resolution of 1080p, then it does not support the type-c port. \n\nSketch First Order Logic Statement:  (A1080p(x) → ∀x  ¬TypeC(x))\n\nPredicates:\n\"\"\"\nCheap(x)\nA1080p(x)\nAOC(x)\nLibrary(x)\nTypeC(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (A1080p(x) → ¬TypeC(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A-2017 supports the type-c port. \n\nSketch First Order Logic Statement: TypeC(a-2017)\n\nPredicates:\n\"\"\"\nCheap(x)\nA1080p(x)\nAOC(x)\nLibrary(x)\nTypeC(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "TypeC(a-2017)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Sūduva Marijampolė is a soccer team.\n\nSketch First Order Logic Statement: SoccerTeam(suduva)\n\nPredicates:\n\"\"\"\nHold(x, y)\nSoccerTeam(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "SoccerTeam(suduva)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: North Yorkshire is in England.\n\nSketch First Order Logic Statement:  (NorthYorkshire(x) → England(x))\n\nPredicates:\n\"\"\"\nVillage(x)\nNorthYorkshire(x)\nAinderbyQuernhow(x)\nCivilParish(x)\nEngland(x)\nHambleton(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (NorthYorkshire(x) → England(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Hambleton District is in North Yorkshire.\n\nSketch First Order Logic Statement: ∀x (Hambleton(x) → NorthYorkshire(x))\n\nPredicates:\n\"\"\"\nVillage(x)\nNorthYorkshire(x)\nAinderbyQuernhow(x)\nCivilParish(x)\nEngland(x)\nHambleton(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Hambleton(x) → NorthYorkshire(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Douglas Adams is an author who created the book collection called The Salmon of Doubt. \n\nSketch First Order Logic Statement: Author(douglasAdams) ∧ Book(theSa(lmonOfDoub)t)\n\nPredicates:\n\"\"\"\nAboutTechnology(x)\nAuthor(x)\nBook(x)\nCreateInnovativeIdea(x)\nAboutLifeExperience(x)\nContainInnovativeIdea(x)\nWriter(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Author(douglasAdams) ∧ Book(theSalmonOfDoubt)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Douglas Adams is an author who created the book collection called The Salmon of Doubt. \n\nSketch First Order Logic Statement: Author(douglasAdams) ∧ BooktheSalmonOfDoubt\n\nPredicates:\n\"\"\"\nAboutTechnology(x)\nAuthor(x)\nBook(x)\nCreateInnovativeIdea(x)\nAboutLifeExperience(x)\nContainInnovativeIdea(x)\nWriter(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Author(douglasAdams) ∧ Book(theSalmonOfDoubt)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Douglas Adams is an author who created the book collection called The Salmon of Doubt. \n\nSketch First Order Logic Statement: Author(douglasAdams) ∧ Book(theSalmonOfDoubt)\n\nPredicates:\n\"\"\"\nAboutTechnology(x)\nAuthor(x)\nBook(x)\nCreateInnovativeIdea(x)\nAboutLifeExperience(x)\nContainInnovativeIdea(x)\nWriter(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Author(douglasAdams) ∧ Book(theSalmonOfDoubt)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No disposable products can help slow down global warming. \n\nSketch First Order Logic Statement: ∀x (DisposableProducts(x) → ¬HelpSlowDownGlobalWarming(x))\n\nPredicates:\n\"\"\"\nFastFashionProducts(x)\nfriendlyBrand(x)\nSustainableFashionBrand(x)\nHelpSlowDownGlobalWarming(x)\nDisposableProducts(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (DisposableProducts(x) → ¬HelpSlowDownGlobalWarming(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Reformation is not helping slow down global warming, then Reformation is an eco-friendly brand or a sustainable fashion brand.\n\nSketch First Order Logic Statement:  ¬HelpSlowDownGlobalWarming(reformation) → Eco-friendlyBrand(reformation) ∨ SustainableFashionBrand(reformation)\n\nPredicates:\n\"\"\"\nFastFashionProducts(x)\nfriendlyBrand(x)\nSustainableFashionBrand(x)\nHelpSlowDownGlobalWarming(x)\nDisposableProducts(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ¬HelpSlowDownGlobalWarming(reformation) → Eco-friendlyBrand(reformation) ∨ SustainableFashionBrand(reformation)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All sustainable fashion brands are eco-friendly brands.\n\nSketch First Order Logic Statement:   (SustainableFashionBrand(x) → ∀x  Eco-friendlyBrand(x))\n\nPredicates:\n\"\"\"\nFastFashionProducts(x)\nfriendlyBrand(x)\nSustainableFashionBrand(x)\nHelpSlowDownGlobalWarming(x)\nDisposableProducts(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (SustainableFashionBrand(x) → Eco-friendlyBrand(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All sustainable fashion brands are eco-friendly brands.\n\nSketch First Order Logic Statement:  ∀x (SustainableFashionBrand(x) → Eco-friendlyBrand(x))\n\nPredicates:\n\"\"\"\nFastFashionProducts(x)\nfriendlyBrand(x)\nSustainableFashionBrand(x)\nHelpSlowDownGlobalWarming(x)\nDisposableProducts(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (SustainableFashionBrand(x) → Eco-friendlyBrand(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All sustainable fashion brands are eco-friendly brands.\n\nSketch First Order Logic Statement:   (SustainableFashionBrand(x) → Eco-friendlyBrand(x))\n\nPredicates:\n\"\"\"\nFastFashionProducts(x)\nfriendlyBrand(x)\nSustainableFashionBrand(x)\nHelpSlowDownGlobalWarming(x)\nDisposableProducts(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (SustainableFashionBrand(x) → Eco-friendlyBrand(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All sustainable fashion brands are eco-friendly brands.\n\nSketch First Order Logic Statement:  ∀x (SustainableFashionBrand(x) → Eco-friendlyBrandx)\n\nPredicates:\n\"\"\"\nFastFashionProducts(x)\nfriendlyBrand(x)\nSustainableFashionBrand(x)\nHelpSlowDownGlobalWarming(x)\nDisposableProducts(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (SustainableFashionBrand(x) → Eco-friendlyBrand(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Roy Richardson was old when he debuted in cricket.\n\nSketch First Order Logic Statement: Old(royrichardson) ∧ DebutedIn(royrichardson, cricket)\n\nPredicates:\n\"\"\"\nDismissed(x, y)\nOld(x)\nBatsman(x)\nPlayedFor(x, y)\nConstituentCountry(x)\nMediumPaceBowler(x)\nCricketeer(x)\nDebutedIn(x, y)\nRightHanded(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Old(royrichardson) ∧ DebutedIn(royrichardson, cricket)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Roy Richardson was a cricketer for Sint Maartener, a consituent country.\n\nSketch First Order Logic Statement: Cricketeerroyrichardson ∧ PlayedFor(royrichardson, sintmaartener) ∧ ConstituentCountry(sintmaartener)\n\nPredicates:\n\"\"\"\nDismissed(x, y)\nOld(x)\nBatsman(x)\nPlayedFor(x, y)\nConstituentCountry(x)\nMediumPaceBowler(x)\nCricketeer(x)\nDebutedIn(x, y)\nRightHanded(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Cricketeer(royrichardson) ∧ PlayedFor(royrichardson, sintmaartener) ∧ ConstituentCountry(sintmaartener)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement:  John submitted his resume to Google and got a job there.\n\nSketch First Order Logic Statement: CVjohn, google ∧ Employed(john, google)\n\nPredicates:\n\"\"\"\nYale(x)\nCV(x, y)\nEmployed(x, y)\nWorkExp(x)\nGoodEduc(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "CV(john, google) ∧ Employed(john, google)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No students are doctors.\n\nSketch First Order Logic Statement: ∀x (Studentx) → ¬Doctor(x)\n\nPredicates:\n\"\"\"\nTakingClass(x)\nDoctor(x)\nGraduateStudent(x)\nPhDStudent(x)\nStudent(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Student(x) → ¬Doctor(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All graduate students are people taking classes. \n\nSketch First Order Logic Statement:  (GraduateStudent(x) → TakingClass(x))\n\nPredicates:\n\"\"\"\nTakingClass(x)\nDoctor(x)\nGraduateStudent(x)\nPhDStudent(x)\nStudent(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (GraduateStudent(x) → TakingClass(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All people taking classes are students. \n\nSketch First Order Logic Statement: ∀x( (TakingClass)(x) → Student(x))\n\nPredicates:\n\"\"\"\nTakingClass(x)\nDoctor(x)\nGraduateStudent(x)\nPhDStudent(x)\nStudent(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (TakingClass(x) → Student(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Hugh Vanstone has lit more than 160 productions.\n\nSketch First Order Logic Statement: LitOver160Productions(hughVanstone)\n\nPredicates:\n\"\"\"\nAttendedSchoolWhereFrom(x)\nLitOver160Productions(x)\nWorldLeadingLightningDesigner(x)\nFromUK(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "LitOver160Productions(hughVanstone)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Hugh Vanstone has lit more than 160 productions.\n\nSketch First Order Logic Statement: LitOver160Productions(hughVanstone)\n\nPredicates:\n\"\"\"\nAttendedSchoolWhereFrom(x)\nLitOver160Productions(x)\nWorldLeadingLightningDesigner(x)\nFromUK(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "LitOver160Productions(hughVanstone)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Hugh Vanstone is from the UK.\n\nSketch First Order Logic Statement: FromUK(hughVanstone)\n\nPredicates:\n\"\"\"\nAttendedSchoolWhereFrom(x)\nLitOver160Productions(x)\nWorldLeadingLightningDesigner(x)\nFromUK(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "FromUK(hughVanstone)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No man can run faster than Bolt. \n\nSketch First Order Logic Statement:  (Man(x) → ¬FasterThanBolt(x))\n\nPredicates:\n\"\"\"\nMan(x)\nFasterThanBolt(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Man(x) → ¬FasterThanBolt(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University.\n\nSketch First Order Logic Statement: AmericanComputerScientist(donaldErvinKnuth) ∧ Mathematician(donaldErvinKnuth) ∧ ProfessorStanforddonaldErvinKnuth\n\nPredicates:\n\"\"\"\nBeCalled(x, y)\nAmericanComputerScientist(x)\nProfessorStanford(x)\nMathematician(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "AmericanComputerScientist(donaldErvinKnuth) ∧ Mathematician(donaldErvinKnuth) ∧ ProfessorStanford(donaldErvinKnuth)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University.\n\nSketch First Order Logic Statement: AmericanComputerScientist(donaldErvinKnuth) ∧ Mathematician(donaldErvinKnuth) ∧ ProfessorStanford(donaldErvinKnuth)\n\nPredicates:\n\"\"\"\nBeCalled(x, y)\nAmericanComputerScientist(x)\nProfessorStanford(x)\nMathematician(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "AmericanComputerScientist(donaldErvinKnuth) ∧ Mathematician(donaldErvinKnuth) ∧ ProfessorStanford(donaldErvinKnuth)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Donald Ervin Knuth is an American computer scientist, mathematician, and Professor Emeritus at Stanford University.\n\nSketch First Order Logic Statement: AmericanComputerScientist(donaldErvinKnuth) ∧ Mathematician(donaldErvinKnuth) ∧ ProfessorStanford(donaldErvinKnuth)\n\nPredicates:\n\"\"\"\nBeCalled(x, y)\nAmericanComputerScientist(x)\nProfessorStanford(x)\nMathematician(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "AmericanComputerScientist(donaldErvinKnuth) ∧ Mathematician(donaldErvinKnuth) ∧ ProfessorStanford(donaldErvinKnuth)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Neocrepidodera Corpulentas are flea beetles or moths.\n\nSketch First Order Logic Statement: FleaBeetle(neocrepidoderacorpulenta) ∨ Moth(neocrepidoderacorpulenta)\n\nPredicates:\n\"\"\"\nMoth(x)\nSpecies(x)\nIn(x, y)\nFleaBeetle(x)\nFamily(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "FleaBeetle(neocrepidoderacorpulenta) ∨ Moth(neocrepidoderacorpulenta)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The species Neocrepidodera Corpulenta is in the Chrysomelidae family.\n\nSketch First Order Logic Statement: Species(neocrepidoderacorpulenta) ∧ Family(chrysomelidae) ∧ In(neocrepidoderacorpul(en)ta, chrysomelidae)\n\nPredicates:\n\"\"\"\nMoth(x)\nSpecies(x)\nIn(x, y)\nFleaBeetle(x)\nFamily(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Species(neocrepidoderacorpulenta) ∧ Family(chrysomelidae) ∧ In(neocrepidoderacorpulenta, chrysomelidae)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Carrozzeria Colli made car bodies. \n\nSketch First Order Logic Statement: Made(carrozz(eriacolli, carbodies))\n\nPredicates:\n\"\"\"\nMade(x, y)\nBuiltBy(x, y)\nWorkedFor(x, y)\nMilaneseCoachbuilderCompany(x)\nRacingCar(x)\nEstablishedIn(x, y)\nAirforce(x)\nRacingcar(x)\nFirstAutomobilesBy(x, y)\nEstablishedBy(x, y)\nSpecializedIn(x, y)\nUsed(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Made(carrozzeriacolli, carbodies)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Carrozzeria Colli is a company that specialized in using aluminum.\n\nSketch First Order Logic Statement: SpecializedIncarrozzeriacolli, usingaluminum\n\nPredicates:\n\"\"\"\nMade(x, y)\nBuiltBy(x, y)\nWorkedFor(x, y)\nMilaneseCoachbuilderCompany(x)\nRacingCar(x)\nEstablishedIn(x, y)\nAirforce(x)\nRacingcar(x)\nFirstAutomobilesBy(x, y)\nEstablishedBy(x, y)\nSpecializedIn(x, y)\nUsed(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "SpecializedIn(carrozzeriacolli, usingaluminum)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Carrozzeria Colli is a Milanese coachbuilder company that was established by Giuseppe Colli in 1931.\n\nSketch First Order Logic Statement: MilaneseCoachbuilderCompany(carrozzeriacolli) ∧ EstablishedBycarrozzeriacolli, giuseppecolli ∧ EstablishedIn(carrozzeriacolli, y1901)\n\nPredicates:\n\"\"\"\nMade(x, y)\nBuiltBy(x, y)\nWorkedFor(x, y)\nMilaneseCoachbuilderCompany(x)\nRacingCar(x)\nEstablishedIn(x, y)\nAirforce(x)\nRacingcar(x)\nFirstAutomobilesBy(x, y)\nEstablishedBy(x, y)\nSpecializedIn(x, y)\nUsed(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "MilaneseCoachbuilderCompany(carrozzeriacolli) ∧ EstablishedBy(carrozzeriacolli, giuseppecolli) ∧ EstablishedIn(carrozzeriacolli, y1901)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Carrozzeria Colli made car bodies. \n\nSketch First Order Logic Statement: Made(carrozzeriacolli, carbodies)\n\nPredicates:\n\"\"\"\nMade(x, y)\nBuiltBy(x, y)\nWorkedFor(x, y)\nMilaneseCoachbuilderCompany(x)\nRacingCar(x)\nEstablishedIn(x, y)\nAirforce(x)\nRacingcar(x)\nFirstAutomobilesBy(x, y)\nEstablishedBy(x, y)\nSpecializedIn(x, y)\nUsed(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Made(carrozzeriacolli, carbodies)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The first automobiles built by Carrozzeria Colli were racing cars.\n\nSketch First Order Logic Statement:  (FirstAutomobilesBy(x, carrozzeriacolli) → ∀x  Racingcar(x))\n\nPredicates:\n\"\"\"\nMade(x, y)\nBuiltBy(x, y)\nWorkedFor(x, y)\nMilaneseCoachbuilderCompany(x)\nRacingCar(x)\nEstablishedIn(x, y)\nAirforce(x)\nRacingcar(x)\nFirstAutomobilesBy(x, y)\nEstablishedBy(x, y)\nSpecializedIn(x, y)\nUsed(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (FirstAutomobilesBy(x, carrozzeriacolli) → Racingcar(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: John will go to the cinema if and only if Jack goes to the cinema today.\n\nSketch First Order Logic Statement: GoToTheCinema(john, today) ↔ GoToTheCinema(jack, today)\n\nPredicates:\n\"\"\"\nGoToTheCinema(x, y)\nMonth(x)\nMovie(x)\nBadWeather(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "GoToTheCinema(john, today) ↔ GoToTheCinema(jack, today)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: John will go to the cinema if and only if Jack goes to the cinema today.\n\nSketch First Order Logic Statement: GoToTheCinema(john, today) ↔ GoToTheCinema(jack, today)\n\nPredicates:\n\"\"\"\nGoToTheCinema(x, y)\nMonth(x)\nMovie(x)\nBadWeather(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "GoToTheCinema(john, today) ↔ GoToTheCinema(jack, today)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Joe owns an item fron Quiksilver.\n\nSketch First Order Logic Statement: ∃x (QuiksilverSells(x) → JoeOwns(x))\n\nPredicates:\n\"\"\"\nClothing(x)\nFootwear(x)\nJoeOwns(x)\nAccessory(x)\nQuiksilverSells(x)\nSportswear(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (QuiksilverSells(x) → JoeOwns(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Joe owns an item fron Quiksilver.\n\nSketch First Order Logic Statement:  (QuiksilverSells(x) → JoeOwns(x))\n\nPredicates:\n\"\"\"\nClothing(x)\nFootwear(x)\nJoeOwns(x)\nAccessory(x)\nQuiksilverSells(x)\nSportswear(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (QuiksilverSells(x) → JoeOwns(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Flannels are a type of clothing.\n\nSketch First Order Logic Statement: Clothingflannel\n\nPredicates:\n\"\"\"\nClothing(x)\nFootwear(x)\nJoeOwns(x)\nAccessory(x)\nQuiksilverSells(x)\nSportswear(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Clothing(flannel)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All video games in the FIFA series support the PS4 platform. \n\nSketch First Order Logic Statement: ∀x (FIFAx) → SupportPS4(x)\n\nPredicates:\n\"\"\"\nPokemon(x)\nSupportPS4(x)\nSoccerOnline(x)\nFIFA(x)\nNintendo(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (FIFA(x) → SupportPS4(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All video games supporting users to simulate playing soccer games online are in the FIFA series.\n\nSketch First Order Logic Statement: ∀x (SoccerOnline(x) → FIFA(x))\n\nPredicates:\n\"\"\"\nPokemon(x)\nSupportPS4(x)\nSoccerOnline(x)\nFIFA(x)\nNintendo(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (SoccerOnline(x) → FIFA(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No video games released by Nintendo support the PS4 platform.\n\nSketch First Order Logic Statement:  (Nintendo(x) → ¬SupportPS4(x))\n\nPredicates:\n\"\"\"\nPokemon(x)\nSupportPS4(x)\nSoccerOnline(x)\nFIFA(x)\nNintendo(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Nintendo(x) → ¬SupportPS4(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No video games released by Nintendo support the PS4 platform.\n\nSketch First Order Logic Statement: ∀x (Nintendo(x) → ¬SupportPS4(x))\n\nPredicates:\n\"\"\"\nPokemon(x)\nSupportPS4(x)\nSoccerOnline(x)\nFIFA(x)\nNintendo(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Nintendo(x) → ¬SupportPS4(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Social payments in Russia can only be transferred to MIR payment cards.\n\nSketch First Order Logic Statement:  (SocialRussia(x) → Mir(x))\n\nPredicates:\n\"\"\"\nMir(x)\nSocialRussia(x)\nApplePay(x)\nInternational(x)\nRussianBank(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (SocialRussia(x) → Mir(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No payment cards issued by Russian banks can be used with ApplePay.\n\nSketch First Order Logic Statement: ∀x (RussianBank(x() → ¬A)pplePay(x))\n\nPredicates:\n\"\"\"\nMir(x)\nSocialRussia(x)\nApplePay(x)\nInternational(x)\nRussianBank(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (RussianBank(x) → ¬ApplePay(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No payment cards issued by Russian banks can be used with ApplePay.\n\nSketch First Order Logic Statement: ∀x (RussianBank(x) → ¬ApplePay(x))\n\nPredicates:\n\"\"\"\nMir(x)\nSocialRussia(x)\nApplePay(x)\nInternational(x)\nRussianBank(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (RussianBank(x) → ¬ApplePay(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Astro is a van produced by Chevrolet. \n\nSketch First Order Logic Statement: Chevrolet(astro) ∧ Van(astro)\n\nPredicates:\n\"\"\"\nCar(x)\nVan(x)\nChevrolet(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Chevrolet(astro) ∧ Van(astro)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Cars produced by Chevrolet are either cars or vans.\n\nSketch First Order Logic Statement:  (Chevrolet(x) → ∀x  Car(x) ⊕ Van(x))\n\nPredicates:\n\"\"\"\nCar(x)\nVan(x)\nChevrolet(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Chevrolet(x) → Car(x) ⊕ Van(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Lumina APV is produced by Chevrolet. \n\nSketch First Order Logic Statement: Chevrolet(luminaAPV)\n\nPredicates:\n\"\"\"\nCar(x)\nVan(x)\nChevrolet(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Chevrolet(luminaAPV)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Lumina APV is produced by Chevrolet. \n\nSketch First Order Logic Statement: Chevrolet(luminaAPV)\n\nPredicates:\n\"\"\"\nCar(x)\nVan(x)\nChevrolet(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Chevrolet(luminaAPV)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Everyone who works in person is a commuter.\n\nSketch First Order Logic Statement:  (InPerson(x) → ∀x  Commuter(x))\n\nPredicates:\n\"\"\"\nCommuter(x)\nFromHome(x)\nRelaxed(x)\nInPerson(x)\nHomeOffice(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (InPerson(x) → Commuter(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Everyone who works from home has a relaxed schedule.\n\nSketch First Order Logic Statement:  (FromHome(x) → ∀x  Relaxed(x))\n\nPredicates:\n\"\"\"\nCommuter(x)\nFromHome(x)\nRelaxed(x)\nInPerson(x)\nHomeOffice(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (FromHome(x) → Relaxed(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Everyone who works in person is a commuter.\n\nSketch First Order Logic Statement: ∀x (InPe(rson(x) → Co)mmuter(x))\n\nPredicates:\n\"\"\"\nCommuter(x)\nFromHome(x)\nRelaxed(x)\nInPerson(x)\nHomeOffice(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (InPerson(x) → Commuter(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Jason Kramer is an American music supervisor.\n\nSketch First Order Logic Statement: MusicSupervisor(jasonKramer) ∧ American(jasonKramer)\n\nPredicates:\n\"\"\"\nHostShowOnPublicRadioStation(x)\nMusicSupervisor(x)\nRadioPersonality(x)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "MusicSupervisor(jasonKramer) ∧ American(jasonKramer)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some American radio personalities are also music supervisors. \n\nSketch First Order Logic Statement: ∃x (American(x) ∧ MusicSupervisor(x) ∧ RadioPersonality(x))\n\nPredicates:\n\"\"\"\nHostShowOnPublicRadioStation(x)\nMusicSupervisor(x)\nRadioPersonality(x)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (American(x) ∧ MusicSupervisor(x) ∧ RadioPersonality(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some American radio personalities are also music supervisors. \n\nSketch First Order Logic Statement:  (American(x) ∧ ∃x  MusicSupervisor(x) ∧ RadioPersonality(x))\n\nPredicates:\n\"\"\"\nHostShowOnPublicRadioStation(x)\nMusicSupervisor(x)\nRadioPersonality(x)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (American(x) ∧ MusicSupervisor(x) ∧ RadioPersonality(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No coffee sold in Walmart is produced in France. \n\nSketch First Order Logic Statement: ∀x (Walmart(x) → ¬France(x))\n\nPredicates:\n\"\"\"\nCompany(x)\nHighPrice(x)\nFrance(x)\nColumbia(x)\nWalmart(x)\nFavored(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Walmart(x) → ¬France(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All coffee with high prices is favored by local residents. \n\nSketch First Order Logic Statement: ∀x (HighPrice(x) → Favored(x))\n\nPredicates:\n\"\"\"\nCompany(x)\nHighPrice(x)\nFrance(x)\nColumbia(x)\nWalmart(x)\nFavored(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (HighPrice(x) → Favored(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All coffee supplied by the company is sold in Walmart. \n\nSketch First Order Logic Statement: ∀x (Comp(an)y(x) → Walmart(x))\n\nPredicates:\n\"\"\"\nCompany(x)\nHighPrice(x)\nFrance(x)\nColumbia(x)\nWalmart(x)\nFavored(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Company(x) → Walmart(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Civet Coffee is not produced in Columbia and is cheap.\n\nSketch First Order Logic Statement: ¬(Columbia(civetcoffee) ∧ HighPrice(civetcoffee))\n\nPredicates:\n\"\"\"\nCompany(x)\nHighPrice(x)\nFrance(x)\nColumbia(x)\nWalmart(x)\nFavored(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(Columbia(civetcoffee) ∧ HighPrice(civetcoffee))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Poland is in Europe.\n\nSketch First Order Logic Statement: ∀x (Poland(x) → Europe(x))\n\nPredicates:\n\"\"\"\nEurope(x)\nGalicia(x)\nRochelleLive(x)\nDominiqueLive(x)\nAlfonsoLive(x)\nSpain(x)\nPoland(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Poland(x) → Europe(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: There are two places named Galicia: either in Spain or in Poland.\n\nSketch First Order Logic Statement: ∀x (Galicia(x) → Spain(x) ⊕ Poland(x))\n\nPredicates:\n\"\"\"\nEurope(x)\nGalicia(x)\nRochelleLive(x)\nDominiqueLive(x)\nAlfonsoLive(x)\nSpain(x)\nPoland(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Galicia(x) → Spain(x) ⊕ Poland(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Alfonso lives in Galicia.\n\nSketch First Order Logic Statement:  (AlfonsoLive(x) → Galicia(x))\n\nPredicates:\n\"\"\"\nEurope(x)\nGalicia(x)\nRochelleLive(x)\nDominiqueLive(x)\nAlfonsoLive(x)\nSpain(x)\nPoland(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (AlfonsoLive(x) → Galicia(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Ralph Hammerthaler is a German writer.\n\nSketch First Order Logic Statement: Writer(ralphHammerthaler)\n\nPredicates:\n\"\"\"\nLocatedIn(x, y)\nWriter(x)\nBornIn1965(x)\nBornIn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Writer(ralphHammerthaler)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Germany is in Europe.\n\nSketch First Order Logic Statement: LocatedIn(germany, europe)\n\nPredicates:\n\"\"\"\nLocatedIn(x, y)\nWriter(x)\nBornIn1965(x)\nBornIn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "LocatedIn(germany, europe)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some books that have won Hugo Awards are written by Tomas.\n\nSketch First Order Logic Statement: ∃x (WinningHugoAward(x) ∧ WrittenByTomas(x))\n\nPredicates:\n\"\"\"\nSoldOneMillion(x)\nWinningHugoAward(x)\nWrittenByTomas(x)\nInspiredFromShakespeare(x)\nAboutFuture(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (WinningHugoAward(x) ∧ WrittenByTomas(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some books that have won Hugo Awards are written by Tomas.\n\nSketch First Order Logic Statement:  (WinningHugoAward(x) ∧ ∃x  WrittenByTomas(x))\n\nPredicates:\n\"\"\"\nSoldOneMillion(x)\nWinningHugoAward(x)\nWrittenByTomas(x)\nInspiredFromShakespeare(x)\nAboutFuture(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (WinningHugoAward(x) ∧ WrittenByTomas(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some books that have won Hugo Awards are written by Tomas.\n\nSketch First Order Logic Statement: ∃x (WinningHugoAwardx) ∧ WrittenByTomas(x)\n\nPredicates:\n\"\"\"\nSoldOneMillion(x)\nWinningHugoAward(x)\nWrittenByTomas(x)\nInspiredFromShakespeare(x)\nAboutFuture(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (WinningHugoAward(x) ∧ WrittenByTomas(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All lemons are fruit.\n\nSketch First Order Logic Statement: ∀x (Lemon(x) → Fruit(x))\n\nPredicates:\n\"\"\"\nEdible(x)\nGrass(x)\nFood(x)\nFruit(x)\nMeadow(x)\nLemon(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Lemon(x) → Fruit(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All edible things are food. \n\nSketch First Order Logic Statement: ∀x (Edible(x) → Food(x))\n\nPredicates:\n\"\"\"\nEdible(x)\nGrass(x)\nFood(x)\nFruit(x)\nMeadow(x)\nLemon(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Edible(x) → Food(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All lemons are fruit.\n\nSketch First Order Logic Statement: ∀x Lemon(x → Fruit(x))\n\nPredicates:\n\"\"\"\nEdible(x)\nGrass(x)\nFood(x)\nFruit(x)\nMeadow(x)\nLemon(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Lemon(x) → Fruit(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All edible things are food. \n\nSketch First Order Logic Statement: ∀x (Ediblex) → Food(x)\n\nPredicates:\n\"\"\"\nEdible(x)\nGrass(x)\nFood(x)\nFruit(x)\nMeadow(x)\nLemon(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Edible(x) → Food(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All teams attending the NBA finals have more than thirty years of history.\n\nSketch First Order Logic Statement:  (team(x) ∧ Attending(x, nbafinals) → ∀x  HasMoreThan(x, thirtyyearsofhistory))\n\nPredicates:\n\"\"\"\nAttending(x, y)\nTeam(x)\nHasMoreThan(x, y)\nWon(x, y)\nMoreIncome(x)\nFrom(x, y)\nLost(x, y)\nteam(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (team(x) ∧ Attending(x, nbafinals) → HasMoreThan(x, thirtyyearsofhistory))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a team wins the NBA finals, then they will have more income.\n\nSketch First Order Logic Statement: ∀x (Team(x) ∧ Won(x, nbafinals) → MoreIncome(x))\n\nPredicates:\n\"\"\"\nAttending(x, y)\nTeam(x)\nHasMoreThan(x, y)\nWon(x, y)\nMoreIncome(x)\nFrom(x, y)\nLost(x, y)\nteam(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Team(x) ∧ Won(x, nbafinals) → MoreIncome(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Boston Celtics are a team that lost the NBA finals.\n\nSketch First Order Logic Statement: Team(bostonceltics) ∧ Lostbostonceltics, nbafinals\n\nPredicates:\n\"\"\"\nAttending(x, y)\nTeam(x)\nHasMoreThan(x, y)\nWon(x, y)\nMoreIncome(x)\nFrom(x, y)\nLost(x, y)\nteam(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Team(bostonceltics) ∧ Lost(bostonceltics, nbafinals)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Maya is a volleyball player.\n\nSketch First Order Logic Statement: VolleyballPlayer(maya)\n\nPredicates:\n\"\"\"\nWillPlayViolin(x)\nVolleyballPlayer(x)\nCanInjureFingures(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "VolleyballPlayer(maya)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A device is either with the company logo or belongs to employees. \n\nSketch First Order Logic Statement: ∀x (CompanyLogo(x) ∨ Employee(x))\n\nPredicates:\n\"\"\"\nProducedAfter2020(x)\nWifi(x)\nGoogleHome(x)\nControlledByManager(x)\nInCompany(x)\nCompanyLogo(x)\nEmployee(x)\nEasyToOperate(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (CompanyLogo(x) ∨ Employee(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All devices belonging to employees are available to connect to the company's wifi. \n\nSketch First Order Logic Statement: ∀x (Employee((x) → )Wifi(x))\n\nPredicates:\n\"\"\"\nProducedAfter2020(x)\nWifi(x)\nGoogleHome(x)\nControlledByManager(x)\nInCompany(x)\nCompanyLogo(x)\nEmployee(x)\nEasyToOperate(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Employee(x) → Wifi(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: IPod1 is produced before 2020. \n\nSketch First Order Logic Statement: ¬ProducedAfter2020(iPod1)\n\nPredicates:\n\"\"\"\nProducedAfter2020(x)\nWifi(x)\nGoogleHome(x)\nControlledByManager(x)\nInCompany(x)\nCompanyLogo(x)\nEmployee(x)\nEasyToOperate(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬ProducedAfter2020(iPod1)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All devices belonging to the company are connected to Google Home. \n\nSketch First Order Logic Statement: ∀x (InCompany(x) → GoogleHomex)\n\nPredicates:\n\"\"\"\nProducedAfter2020(x)\nWifi(x)\nGoogleHome(x)\nControlledByManager(x)\nInCompany(x)\nCompanyLogo(x)\nEmployee(x)\nEasyToOperate(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (InCompany(x) → GoogleHome(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All CD players are delicate mechanisms.\n\nSketch First Order Logic Statement: ∀x (CDPlay(er(x) → DelicateM)echanism(x))\n\nPredicates:\n\"\"\"\nCDPlayer(x)\nSuitableToyForChildren(x)\nDelicateMechanism(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (CDPlayer(x) → DelicateMechanism(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All baby elephants are elephants.\n\nSketch First Order Logic Statement: ∀x (BabyElephant(x) → Elephant(x))\n\nPredicates:\n\"\"\"\nBabyElephant(x)\nLivingBeing(x)\nMammal(x)\nSleepy(x)\nElephant(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (BabyElephant(x) → Elephant(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All baby elephants are elephants.\n\nSketch First Order Logic Statement: ∀x (BabyElephant(x) → Elephant(x))\n\nPredicates:\n\"\"\"\nBabyElephant(x)\nLivingBeing(x)\nMammal(x)\nSleepy(x)\nElephant(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (BabyElephant(x) → Elephant(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some baby elephants are sleepy.\n\nSketch First Order Logic Statement: ∃x BabyElephant(x ∧ Sleepy(x))\n\nPredicates:\n\"\"\"\nBabyElephant(x)\nLivingBeing(x)\nMammal(x)\nSleepy(x)\nElephant(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (BabyElephant(x) ∧ Sleepy(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some baby elephants are sleepy.\n\nSketch First Order Logic Statement:  (BabyElephant(x) ∧ ∃x  Sleepy(x))\n\nPredicates:\n\"\"\"\nBabyElephant(x)\nLivingBeing(x)\nMammal(x)\nSleepy(x)\nElephant(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (BabyElephant(x) ∧ Sleepy(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some baby elephants are sleepy.\n\nSketch First Order Logic Statement:  (BabyElephant(x) ∧ ∃x  Sleepy(x))\n\nPredicates:\n\"\"\"\nBabyElephant(x)\nLivingBeing(x)\nMammal(x)\nSleepy(x)\nElephant(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (BabyElephant(x) ∧ Sleepy(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No faculty does homework.\n\nSketch First Order Logic Statement:  (Faculty(x) → ∀x  ¬DoesHomework(x))\n\nPredicates:\n\"\"\"\nWorkAtSchool(x)\nKid(x)\nStudent(x)\nDoesHomework(x)\nFaculty(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Faculty(x) → ¬DoesHomework(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No faculty does homework.\n\nSketch First Order Logic Statement: ∀x (Facultyx) → ¬DoesHomework(x)\n\nPredicates:\n\"\"\"\nWorkAtSchool(x)\nKid(x)\nStudent(x)\nDoesHomework(x)\nFaculty(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Faculty(x) → ¬DoesHomework(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If someone works at a school, then they are faculty.\n\nSketch First Order Logic Statement: ∀x (WorkAtSchool(x) → Faculty(x))\n\nPredicates:\n\"\"\"\nWorkAtSchool(x)\nKid(x)\nStudent(x)\nDoesHomework(x)\nFaculty(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (WorkAtSchool(x) → Faculty(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All songs that are full of lyrics need to be written with words\n\nSketch First Order Logic Statement: ∀x (SongsFullOfLyrics(x) → NeedToBeWrittenWithWords(x))\n\nPredicates:\n\"\"\"\nMaxListensToRap(x)\nSongsFromKanyeWest(x)\nNeedToBeWrittenWithWords(x)\nMaxListensToClassicalMusic(x)\nSongsFrom12thCentury(x)\nSongsFullOfLyrics(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (SongsFullOfLyrics(x) → NeedToBeWrittenWithWords(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Either Max listens to classical music or Max listens to rap. \n\nSketch First Order Logic Statement: ∀x (MaxListensToCla(ssicalMusic(x) ∨ MaxListensT)oRap(x))\n\nPredicates:\n\"\"\"\nMaxListensToRap(x)\nSongsFromKanyeWest(x)\nNeedToBeWrittenWithWords(x)\nMaxListensToClassicalMusic(x)\nSongsFrom12thCentury(x)\nSongsFullOfLyrics(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (MaxListensToClassicalMusic(x) ∨ MaxListensToRap(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If the song Max listens to is rap, then the song is from Kanye West. \n\nSketch First Order Logic Statement: ∀x ((MaxListensToRap(x) → SongsFr)omKanyeWest(x))\n\nPredicates:\n\"\"\"\nMaxListensToRap(x)\nSongsFromKanyeWest(x)\nNeedToBeWrittenWithWords(x)\nMaxListensToClassicalMusic(x)\nSongsFrom12thCentury(x)\nSongsFullOfLyrics(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (MaxListensToRap(x) → SongsFromKanyeWest(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a song peaked at No.1 at a cetain place, then it was extremely popular.\n\nSketch First Order Logic Statement: ∀x  (Peak(x, y) → ∀y  Popular(x))\n\nPredicates:\n\"\"\"\nPeak(x, y)\nPopular(x)\nProduce(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (Peak(x, y) → Popular(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a song peaked at No.1 at a cetain place, then it was extremely popular.\n\nSketch First Order Logic Statement: ∀x  (Peak(x, y) → ∀y  Popular(x))\n\nPredicates:\n\"\"\"\nPeak(x, y)\nPopular(x)\nProduce(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (Peak(x, y) → Popular(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a song peaked at No.1 at a cetain place, then it was extremely popular.\n\nSketch First Order Logic Statement:  ∀y (Peak(x, y) → Popular(x))\n\nPredicates:\n\"\"\"\nPeak(x, y)\nPopular(x)\nProduce(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (Peak(x, y) → Popular(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All people who limp often and regularly have long-term medical issues with underlying causes.\n\nSketch First Order Logic Statement: ∀x Limp(x → Medical(x))\n\nPredicates:\n\"\"\"\nLimp(x)\nTired(x)\nSpry(x)\nGym(x)\nIndoors(x)\nMedical(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Limp(x) → Medical(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people have long-term medical issues with underlying causes, then they are not often spry and energetic.\n\nSketch First Order Logic Statement: ∀x (Medicalx) → ¬Spry(x)\n\nPredicates:\n\"\"\"\nLimp(x)\nTired(x)\nSpry(x)\nGym(x)\nIndoors(x)\nMedical(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Medical(x) → ¬Spry(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People either stay indoors and rest a lot at home or people are often tired and disinterested in their activities.\n\nSketch First Order Logic Statement:  (Spry(x) ⊕ Tired(x)) ∧ ∀x  ((Tired(x) → Indoors(x)))\n\nPredicates:\n\"\"\"\nLimp(x)\nTired(x)\nSpry(x)\nGym(x)\nIndoors(x)\nMedical(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Spry(x) ⊕ Tired(x)) ∧ ((Tired(x) → Indoors(x)))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Real Madrid and Atlético Madrid both scored zero goals in 2016 UCL final during the extra time.\n\nSketch First Order Logic Statement: SoccerTeam(realMadrid) ∧ SoccerTeam(atleticoMadrid) ∧ SameScore(realMadrid, atleticoMadrid) ∧ During(extraTime)\n\nPredicates:\n\"\"\"\nPlayPenalty(x, y)\nPlayExtra(x, y)\nDuring(x)\nSoccerTeam(x)\nSameScore(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "SoccerTeam(realMadrid) ∧ SoccerTeam(atleticoMadrid) ∧ SameScore(realMadrid, atleticoMadrid) ∧ During(extraTime)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Real Madrid and Atlético Madrid both scored zero goals in 2016 UCL final during the extra time.\n\nSketch First Order Logic Statement: SoccerTeam(realMadrid) ∧ SoccerTeam(atleticoMadrid) ∧ SameScore(realMadrid, atleticoMadrid) ∧ During(extraTime)\n\nPredicates:\n\"\"\"\nPlayPenalty(x, y)\nPlayExtra(x, y)\nDuring(x)\nSoccerTeam(x)\nSameScore(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "SoccerTeam(realMadrid) ∧ SoccerTeam(atleticoMadrid) ∧ SameScore(realMadrid, atleticoMadrid) ∧ During(extraTime)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: System 7 has released several club singles.\n\nSketch First Order Logic Statement: ∃x (ClubSinglex) ∧ Released(system7, x)\n\nPredicates:\n\"\"\"\nSingle(x)\nFormed(x, y)\nElectronicDanceMusicBand(x)\nReleased(x, y)\nClubSingle(x)\nBand(x)\nFormerMemberOf(x, y)\nBasedOn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (ClubSingle(x) ∧ Released(system7, x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Steve Hillage and Miquette Giraudy formed System 7.\n\nSketch First Order Logic Statement: Formed(stevehillage, system7) ∧ Formed(miquettegiraudy, s(yste)m7)\n\nPredicates:\n\"\"\"\nSingle(x)\nFormed(x, y)\nElectronicDanceMusicBand(x)\nReleased(x, y)\nClubSingle(x)\nBand(x)\nFormerMemberOf(x, y)\nBasedOn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Formed(stevehillage, system7) ∧ Formed(miquettegiraudy, system7)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Steve Hillage and Miquette Giraudy are former members of the band Gong.\n\nSketch First Order Logic Statement: FormerMemberOf(stevehillage, gong) ∧ FormerMemberOf(miquettegiraudy, gong)\n\nPredicates:\n\"\"\"\nSingle(x)\nFormed(x, y)\nElectronicDanceMusicBand(x)\nReleased(x, y)\nClubSingle(x)\nBand(x)\nFormerMemberOf(x, y)\nBasedOn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "FormerMemberOf(stevehillage, gong) ∧ FormerMemberOf(miquettegiraudy, gong)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Extractive models are a kind of summarization models.\n\nSketch First Order Logic Statement:  (Model(x) ∧ ∀x  Extractive(x) → Summarization(x))\n\nPredicates:\n\"\"\"\nSummarization(x)\nOnlyUseInputDocument(x)\nModel(x)\nFaithful(x)\nExtractive(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Model(x) ∧ Extractive(x) → Summarization(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A summarization model is always faithful if it uses content from the input documents.\n\nSketch First Order Logic Statement:  (Model(x) ∧ Summarization(x) ∧ OnlyUseInputDocument(x) → Faithful(x))\n\nPredicates:\n\"\"\"\nSummarization(x)\nOnlyUseInputDocument(x)\nModel(x)\nFaithful(x)\nExtractive(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Model(x) ∧ Summarization(x) ∧ OnlyUseInputDocument(x) → Faithful(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people want to work in the software engineering industry, then they practice coding questions.\n\nSketch First Order Logic Statement: ∀x Industry(x) → Coding(x)\n\nPredicates:\n\"\"\"\nParentDoctors(x)\nIndustry(x)\nStudyingToBeDoctor(x)\nHealthcare(x)\nStudy(x)\nCoding(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x Industry(x) → Coding(x)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Robin neither enjoys healthcare fields and wants to help people with medical issues nor grew up with parents who worked as doctors, then Robin is either a person who studies hard or grew up with parents who worked as doctors.\n\nSketch First Order Logic Statement: ¬(Healthcare(Robin) ∨ ParentDoctors(Robin)) → (Study(Robin) ∨ ParentDoctors(Robin)) \n\nPredicates:\n\"\"\"\nParentDoctors(x)\nIndustry(x)\nStudyingToBeDoctor(x)\nHealthcare(x)\nStudy(x)\nCoding(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(Healthcare(Robin) ∨ ParentDoctors(Robin)) → (Study(Robin) ∨ ParentDoctors(Robin)) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people want to work in the software engineering industry, then they practice coding questions.\n\nSketch First Order Logic Statement:  Industry(x) → Coding(x)\n\nPredicates:\n\"\"\"\nParentDoctors(x)\nIndustry(x)\nStudyingToBeDoctor(x)\nHealthcare(x)\nStudy(x)\nCoding(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x Industry(x) → Coding(x)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people value quality manufacturing and luxury items, then they enjoy shopping for materialistic items in their free time.\n\nSketch First Order Logic Statement: ∀x Luxury(x) → Shopping(x)\n\nPredicates:\n\"\"\"\nFrivolous(x)\nMiserly(x)\nLuxury(x)\nSpa(x)\nShopping(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x Luxury(x) → Shopping(x)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people frivolously spend a lot of money every time they go out, then they value quality manufacturing and luxury items.\n\nSketch First Order Logic Statement:  Frivolous(x) → Luxury(x)\n\nPredicates:\n\"\"\"\nFrivolous(x)\nMiserly(x)\nLuxury(x)\nSpa(x)\nShopping(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x Frivolous(x) → Luxury(x)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Jess is not miserly and needs to save a large portion of their income, then Jess does not value quality manufacturing and luxury items.\n\nSketch First Order Logic Statement: ¬MiserlyJess → ¬Luxury(Jess)\n\nPredicates:\n\"\"\"\nFrivolous(x)\nMiserly(x)\nLuxury(x)\nSpa(x)\nShopping(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬Miserly(Jess) → ¬Luxury(Jess)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The indie pop band Phoenix has released 6 albums. \n\nSketch First Order Logic Statement: AlbumsReleased(phoenix, l6)\n\nPredicates:\n\"\"\"\nBy(x, y)\nAlbum(x)\nSingle(x)\nSoldOver(x, y)\nAlbumsReleased(x, y)\nFrom(x, y)\nIsAlbumOf(x, y)\nCertifiedGold(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "AlbumsReleased(phoenix, l6)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Phoenix's album \"Wolfgang Amadeus Phoenix\" sold over 500,000 copies. \n\nSketch First Order Logic Statement: Album(wolfgangamadeusphoenix) ∧ IsAlbumOf(wolfgangamadeusphoenix, phoenix) ∧ SoldOver(wolfgangamadeusphoenix, l500000)\n\nPredicates:\n\"\"\"\nBy(x, y)\nAlbum(x)\nSingle(x)\nSoldOver(x, y)\nAlbumsReleased(x, y)\nFrom(x, y)\nIsAlbumOf(x, y)\nCertifiedGold(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Album(wolfgangamadeusphoenix) ∧ IsAlbumOf(wolfgangamadeusphoenix, phoenix) ∧ SoldOver(wolfgangamadeusphoenix, l500000)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Peter Parker wears a uniform when he is a superhero.\n\nSketch First Order Logic Statement: Superhero(peter) → WearUniformpeter\n\nPredicates:\n\"\"\"\nWake(x)\nSuperhero(x)\nDestroyer(x)\nGod(x)\nCivilian(x)\nBreakBridge(x)\nHappy(x)\nWearUniform(x)\nAngry(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Superhero(peter) → WearUniform(peter)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Thor will break a bridge when he is happy.\n\nSketch First Order Logic Statement: Happy(thor) → BreakBridge(thor)\n\nPredicates:\n\"\"\"\nWake(x)\nSuperhero(x)\nDestroyer(x)\nGod(x)\nCivilian(x)\nBreakBridge(x)\nHappy(x)\nWearUniform(x)\nAngry(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Happy(thor) → BreakBridge(thor)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Peter Parker wears a uniform when he is a superhero.\n\nSketch First Order Logic Statement: Superhero(peter) → WearUniform(peter)\n\nPredicates:\n\"\"\"\nWake(x)\nSuperhero(x)\nDestroyer(x)\nGod(x)\nCivilian(x)\nBreakBridge(x)\nHappy(x)\nWearUniform(x)\nAngry(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Superhero(peter) → WearUniform(peter)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Diethylcarbamazine can be used to treat river blindness.\n\nSketch First Order Logic Statement: ∀y ∀x (Diethylcarbamazine(x) ∧ RiverBlindness(y) → Treats(x, y))\n\nPredicates:\n\"\"\"\nTreats(x, y)\nIvermectin(x)\nMedication(x)\nDiethylcarbamazine(x)\nRiverBlindness(x)\nPreferredTreatment(x, y)\nDiscoveredIn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (Diethylcarbamazine(x) ∧ RiverBlindness(y) → Treats(x, y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The only preferred treatment for river blindness is ivermectin.\n\nSketch First Order Logic Statement:  ∀y (RiverBlindness(y) ∧ ∀x  PreferredTreatment(x, y) → Ivermectin(x))\n\nPredicates:\n\"\"\"\nTreats(x, y)\nIvermectin(x)\nMedication(x)\nDiethylcarbamazine(x)\nRiverBlindness(x)\nPreferredTreatment(x, y)\nDiscoveredIn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (RiverBlindness(y) ∧ PreferredTreatment(x, y) → Ivermectin(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Diethylcarbamazine can be used to treat river blindness.\n\nSketch First Order Logic Statement:  ∀y (Diethylcarbamazine(x) ∧ RiverBlindness(y) → Treats(x, y))\n\nPredicates:\n\"\"\"\nTreats(x, y)\nIvermectin(x)\nMedication(x)\nDiethylcarbamazine(x)\nRiverBlindness(x)\nPreferredTreatment(x, y)\nDiscoveredIn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (Diethylcarbamazine(x) ∧ RiverBlindness(y) → Treats(x, y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All implementing machine learning algorithms are to learn and classify multivariate data.\n\nSketch First Order Logic Statement:   (ImplementingMachineLearningAlgorithms(x) → ∀x  LearnAndClassifyMultivariateData(x)) \n\nPredicates:\n\"\"\"\nLearnAndClassifyMultivariateData(x)\nImplementingMachineLearningAlgorithms(x)\nMultivoxelPatternAnalysis(x)\nUsesGeneralizedLinearModel(x)\nUnivariateAnalysis(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (ImplementingMachineLearningAlgorithms(x) → LearnAndClassifyMultivariateData(x)) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All implementing machine learning algorithms are to learn and classify multivariate data.\n\nSketch First Order Logic Statement:  ∀x (ImplementingMachineLearningAlgorithms(x) → LearnAndClassifyMultivariateData(x)) \n\nPredicates:\n\"\"\"\nLearnAndClassifyMultivariateData(x)\nImplementingMachineLearningAlgorithms(x)\nMultivoxelPatternAnalysis(x)\nUsesGeneralizedLinearModel(x)\nUnivariateAnalysis(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (ImplementingMachineLearningAlgorithms(x) → LearnAndClassifyMultivariateData(x)) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Latent Dirichlet allocation model uses a generalized linear model or a univariate analysis. \n\nSketch First Order Logic Statement:  UsesGeneralizedLinearModel(latentDirichletAllocationModel) ∨ UnivariateAnalysis(latentDirichletAllocationModel)\n\nPredicates:\n\"\"\"\nLearnAndClassifyMultivariateData(x)\nImplementingMachineLearningAlgorithms(x)\nMultivoxelPatternAnalysis(x)\nUsesGeneralizedLinearModel(x)\nUnivariateAnalysis(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " UsesGeneralizedLinearModel(latentDirichletAllocationModel) ∨ UnivariateAnalysis(latentDirichletAllocationModel)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All Leukemia is blood cancer. \n\nSketch First Order Logic Statement:  (Leukemia(x) → ∀x  BloodCancer(x))\n\nPredicates:\n\"\"\"\nBloodCancer(x)\nLabTestsOrImagingRequired(x)\nLeukemia(x)\nRareDiseases(x)\nMild(x)\nRequiresAMedicalDiagnosis(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Leukemia(x) → BloodCancer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If something is mild, then no lab tests or imaging is required. \n\nSketch First Order Logic Statement: ∀x (Mild(x) → ¬LabTestsOrImagingRequired(x)) \n\nPredicates:\n\"\"\"\nBloodCancer(x)\nLabTestsOrImagingRequired(x)\nLeukemia(x)\nRareDiseases(x)\nMild(x)\nRequiresAMedicalDiagnosis(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Mild(x) → ¬LabTestsOrImagingRequired(x)) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All blood cancers are rare diseases.\n\nSketch First Order Logic Statement:  (BloodCancer(x) → RareDiseases(x))\n\nPredicates:\n\"\"\"\nBloodCancer(x)\nLabTestsOrImagingRequired(x)\nLeukemia(x)\nRareDiseases(x)\nMild(x)\nRequiresAMedicalDiagnosis(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (BloodCancer(x) → RareDiseases(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All rare earth metals are essential for electric vehicles.\n\nSketch First Order Logic Statement:  ∀x (RareEarthMetals(x) → EssentialForElectricVehicles(x))\n\nPredicates:\n\"\"\"\nEssentialForElectricVehicles(x)\nBeUsedForBatteries(x)\nrareEarthMetals(x)\nNotScarce(x)\nPreciousMetals(x)\nRareEarthMetals(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (RareEarthMetals(x) → EssentialForElectricVehicles(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No precious metals aren't scarce.\n\nSketch First Order Logic Statement: ∀x (PreciousMetals(x) → ¬NotScarce(x))\n\nPredicates:\n\"\"\"\nEssentialForElectricVehicles(x)\nBeUsedForBatteries(x)\nrareEarthMetals(x)\nNotScarce(x)\nPreciousMetals(x)\nRareEarthMetals(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (PreciousMetals(x) → ¬NotScarce(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All rare earth metals are essential for electric vehicles.\n\nSketch First Order Logic Statement:  ∀x (RareEarthMetals(x) → EssentialForElectricVehicles(x))\n\nPredicates:\n\"\"\"\nEssentialForElectricVehicles(x)\nBeUsedForBatteries(x)\nrareEarthMetals(x)\nNotScarce(x)\nPreciousMetals(x)\nRareEarthMetals(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (RareEarthMetals(x) → EssentialForElectricVehicles(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people hire a maid or cleaning service, then they have tidy houses.\n\nSketch First Order Logic Statement: ∀x (HireCleaning(x) → TidyHouse(x))\n\nPredicates:\n\"\"\"\nOwnPet(x)\nTidyHouse(x)\nSuburbs(x)\nHireCleaning(x)\nChildhoodPet(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (HireCleaning(x) → TidyHouse(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people own at least one pet, then they do not have tidy houses.\n\nSketch First Order Logic Statement: ∀x (OwnPet(x) → ¬TidyHouse(x))\n\nPredicates:\n\"\"\"\nOwnPet(x)\nTidyHouse(x)\nSuburbs(x)\nHireCleaning(x)\nChildhoodPet(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (OwnPet(x) → ¬TidyHouse(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people grew up with childhood pets, then they own at least one pet.\n\nSketch First Order Logic Statement:  (ChildhoodPet(x) → OwnPet(x))\n\nPredicates:\n\"\"\"\nOwnPet(x)\nTidyHouse(x)\nSuburbs(x)\nHireCleaning(x)\nChildhoodPet(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (ChildhoodPet(x) → OwnPet(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people own at least one pet, then they do not have tidy houses.\n\nSketch First Order Logic Statement: ∀x (OwnPet(x) → ¬TidyHouse(x))\n\nPredicates:\n\"\"\"\nOwnPet(x)\nTidyHouse(x)\nSuburbs(x)\nHireCleaning(x)\nChildhoodPet(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (OwnPet(x) → ¬TidyHouse(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people live in the suburbs, then they have tidy houses.\n\nSketch First Order Logic Statement:  (Suburbs(x) → ChildhoodPet(x))\n\nPredicates:\n\"\"\"\nOwnPet(x)\nTidyHouse(x)\nSuburbs(x)\nHireCleaning(x)\nChildhoodPet(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Suburbs(x) → ChildhoodPet(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The bottle is not upright.\n\nSketch First Order Logic Statement: ¬Upright(bottle)\n\nPredicates:\n\"\"\"\nToppledOver(x)\nUpright(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬Upright(bottle)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people have a lot of commitments they voluntarily signed up for, then they are hardworking individuals with high ambitions and goals for the future.\n\nSketch First Order Logic Statement:  (Committments(x) → ∀x  Hardworking(x))\n\nPredicates:\n\"\"\"\nBusyMorning(x)\nCommittments(x)\nHardworking(x)\nOrganized(x)\nCereal(x)\nYoungChildren(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Committments(x) → Hardworking(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All young children below the age of ten eat cereal and milk every day for breakfast.\n\nSketch First Order Logic Statement: ∀x (YoungChildren(x) → BusyMorning(x))\n\nPredicates:\n\"\"\"\nBusyMorning(x)\nCommittments(x)\nHardworking(x)\nOrganized(x)\nCereal(x)\nYoungChildren(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (YoungChildren(x) → BusyMorning(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: John either is both a hardworking individual with high ambitions and goals for the future and has busy morning schedules every day, or he is neither a hardworking individual with high ambitions and goals for the future nor does he have a busy morning schedule every day.\n\nSketch First Order Logic Statement: (H(ardworking(john) ∧ BusyMorning(john)) ⊕ (¬Hardworking(john)) ∧ ¬BusyMorning(john))\n\nPredicates:\n\"\"\"\nBusyMorning(x)\nCommittments(x)\nHardworking(x)\nOrganized(x)\nCereal(x)\nYoungChildren(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "(Hardworking(john) ∧ BusyMorning(john)) ⊕ (¬Hardworking(john) ∧ ¬BusyMorning(john))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Ableton makes music software.\n\nSketch First Order Logic Statement: MakesMusicSoftware(ableton)\n\nPredicates:\n\"\"\"\nOfficeIn(x, y)\nIsMultinationalCompany(x)\nSameCountry(x, y)\nMakesMusicSoftware(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "MakesMusicSoftware(ableton)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: USA and Germany are different countries.\n\nSketch First Order Logic Statement: ¬SameCountry(germany, usa)\n\nPredicates:\n\"\"\"\nOfficeIn(x, y)\nIsMultinationalCompany(x)\nSameCountry(x, y)\nMakesMusicSoftware(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬SameCountry(germany, usa)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Any company that has offices in different countries is a multinational company.\n\nSketch First Order Logic Statement: ∀z ∀y ∀x (OfficeIn(x, y) ∧ OfficeIn(x, z) ∧ ¬SameCountry(y, z) → IsMultinationalCompany(x))\n\nPredicates:\n\"\"\"\nOfficeIn(x, y)\nIsMultinationalCompany(x)\nSameCountry(x, y)\nMakesMusicSoftware(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y ∀z (OfficeIn(x, y) ∧ OfficeIn(x, z) ∧ ¬SameCountry(y, z) → IsMultinationalCompany(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All nonflying birds in Antarctica are penguins.\n\nSketch First Order Logic Statement:  (NonFlyingBirdAntartica(x) → ∀x  Penguin(x))\n\nPredicates:\n\"\"\"\nSwimmer(x)\nPenguin(x)\nNonFlyingBirdAntartica(x)\nGoesUnderwater(x)\nEatsFishCaughtThemselves(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (NonFlyingBirdAntartica(x) → Penguin(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Every penguin eats fish they catch themselves.\n\nSketch First Order Logic Statement:  (Penguin(x) → ∀x  EatsFishCaughtThemselves(x))\n\nPredicates:\n\"\"\"\nSwimmer(x)\nPenguin(x)\nNonFlyingBirdAntartica(x)\nGoesUnderwater(x)\nEatsFishCaughtThemselves(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Penguin(x) → EatsFishCaughtThemselves(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All nonflying birds in Antarctica are penguins.\n\nSketch First Order Logic Statement: ∀x (NonFlyingBirdAntart(ica(x) → Pengu)in(x))\n\nPredicates:\n\"\"\"\nSwimmer(x)\nPenguin(x)\nNonFlyingBirdAntartica(x)\nGoesUnderwater(x)\nEatsFishCaughtThemselves(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (NonFlyingBirdAntartica(x) → Penguin(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All researchers are professors.\n\nSketch First Order Logic Statement: ∀x (Researcher(x) → Professor((x)))\n\nPredicates:\n\"\"\"\nResearcher(x)\nStudent(x)\nStudy(x)\nTeacher(x)\nProfessor(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Researcher(x) → Professor(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No teachers are students.\n\nSketch First Order Logic Statement: ∀x (Teacher(x) → ¬Student(x))\n\nPredicates:\n\"\"\"\nResearcher(x)\nStudent(x)\nStudy(x)\nTeacher(x)\nProfessor(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Teacher(x) → ¬Student(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Leon is not studying or a researcher.\n\nSketch First Order Logic Statement: ¬Study(leon) ⊕ Researcher(leon)\n\nPredicates:\n\"\"\"\nResearcher(x)\nStudent(x)\nStudy(x)\nTeacher(x)\nProfessor(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬Study(leon) ⊕ Researcher(leon)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Cutmen typically handle swelling, nosebleeds and lacerations. \n\nSketch First Order Logic Statement: ∀x ((Cutman(x) → Handle(x, swelling) ∧ Handle(x), nosebleeds) ∧ Handle(x, lacerations))\n\nPredicates:\n\"\"\"\nCutman(x)\nTreat(x, y)\nHandle(x, y)\nPrevent(x, y)\nAppear(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Cutman(x) → Handle(x, swelling) ∧ Handle(x, nosebleeds) ∧ Handle(x, lacerations))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Cutmen typically handle swelling, nosebleeds and lacerations. \n\nSketch First Order Logic Statement:  (Cutman(x) → Handle(x, swelling) ∧ Handle(x, nosebleeds) ∧ Handle(x, lacerations))\n\nPredicates:\n\"\"\"\nCutman(x)\nTreat(x, y)\nHandle(x, y)\nPrevent(x, y)\nAppear(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Cutman(x) → Handle(x, swelling) ∧ Handle(x, nosebleeds) ∧ Handle(x, lacerations))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Cutmen appear in matches such as a boxing, kickboxing or a mixed martial arts bout. \n\nSketch First Order Logic Statement:  (Cutman(x) → Appear(x, boxing) ∨ Appear(x, kickboxing) ∨ Appear(x, mixedMartialBout))\n\nPredicates:\n\"\"\"\nCutman(x)\nTreat(x, y)\nHandle(x, y)\nPrevent(x, y)\nAppear(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Cutman(x) → Appear(x, boxing) ∨ Appear(x, kickboxing) ∨ Appear(x, mixedMartialBout))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Mona Lisa is a portrait painted by Leonardo da Vinci.\n\nSketch First Order Logic Statement: PaintedBymonaLisa, leonardodaVinci ∧ Portrait(monaLisa)\n\nPredicates:\n\"\"\"\nHistory(x)\nScientist(x)\nWorldsBestKnown(x)\nPortrait(x)\nStillLife(x)\nPaintedBy(x, y)\nLandscape(x)\nPainter(x)\nAnimal(x)\nPainting(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "PaintedBy(monaLisa, leonardodaVinci) ∧ Portrait(monaLisa)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Painting genres are history, portrait, animal, landscape, and still life.\n\nSketch First Order Logic Statement:  (Painting(x) → (History(x) ∨ ∀x  Portrait(x) ∨ Animal(x) ∨ Landscape(x) ∨ StillLife(x)))\n\nPredicates:\n\"\"\"\nHistory(x)\nScientist(x)\nWorldsBestKnown(x)\nPortrait(x)\nStillLife(x)\nPaintedBy(x, y)\nLandscape(x)\nPainter(x)\nAnimal(x)\nPainting(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Painting(x) → (History(x) ∨ Portrait(x) ∨ Animal(x) ∨ Landscape(x) ∨ StillLife(x)))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Mona Lisa is a portrait painted by Leonardo da Vinci.\n\nSketch First Order Logic Statement: PaintedBy(monaLisa, leonardodaVinci) ∧ PortraitmonaLisa\n\nPredicates:\n\"\"\"\nHistory(x)\nScientist(x)\nWorldsBestKnown(x)\nPortrait(x)\nStillLife(x)\nPaintedBy(x, y)\nLandscape(x)\nPainter(x)\nAnimal(x)\nPainting(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "PaintedBy(monaLisa, leonardodaVinci) ∧ Portrait(monaLisa)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Nadal is a World Tour player or a Grand Slam champion\n\nSketch First Order Logic Statement: WorldTourPlayer(nadal) ∨ GrandSlamChampion(nadal)\n\nPredicates:\n\"\"\"\nWorldTourPlayer(x)\nProfessionalTennisPlayer(x)\nGrandSlamUmpire(x)\nProfessionalTennisUmpire(x)\nGrandSlamChampion(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "WorldTourPlayer(nadal) ∨ GrandSlamChampion(nadal)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All Grand Slam champions are World Tour players.\n\nSketch First Order Logic Statement:  (GrandSlamChampion(x) → WorldTourPlayer(x))\n\nPredicates:\n\"\"\"\nWorldTourPlayer(x)\nProfessionalTennisPlayer(x)\nGrandSlamUmpire(x)\nProfessionalTennisUmpire(x)\nGrandSlamChampion(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (GrandSlamChampion(x) → WorldTourPlayer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Nadal is a World Tour player or a Grand Slam champion\n\nSketch First Order Logic Statement: WorldTourPlayer(nadal) ∨ GrandSlamChampion(nadal)\n\nPredicates:\n\"\"\"\nWorldTourPlayer(x)\nProfessionalTennisPlayer(x)\nGrandSlamUmpire(x)\nProfessionalTennisUmpire(x)\nGrandSlamChampion(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "WorldTourPlayer(nadal) ∨ GrandSlamChampion(nadal)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All Grand Slam champions are World Tour players.\n\nSketch First Order Logic Statement:  (GrandSlamChampion(x) → ∀x  WorldTourPlayer(x))\n\nPredicates:\n\"\"\"\nWorldTourPlayer(x)\nProfessionalTennisPlayer(x)\nGrandSlamUmpire(x)\nProfessionalTennisUmpire(x)\nGrandSlamChampion(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (GrandSlamChampion(x) → WorldTourPlayer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No professional tennis umpires are professional tennis players.\n\nSketch First Order Logic Statement: ∀x (ProfessionalTennisUmpire(x) → ¬ProfessionalTen(nisPlaye)r(x))\n\nPredicates:\n\"\"\"\nWorldTourPlayer(x)\nProfessionalTennisPlayer(x)\nGrandSlamUmpire(x)\nProfessionalTennisUmpire(x)\nGrandSlamChampion(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (ProfessionalTennisUmpire(x) → ¬ProfessionalTennisPlayer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All Grand Slam umpires are professional tennis umpires.\n\nSketch First Order Logic Statement:  (GrandSlamUmpire(x) → ∀x  ProfessionalTennisUmpire(x))\n\nPredicates:\n\"\"\"\nWorldTourPlayer(x)\nProfessionalTennisPlayer(x)\nGrandSlamUmpire(x)\nProfessionalTennisUmpire(x)\nGrandSlamChampion(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (GrandSlamUmpire(x) → ProfessionalTennisUmpire(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Sanctioned buisnesses are limited.\n\nSketch First Order Logic Statement:  (Buisness(x) ∧ Sanctioned(x) → Limited(x))\n\nPredicates:\n\"\"\"\nBuisness(x)\nSanctioned(x)\nLimited(x)\nFree(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Buisness(x) ∧ Sanctioned(x) → Limited(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Sanctioned buisnesses are limited.\n\nSketch First Order Logic Statement: ∀x (Buisness(x) ∧ Sanctioned(x) → Limitedx)\n\nPredicates:\n\"\"\"\nBuisness(x)\nSanctioned(x)\nLimited(x)\nFree(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Buisness(x) ∧ Sanctioned(x) → Limited(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Unsanctioned buisnesses are free.\n\nSketch First Order Logic Statement:  (Buisness(x) ∧ ∀x  ¬Sanctioned(x) → Free(x))\n\nPredicates:\n\"\"\"\nBuisness(x)\nSanctioned(x)\nLimited(x)\nFree(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Buisness(x) ∧ ¬Sanctioned(x) → Free(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: V is depressing. \n\nSketch First Order Logic Statement: ∀x (V(x) → Depressingx)\n\nPredicates:\n\"\"\"\nV(x)\nSad(x)\nDepressing(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (V(x) → Depressing(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A paalstab is not an axe, but rather a digging shovel.\n\nSketch First Order Logic Statement:  (Paalstab(x) → ¬Axe(x) ∧ ∀x  DiggingShovel(x))\n\nPredicates:\n\"\"\"\nPalstave(x)\nMould(x)\nFoundIn(x, y)\nPopularized(x, y)\nDiggingShovel(x)\nArcheologist(x)\nAxe(x)\nFrom(x, y)\nPaalstab(x)\nCastIn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Paalstab(x) → ¬Axe(x) ∧ DiggingShovel(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Palstaves are a type of early bronze axe.\n\nSketch First Order Logic Statement: ∀x (Palstave(x) → Fr(om(x, earlybronzeag)e) ∧ Axe(x))\n\nPredicates:\n\"\"\"\nPalstave(x)\nMould(x)\nFoundIn(x, y)\nPopularized(x, y)\nDiggingShovel(x)\nArcheologist(x)\nAxe(x)\nFrom(x, y)\nPaalstab(x)\nCastIn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Palstave(x) → From(x, earlybronzeage) ∧ Axe(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A paalstab is not an axe, but rather a digging shovel.\n\nSketch First Order Logic Statement: ∀x (Paalstab(x) → ¬Axe(x) ∧ DiggingShovel(x))\n\nPredicates:\n\"\"\"\nPalstave(x)\nMould(x)\nFoundIn(x, y)\nPopularized(x, y)\nDiggingShovel(x)\nArcheologist(x)\nAxe(x)\nFrom(x, y)\nPaalstab(x)\nCastIn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Paalstab(x) → ¬Axe(x) ∧ DiggingShovel(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Koei Tecmo is a Japanese video game and anime holding company.\n\nSketch First Order Logic Statement: Japanese(koeitecmo) ∧ VideoGameHoldingCompany(koeitecmo) ∧ AnimeHoldingCompany(koeitecmo)\n\nPredicates:\n\"\"\"\nDisbandedIn(x, y)\nDisbanded(x)\nCompany(x)\nJapanese(x)\nSurvived(x)\nVideoGameHoldingCompany(x)\nRenamed(x)\nAnimeHoldingCompany(x)\nHoldingCompany(x)\nHolds(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Japanese(koeitecmo) ∧ VideoGameHoldingCompany(koeitecmo) ∧ AnimeHoldingCompany(koeitecmo)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Tecmo was disbanded in Japan, while Koei survived, but was renamed.\n\nSketch First Order Logic Statement: Disbanded(tecmo) ∧ DisbandedIn(tecmo, japan) ∧ Survived(koei) ∧ Renamed(koei)\n\nPredicates:\n\"\"\"\nDisbandedIn(x, y)\nDisbanded(x)\nCompany(x)\nJapanese(x)\nSurvived(x)\nVideoGameHoldingCompany(x)\nRenamed(x)\nAnimeHoldingCompany(x)\nHoldingCompany(x)\nHolds(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Disbanded(tecmo) ∧ DisbandedIn(tecmo, japan) ∧ Survived(koei) ∧ Renamed(koei)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Tecmo was disbanded in Japan, while Koei survived, but was renamed.\n\nSketch First Order Logic Statement: Disbanded(tecmo) ∧ DisbandedIn(tec(mo, japan) ∧ Surv)ived(koei) ∧ Renamed(koei)\n\nPredicates:\n\"\"\"\nDisbandedIn(x, y)\nDisbanded(x)\nCompany(x)\nJapanese(x)\nSurvived(x)\nVideoGameHoldingCompany(x)\nRenamed(x)\nAnimeHoldingCompany(x)\nHoldingCompany(x)\nHolds(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Disbanded(tecmo) ∧ DisbandedIn(tecmo, japan) ∧ Survived(koei) ∧ Renamed(koei)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Camera accessory for the system is compatible with that system\n\nSketch First Order Logic Statement: ∀x ∀y (Accessory(x, y) → Compatible(x, y))\n\nPredicates:\n\"\"\"\nCompatible(x, y)\nAccessory(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (Accessory(x, y) → Compatible(x, y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Only the Playstation Camera is compatible with more than one system.\n\nSketch First Order Logic Statement: ¬Compatible(pseye, ps2) ∧ ¬Compatible(pseye, ps4)∧¬Compatible(pseye, ps5)∧¬Compatible(pseyetoy, ps3)∧¬Compatible(pseyetoy, ps4)∧¬Compatible(pseyetoy, ps5)\n\nPredicates:\n\"\"\"\nCompatible(x, y)\nAccessory(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬Compatible(pseye, ps2) ∧ ¬Compatible(pseye, ps4)∧¬Compatible(pseye, ps5)∧¬Compatible(pseyetoy, ps3)∧¬Compatible(pseyetoy, ps4)∧¬Compatible(pseyetoy, ps5)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The PlayStation EyeToy is a camera accessory for the Playstation 2. \n\nSketch First Order Logic Statement: Accessory(pseyetoy, ps2)\n\nPredicates:\n\"\"\"\nCompatible(x, y)\nAccessory(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Accessory(pseyetoy, ps2)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a European plays football, they play what Americans call soccer.\n\nSketch First Order Logic Statement:  ((FootballPlayer(x) ∧ ∀x  European(x)) → PlaysAmericanSoccer(x))\n\nPredicates:\n\"\"\"\nEuropean(x)\nPlaysAmericanSoccer(x)\nFootballPlayer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ((FootballPlayer(x) ∧ European(x)) → PlaysAmericanSoccer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All Games developed by Paradox Development Studio sold more than 1 million copies. \n\nSketch First Order Logic Statement:  (DevelopedByParadox(x) → SoldMillion(x))\n\nPredicates:\n\"\"\"\nSoldMillion(x)\nPublishedBefore2010(x)\nPopular(x)\nBestSeller(x)\nDevelopedByParadox(x)\nSupportLinuxSystem(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (DevelopedByParadox(x) → SoldMillion(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All Games developed by Paradox Development Studio sold more than 1 million copies. \n\nSketch First Order Logic Statement:  (DevelopedByParadox(x) → ∀x  SoldMillion(x))\n\nPredicates:\n\"\"\"\nSoldMillion(x)\nPublishedBefore2010(x)\nPopular(x)\nBestSeller(x)\nDevelopedByParadox(x)\nSupportLinuxSystem(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (DevelopedByParadox(x) → SoldMillion(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: FIFA22 neither supports the Linux OS system nor is it popular among young people.\n\nSketch First Order Logic Statement: ¬(SupportLinuxSystem(fifa21) ∨ Popular(fifa21))\n\nPredicates:\n\"\"\"\nSoldMillion(x)\nPublishedBefore2010(x)\nPopular(x)\nBestSeller(x)\nDevelopedByParadox(x)\nSupportLinuxSystem(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(SupportLinuxSystem(fifa21) ∨ Popular(fifa21))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All people from China speak Chinese.\n\nSketch First Order Logic Statement: ∀y ∀x (From(x, y) ∧ China(y) → Speak(x, chinese))\n\nPredicates:\n\"\"\"\nIndia(x)\nSpeak(x, y)\nChina(x)\nFrom(x, y)\nBRICS(x)\nEmergingEconomy(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (From(x, y) ∧ China(y) → Speak(x, chinese))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: There is an Indian.\n\nSketch First Order Logic Statement: ∃x ∃y (From(x, y) ∧ India(y))\n\nPredicates:\n\"\"\"\nIndia(x)\nSpeak(x, y)\nChina(x)\nFrom(x, y)\nBRICS(x)\nEmergingEconomy(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x ∃y (From(x, y) ∧ India(y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: India is one of BRICS and its economy is emerging.\n\nSketch First Order Logic Statement: ∀x (India(x) → BRICS(x) ∧ EmergingEconomy(x))\n\nPredicates:\n\"\"\"\nIndia(x)\nSpeak(x, y)\nChina(x)\nFrom(x, y)\nBRICS(x)\nEmergingEconomy(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (India(x) → BRICS(x) ∧ EmergingEconomy(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Daveed Diggs played Thomas Jefferson.\n\nSketch First Order Logic Statement: P(layed(daveedDiggs, thomasJefferso)n)\n\nPredicates:\n\"\"\"\nFilm(x)\nPlayed(x, y)\nPlayedIn(x, y)\nPlayedTwoRoles(x)\nWonBestActorAward(x)\nMusical(x)\nActor(x)\nFilmProducer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Played(daveedDiggs, thomasJefferson)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Daveed Diggs played Thomas Jefferson.\n\nSketch First Order Logic Statement: PlayeddaveedDiggs, thomasJefferson\n\nPredicates:\n\"\"\"\nFilm(x)\nPlayed(x, y)\nPlayedIn(x, y)\nPlayedTwoRoles(x)\nWonBestActorAward(x)\nMusical(x)\nActor(x)\nFilmProducer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Played(daveedDiggs, thomasJefferson)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Musicals are not films.\n\nSketch First Order Logic Statement: ∀x (Musical(x) → ¬Film(x))\n\nPredicates:\n\"\"\"\nFilm(x)\nPlayed(x, y)\nPlayedIn(x, y)\nPlayedTwoRoles(x)\nWonBestActorAward(x)\nMusical(x)\nActor(x)\nFilmProducer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Musical(x) → ¬Film(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A football player in the Polish First Division has scored over 180 goals. \n\nSketch First Order Logic Statement: ∃x (In(x, polishfirstdivision) ∧ ScoredMoreThan180Goals(x))\n\nPredicates:\n\"\"\"\nFootballPlayer(x)\nNamedAfter(x, y)\nIn(x, y)\nPolishFootballPlayer(x)\nFrom(x, y)\nScoredMoreThan180Goals(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (In(x, polishfirstdivision) ∧ ScoredMoreThan180Goals(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A football player in the Polish First Division has scored over 180 goals. \n\nSketch First Order Logic Statement: ∃x (In(x, polishfirstd(ivision) ∧ ScoredMoreThan180)Goals(x))\n\nPredicates:\n\"\"\"\nFootballPlayer(x)\nNamedAfter(x, y)\nIn(x, y)\nPolishFootballPlayer(x)\nFrom(x, y)\nScoredMoreThan180Goals(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (In(x, polishfirstdivision) ∧ ScoredMoreThan180Goals(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Ann J. Land was a member of the Philadelphia City Council and was also a member of the Democratic Party.\n\nSketch First Order Logic Statement: PhiladephiaCouncil(annJLand) ∧ DemocraticParty(annJLand)\n\nPredicates:\n\"\"\"\nChallenger(x)\nDefeated(x, y)\nElected(x)\nYear(x)\nDemocraticParty(x)\nPhiladephiaCouncil(x)\nRunFor(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "PhiladephiaCouncil(annJLand) ∧ DemocraticParty(annJLand)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Ann J. Land defeated Michael Nutter and ran for the Philadelphia City Council in 1987.\n\nSketch First Order Logic Statement: Year(y1987) → PhiladephiaCouncil(annJLan(d) ∧ RunFor(annJLand) ∧ Defeated()annJLand, nutter)\n\nPredicates:\n\"\"\"\nChallenger(x)\nDefeated(x, y)\nElected(x)\nYear(x)\nDemocraticParty(x)\nPhiladephiaCouncil(x)\nRunFor(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Year(y1987) → PhiladephiaCouncil(annJLand) ∧ RunFor(annJLand) ∧ Defeated(annJLand, nutter)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Ann J. Land ran unopposed for the Philadephia City Council in 1980.\n\nSketch First Order Logic Statement: Year(y1980) → PhiladephiaCouncil(annJLand) ∧ RunFor(annJLand)\n\nPredicates:\n\"\"\"\nChallenger(x)\nDefeated(x, y)\nElected(x)\nYear(x)\nDemocraticParty(x)\nPhiladephiaCouncil(x)\nRunFor(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Year(y1980) → PhiladephiaCouncil(annJLand) ∧ RunFor(annJLand)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Aberdeen won the cup in the 2013 final.\n\nSketch First Order Logic Statement: WonCup(aberdeen, twentythirteen)\n\nPredicates:\n\"\"\"\nDifferent(x, y)\nWonCup(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "WonCup(aberdeen, twentythirteen)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Aberdeen and Rangers are different teams.\n\nSketch First Order Logic Statement: Different(aberdeen, rangers) ∧ Different(rangers, aberdeen)\n\nPredicates:\n\"\"\"\nDifferent(x, y)\nWonCup(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Different(aberdeen, rangers) ∧ Different(rangers, aberdeen)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Different teams cannot win the same cup in a given year's final.\n\nSketch First Order Logic Statement: ∀x ∀y ∀z (Different(x, y)  ∧ WonCupx, z)  → ¬WonCup(y, z)\n\nPredicates:\n\"\"\"\nDifferent(x, y)\nWonCup(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y ∀z (Different(x, y)  ∧ WonCup(x, z)  → ¬WonCup(y, z))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some people who live in Manhattan are young working professionals who have regular 9-5 jobs.\n\nSketch First Order Logic Statement:  (Manhattan(x) ∧ ∃x  Working(x))\n\nPredicates:\n\"\"\"\nCar(x)\nWorking(x)\nManhattan(x)\nChild(x)\nPets(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Manhattan(x) ∧ Working(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All young working professionals who have regular 9-5 jobs also have pets.\n\nSketch First Order Logic Statement:  (Working(x) → Pets(x))\n\nPredicates:\n\"\"\"\nCar(x)\nWorking(x)\nManhattan(x)\nChild(x)\nPets(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Working(x) → Pets(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People who do not have at least one child are people who own a sports car.\n\nSketch First Order Logic Statement:  (Child(x) → ∀x  ¬Car(x))\n\nPredicates:\n\"\"\"\nCar(x)\nWorking(x)\nManhattan(x)\nChild(x)\nPets(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Child(x) → ¬Car(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All event-related designs are brain image acquisition.\n\nSketch First Order Logic Statement:  (Event-relatedDesign(x) → BrainImageAcquisition(x))\n\nPredicates:\n\"\"\"\nAcquiringData(x)\nrelatedDesign(x)\nPrecededByDataProcessing(x)\nBrainImageAcquisition(x)\nBlockDesign(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Event-relatedDesign(x) → BrainImageAcquisition(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All brain image acquisition is preceded by data processing.\n\nSketch First Order Logic Statement: ∀x (BrainImageAcquisition(x) → PrecededByDataProcessing(x))\n\nPredicates:\n\"\"\"\nAcquiringData(x)\nrelatedDesign(x)\nPrecededByDataProcessing(x)\nBrainImageAcquisition(x)\nBlockDesign(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (BrainImageAcquisition(x) → PrecededByDataProcessing(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Nothing preceded by data processing acquires data.\n\nSketch First Order Logic Statement: ∀x (PrecededByDataProcessing(x) → ¬AcquiringData(x))\n\nPredicates:\n\"\"\"\nAcquiringData(x)\nrelatedDesign(x)\nPrecededByDataProcessing(x)\nBrainImageAcquisition(x)\nBlockDesign(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (PrecededByDataProcessing(x) → ¬AcquiringData(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All brain image acquisition is preceded by data processing.\n\nSketch First Order Logic Statement:  (BrainImageAcquisition(x) → ∀x  PrecededByDataProcessing(x))\n\nPredicates:\n\"\"\"\nAcquiringData(x)\nrelatedDesign(x)\nPrecededByDataProcessing(x)\nBrainImageAcquisition(x)\nBlockDesign(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (BrainImageAcquisition(x) → PrecededByDataProcessing(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All ships involved in WWII are currently decommissioned or in a museum.\n\nSketch First Order Logic Statement:  (InWWII(x) → (Decommissioned(x) ∨ ∀x  InMuseum(x)))\n\nPredicates:\n\"\"\"\nUSNavyShip(x)\nDecommissioned(x)\nInMuseum(x)\nInWWII(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (InWWII(x) → (Decommissioned(x) ∨ InMuseum(x)))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If chopsticks are made from metals, then they are not made from plastics. \n\nSketch First Order Logic Statement:  (MadeFromMetals(x) → ∀x  ¬MadeFromPlastics(x))\n\nPredicates:\n\"\"\"\nMadeFromMetals(x)\nEcoFriendly(x)\nReusable(x)\nMadeFromTrees(x)\nDisposableChopsticks(x)\nMadeFromPlastics(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (MadeFromMetals(x) → ¬MadeFromPlastics(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Either disposable chopsticks or reusable chopsticks. \n\nSketch First Order Logic Statement: ∀x (DisposableChopsticks(x) ⊕ Reusable(x)) \n\nPredicates:\n\"\"\"\nMadeFromMetals(x)\nEcoFriendly(x)\nReusable(x)\nMadeFromTrees(x)\nDisposableChopsticks(x)\nMadeFromPlastics(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (DisposableChopsticks(x) ⊕ Reusable(x)) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If chopsticks are made from metals, then they are not made from plastics. \n\nSketch First Order Logic Statement: ∀x (MadeFromMetals(x) → ¬MadeFromPlastics(x))\n\nPredicates:\n\"\"\"\nMadeFromMetals(x)\nEcoFriendly(x)\nReusable(x)\nMadeFromTrees(x)\nDisposableChopsticks(x)\nMadeFromPlastics(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (MadeFromMetals(x) → ¬MadeFromPlastics(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If something is a sloth, then it is lazy.\n\nSketch First Order Logic Statement:  (Sloth(x) → Lazy(x))\n\nPredicates:\n\"\"\"\nSloth(x)\nAnimal(x)\nEnergetic(x)\nLazy(x)\nUnproductive(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Sloth(x) → Lazy(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Sid is not either an energetic person or a sloth.\n\nSketch First Order Logic Statement: ¬Energetic(sid) ∨ Sloth(sid)\n\nPredicates:\n\"\"\"\nSloth(x)\nAnimal(x)\nEnergetic(x)\nLazy(x)\nUnproductive(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬Energetic(sid) ∨ Sloth(sid)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Anything that is lazy is unproductive.\n\nSketch First Order Logic Statement: ∀x (Lazy(x) → Unproductive(x))\n\nPredicates:\n\"\"\"\nSloth(x)\nAnimal(x)\nEnergetic(x)\nLazy(x)\nUnproductive(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Lazy(x) → Unproductive(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A soccer club eligible to attend UEL has a higher ranking than a soccer club eligible to attend UECL.\n\nSketch First Order Logic Statement:  ∀y (SoccerClub(x) ∧ SoccerClub(y) ∧ Attend(x, uel) ∧ Attend(y, uecl) → HigherRank(x, y))\n\nPredicates:\n\"\"\"\nEuropean(x)\nHigherRank(x, y)\nSoccerClub(x)\nAttend(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (SoccerClub(x) ∧ SoccerClub(y) ∧ Attend(x, uel) ∧ Attend(y, uecl) → HigherRank(x, y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Cris Carter had 13 touchdown receptions.\n\nSketch First Order Logic Statement: TouchDownReceptionTime(cris_Carter, t13)\n\nPredicates:\n\"\"\"\nNFLTeamYear(x, y)\nPlayFor(x, y)\nCoach(x, y)\nPosition(x, y)\nIsFootballCoach(x)\nPlayInNFL(x)\nTouchDownReceptionTime(x, y)\nIsFootballClub(x)\nInTeam(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "TouchDownReceptionTime(cris_Carter, t13)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Minnesota Vikings was in the National Football League in 1997.\n\nSketch First Order Logic Statement: NFLTeamYear(minnesota_Vikings, y1997)\n\nPredicates:\n\"\"\"\nNFLTeamYear(x, y)\nPlayFor(x, y)\nCoach(x, y)\nPosition(x, y)\nIsFootballCoach(x)\nPlayInNFL(x)\nTouchDownReceptionTime(x, y)\nIsFootballClub(x)\nInTeam(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "NFLTeamYear(minnesota_Vikings, y1997)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Minnesota Vikings is a football club.\n\nSketch First Order Logic Statement: IsFootballClub(minnesota_Vikings)\n\nPredicates:\n\"\"\"\nNFLTeamYear(x, y)\nPlayFor(x, y)\nCoach(x, y)\nPosition(x, y)\nIsFootballCoach(x)\nPlayInNFL(x)\nTouchDownReceptionTime(x, y)\nIsFootballClub(x)\nInTeam(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "IsFootballClub(minnesota_Vikings)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Nothing that barks is lovely. \n\nSketch First Order Logic Statement: ∀x (Bark(x) → ¬Lovely(x))\n\nPredicates:\n\"\"\"\nDog(x)\nGhost(x)\nCat(x)\nCute(x)\nLovely(x)\nBark(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Bark(x) → ¬Lovely(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Ghosts do not exist.\n\nSketch First Order Logic Statement: ∀x (¬Ghostx)\n\nPredicates:\n\"\"\"\nDog(x)\nGhost(x)\nCat(x)\nCute(x)\nLovely(x)\nBark(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (¬Ghost(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If something is a dog, then it barks.\n\nSketch First Order Logic Statement: ∀x (Dog(x) → Bark(x))\n\nPredicates:\n\"\"\"\nDog(x)\nGhost(x)\nCat(x)\nCute(x)\nLovely(x)\nBark(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Dog(x) → Bark(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If place A is northwest of place B, then place B is southeast of place A.\n\nSketch First Order Logic Statement: ∀x  (NorthwestOf(x, y) → SoutheastOf(y, x))\n\nPredicates:\n\"\"\"\nLargeComplex(x)\nIn(x, y)\nNorthwestOf(x, y)\nSoutheastOf(x, y)\nGeologicalStructures(x)\nOffshore(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (NorthwestOf(x, y) → SoutheastOf(y, x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If place A is northwest of place B, then place B is southeast of place A.\n\nSketch First Order Logic Statement: ∀y ∀x (NorthwestOf(x, y) → SoutheastOf(y, x))\n\nPredicates:\n\"\"\"\nLargeComplex(x)\nIn(x, y)\nNorthwestOf(x, y)\nSoutheastOf(x, y)\nGeologicalStructures(x)\nOffshore(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (NorthwestOf(x, y) → SoutheastOf(y, x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Baku is northwest of Shafaq-Asiman.\n\nSketch First Order Logic Statement: NorthwestOf(baku, shafaq-asiman)\n\nPredicates:\n\"\"\"\nLargeComplex(x)\nIn(x, y)\nNorthwestOf(x, y)\nSoutheastOf(x, y)\nGeologicalStructures(x)\nOffshore(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "NorthwestOf(baku, shafaq-asiman)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Herodicus was a Greek physician, dietician, sophist, and gymnastic-master.\n\nSketch First Order Logic Statement: Greek(herodicus) ∧ Physician(herodicus) ∧ Dietician(herodicus) ∧ Sophist(herodicus) ∧ GymnasticMaster(herodicus)\n\nPredicates:\n\"\"\"\nGymnasticMaster(x)\nCity(x)\nFoundationOf(x, y)\nSophist(x)\nDietician(x)\nColony(x, y)\nPhysician(x)\nBorn(x, y)\nCityState(x)\nRecommended(x, y)\nTheory(x)\nGreek(x)\nFrom(x, y)\nTutored(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Greek(herodicus) ∧ Physician(herodicus) ∧ Dietician(herodicus) ∧ Sophist(herodicus) ∧ GymnasticMaster(herodicus)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Selymbria is a colony of the city-state Megara.\n\nSketch First Order Logic Statement: Colony(selymbia, megara) ∧( CityState(mega)ra)\n\nPredicates:\n\"\"\"\nGymnasticMaster(x)\nCity(x)\nFoundationOf(x, y)\nSophist(x)\nDietician(x)\nColony(x, y)\nPhysician(x)\nBorn(x, y)\nCityState(x)\nRecommended(x, y)\nTheory(x)\nGreek(x)\nFrom(x, y)\nTutored(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Colony(selymbia, megara) ∧ CityState(megara)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Herodicus was born in the city of Selymbria.\n\nSketch First Order Logic Statement: Born(herodicus, selymbia) ∧ City(selymbia)\n\nPredicates:\n\"\"\"\nGymnasticMaster(x)\nCity(x)\nFoundationOf(x, y)\nSophist(x)\nDietician(x)\nColony(x, y)\nPhysician(x)\nBorn(x, y)\nCityState(x)\nRecommended(x, y)\nTheory(x)\nGreek(x)\nFrom(x, y)\nTutored(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Born(herodicus, selymbia) ∧ City(selymbia)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Herodicus was born in the city of Selymbria.\n\nSketch First Order Logic Statement: Born(herodicus, selymbia) ∧ City(selymbia)\n\nPredicates:\n\"\"\"\nGymnasticMaster(x)\nCity(x)\nFoundationOf(x, y)\nSophist(x)\nDietician(x)\nColony(x, y)\nPhysician(x)\nBorn(x, y)\nCityState(x)\nRecommended(x, y)\nTheory(x)\nGreek(x)\nFrom(x, y)\nTutored(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Born(herodicus, selymbia) ∧ City(selymbia)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Selymbria is a colony of the city-state Megara.\n\nSketch First Order Logic Statement: Colony(selymbia, meg(ara) ∧ CityState()megara)\n\nPredicates:\n\"\"\"\nGymnasticMaster(x)\nCity(x)\nFoundationOf(x, y)\nSophist(x)\nDietician(x)\nColony(x, y)\nPhysician(x)\nBorn(x, y)\nCityState(x)\nRecommended(x, y)\nTheory(x)\nGreek(x)\nFrom(x, y)\nTutored(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Colony(selymbia, megara) ∧ CityState(megara)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No kid loves the Opera.\n\nSketch First Order Logic Statement: ∀x (Kid(x) → ¬OperaLove(r(x)))\n\nPredicates:\n\"\"\"\nKid(x)\nScientist(x)\nOperaLover(x)\nAdult(x)\nStudent(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Kid(x) → ¬OperaLover(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some students are kids.\n\nSketch First Order Logic Statement: ∃x (Student(x) ∧ Kid(x))\n\nPredicates:\n\"\"\"\nKid(x)\nScientist(x)\nOperaLover(x)\nAdult(x)\nStudent(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Student(x) ∧ Kid(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If someone is a scientist, then they are an adult.\n\nSketch First Order Logic Statement: ∀x (Scientist(x) → Ad(ult()x))\n\nPredicates:\n\"\"\"\nKid(x)\nScientist(x)\nOperaLover(x)\nAdult(x)\nStudent(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Scientist(x) → Adult(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some football referees become referee observers.\n\nSketch First Order Logic Statement: ∃x (FootballReferee(x) ∧ RefereeObserver(x))\n\nPredicates:\n\"\"\"\nRetired(x)\nRefereeObserver(x)\nInjured(x)\nFootballPlayer(x)\nSon(x, y)\nFootballReferee(x)\nScottish(x)\nPlaysFor(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (FootballReferee(x) ∧ RefereeObserver(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: After being injured, Brian Winter retired in 2012.\n\nSketch First Order Logic Statement: Injured(brianwinter) ∧ Retired(brianwinter)\n\nPredicates:\n\"\"\"\nRetired(x)\nRefereeObserver(x)\nInjured(x)\nFootballPlayer(x)\nSon(x, y)\nFootballReferee(x)\nScottish(x)\nPlaysFor(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Injured(brianwinter) ∧ Retired(brianwinter)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Brian Winter was appointed as a referee observer after his retirement.\n\nSketch First Order Logic Statement: RefereeObserver(brianwinter)\n\nPredicates:\n\"\"\"\nRetired(x)\nRefereeObserver(x)\nInjured(x)\nFootballPlayer(x)\nSon(x, y)\nFootballReferee(x)\nScottish(x)\nPlaysFor(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "RefereeObserver(brianwinter)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The son of Brian Winter, Andy Winter, is a football player who plays for Hamilton Academical.\n\nSketch First Order Logic Statement: Son(andywinter, brianwinter) ∧ FootballPlayer(andywinter) ∧ PlaysFor(andywinter, hamiltonacademical)\n\nPredicates:\n\"\"\"\nRetired(x)\nRefereeObserver(x)\nInjured(x)\nFootballPlayer(x)\nSon(x, y)\nFootballReferee(x)\nScottish(x)\nPlaysFor(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Son(andywinter, brianwinter) ∧ FootballPlayer(andywinter) ∧ PlaysFor(andywinter, hamiltonacademical)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People are either interested in puzzles or bad at chess.\n\nSketch First Order Logic Statement: ∀x (Puzzles(x) ∨ BadChess(x))\n\nPredicates:\n\"\"\"\nPlaysLots(x)\nPlans(x)\nPuzzles(x)\nBadChess(x)\nCreative(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Puzzles(x) ∨ BadChess(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\n\nSketch First Order Logic Statement: ¬(BadChess(erica) ∨ Crea(tive(erica)) → (Plans(erica) ⊕ Creati)ve(erica))\n\nPredicates:\n\"\"\"\nPlaysLots(x)\nPlans(x)\nPuzzles(x)\nBadChess(x)\nCreative(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(BadChess(erica) ∨ Creative(erica)) → (Plans(erica) ⊕ Creative(erica))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A person is either a planner or a creative person.\n\nSketch First Order Logic Statement: ∀x (Plansx) ∨ Creative(x)\n\nPredicates:\n\"\"\"\nPlaysLots(x)\nPlans(x)\nPuzzles(x)\nBadChess(x)\nCreative(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Plans(x) ∨ Creative(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People are either interested in puzzles or bad at chess.\n\nSketch First Order Logic Statement: ∀x (Puzzles(x) ∨ BadChess(x))\n\nPredicates:\n\"\"\"\nPlaysLots(x)\nPlans(x)\nPuzzles(x)\nBadChess(x)\nCreative(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Puzzles(x) ∨ BadChess(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People are either interested in puzzles or bad at chess.\n\nSketch First Order Logic Statement:  (Puzzles(x) ∨ BadChess(x))\n\nPredicates:\n\"\"\"\nPlaysLots(x)\nPlans(x)\nPuzzles(x)\nBadChess(x)\nCreative(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Puzzles(x) ∨ BadChess(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\n\nSketch First Order Logic Statement: ¬(BadChess(erica) ∨ Creative(erica)) → Plans(erica ⊕ Creative(erica))\n\nPredicates:\n\"\"\"\nPlaysLots(x)\nPlans(x)\nPuzzles(x)\nBadChess(x)\nCreative(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(BadChess(erica) ∨ Creative(erica)) → (Plans(erica) ⊕ Creative(erica))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a person is bad at chess, then they don't play a lot of chess.\n\nSketch First Order Logic Statement: ∀x (BadChess(x) → ¬PlaysLots(x))\n\nPredicates:\n\"\"\"\nPlaysLots(x)\nPlans(x)\nPuzzles(x)\nBadChess(x)\nCreative(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (BadChess(x) → ¬PlaysLots(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a person is bad at chess, then they don't play a lot of chess.\n\nSketch First Order Logic Statement: ∀x (BadChess(x) → ¬PlaysLots(x))\n\nPredicates:\n\"\"\"\nPlaysLots(x)\nPlans(x)\nPuzzles(x)\nBadChess(x)\nCreative(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (BadChess(x) → ¬PlaysLots(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a person is bad at chess, then they don't play a lot of chess.\n\nSketch First Order Logic Statement: ∀x (BadChess(x) → ¬PlaysLots(x))\n\nPredicates:\n\"\"\"\nPlaysLots(x)\nPlans(x)\nPuzzles(x)\nBadChess(x)\nCreative(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (BadChess(x) → ¬PlaysLots(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Erica is neither bad at chess nor creative, then Erica is either someone who plans and is creative, or someone who neither plans nor is creative.\n\nSketch First Order Logic Statement: ¬(BadChess(erica) ∨ Creative(erica)) → (Plans(erica) ⊕ Creative(erica))\n\nPredicates:\n\"\"\"\nPlaysLots(x)\nPlans(x)\nPuzzles(x)\nBadChess(x)\nCreative(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(BadChess(erica) ∨ Creative(erica)) → (Plans(erica) ⊕ Creative(erica))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Soccer players have a right foot and a left foot.\n\nSketch First Order Logic Statement:  (SoccerPlayer(x) → HasLeftFoot(x) ∧ HasRightFoot(x))\n\nPredicates:\n\"\"\"\nEfficient(x, y)\nSoccerPlayer(x)\nHasRightFoot(x)\nScoreManyGoals(x, y)\nTop(x)\nHasLeftFoot(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (SoccerPlayer(x) → HasLeftFoot(x) ∧ HasRightFoot(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Cristiano Ronaldo is a soccer player.\n\nSketch First Order Logic Statement: SoccerPlayer(ronaldo)\n\nPredicates:\n\"\"\"\nEfficient(x, y)\nSoccerPlayer(x)\nHasRightFoot(x)\nScoreManyGoals(x, y)\nTop(x)\nHasLeftFoot(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "SoccerPlayer(ronaldo)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The National Lobster Hatchery is a hatchery located in Padstow England.\n\nSketch First Order Logic Statement: Hatchery(nationallobsterhatchery) ∧ LocatedIn(nationallobsterhatchery, padstowengland)\n\nPredicates:\n\"\"\"\nHatchery(x)\nOpenToVisitors(x)\nLocatedIn(x, y)\nReleasesAnimalsToWild(x)\nForProfit(x)\nForConservation(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Hatchery(nationallobsterhatchery) ∧ LocatedIn(nationallobsterhatchery, padstowengland)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The National Lobster Hatchery is open to visitors.\n\nSketch First Order Logic Statement: OpenToVisitorsnationallobsterhatchery\n\nPredicates:\n\"\"\"\nHatchery(x)\nOpenToVisitors(x)\nLocatedIn(x, y)\nReleasesAnimalsToWild(x)\nForProfit(x)\nForConservation(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "OpenToVisitors(nationallobsterhatchery)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a hatchery is for conservation, it might release animals into the wild.\n\nSketch First Order Logic Statement: ∃x (Hatchery(x) ∧ ForConservation(x) ∧ ReleasesAnimalsToWild(x))\n\nPredicates:\n\"\"\"\nHatchery(x)\nOpenToVisitors(x)\nLocatedIn(x, y)\nReleasesAnimalsToWild(x)\nForProfit(x)\nForConservation(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Hatchery(x) ∧ ForConservation(x) ∧ ReleasesAnimalsToWild(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Premier Division in 2009–10 was won by the same team that won in 2005-06. \n\nSketch First Order Logic Statement:  (WonPremierDivisionDuring(x, y2009) ↔ WonPremierDivisionDuring(x, y2005))\n\nPredicates:\n\"\"\"\nWelsh(x)\nBasedInPonciau(x)\nWonPremierDivisionDuring(x, y)\nFootballClub(x)\nPromoted(x)\nRhosaelwydfc(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (WonPremierDivisionDuring(x, y2009) ↔ WonPremierDivisionDuring(x, y2005))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Premier Division was won in 2005–06 by a team from Ponciau. \n\nSketch First Order Logic Statement: ∃x (BasedInPonciau(x) ∧ WonPremierDivisionDur(ing(x,) y2005))\n\nPredicates:\n\"\"\"\nWelsh(x)\nBasedInPonciau(x)\nWonPremierDivisionDuring(x, y)\nFootballClub(x)\nPromoted(x)\nRhosaelwydfc(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (BasedInPonciau(x) ∧ WonPremierDivisionDuring(x, y2005))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: PyTorch is either Windows and software, or neither Windows nor software.\n\nSketch First Order Logic Statement: (Windows(pytorch) ∧ Software(pytorch)) ⊕ (¬Windows(pytorch) ∧ ¬Software(pytorch))\n\nPredicates:\n\"\"\"\nConvenient(x)\nOS(x)\nWindows(x)\nMac(x)\nPopular(x)\nSoftware(x)\nCode(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "(Windows(pytorch) ∧ Software(pytorch)) ⊕ (¬Windows(pytorch) ∧ ¬Software(pytorch))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All OS are software.\n\nSketch First Order Logic Statement: ∀x (OS(x) → Software(x))\n\nPredicates:\n\"\"\"\nConvenient(x)\nOS(x)\nWindows(x)\nMac(x)\nPopular(x)\nSoftware(x)\nCode(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (OS(x) → Software(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All Mac are OS.\n\nSketch First Order Logic Statement:  (Mac(x) → OS(x))\n\nPredicates:\n\"\"\"\nConvenient(x)\nOS(x)\nWindows(x)\nMac(x)\nPopular(x)\nSoftware(x)\nCode(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Mac(x) → OS(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All software has code.\n\nSketch First Order Logic Statement:  (Software(x) → Code(x))\n\nPredicates:\n\"\"\"\nConvenient(x)\nOS(x)\nWindows(x)\nMac(x)\nPopular(x)\nSoftware(x)\nCode(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Software(x) → Code(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Roads made of concrete last longer than roads made with asphalt.\n\nSketch First Order Logic Statement:  ∀y (Road(x) ∧ ∀x  MadeOfConcrete(x) ∧ Road(y) ∧ MadeOfAsphalt(y) → LastLonger(x, y))\n\nPredicates:\n\"\"\"\nMadeOfAsphalt(x)\nMadeOfConcrete(x)\nPrefers(x, y)\nRoad(x)\nLastLonger(x, y)\nSmoother(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (Road(x) ∧ MadeOfConcrete(x) ∧ Road(y) ∧ MadeOfAsphalt(y) → LastLonger(x, y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Roads made of asphalt are smoother than roads made of concrete.\n\nSketch First Order Logic Statement: ∀x ∀y (Road(x) ∧ MadeOfAsphalt(x) ∧ Road(y) ∧ MadeOfConcrete(y) → Smoother(x, y))\n\nPredicates:\n\"\"\"\nMadeOfAsphalt(x)\nMadeOfConcrete(x)\nPrefers(x, y)\nRoad(x)\nLastLonger(x, y)\nSmoother(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (Road(x) ∧ MadeOfAsphalt(x) ∧ Road(y) ∧ MadeOfConcrete(y) → Smoother(x, y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Roads made of concrete last longer than roads made with asphalt.\n\nSketch First Order Logic Statement: ∀y ∀x (Road(x) ∧ MadeOfConcrete(x) ∧ Road(y) ∧ MadeOfAsphalt(y) → LastLonger(x, y))\n\nPredicates:\n\"\"\"\nMadeOfAsphalt(x)\nMadeOfConcrete(x)\nPrefers(x, y)\nRoad(x)\nLastLonger(x, y)\nSmoother(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (Road(x) ∧ MadeOfConcrete(x) ∧ Road(y) ∧ MadeOfAsphalt(y) → LastLonger(x, y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Camp Davern was established in the year 1946.\n\nSketch First Order Logic Statement: EstablishedIn(campdavern, year1946)\n\nPredicates:\n\"\"\"\nTraditionalSummerCamp(x)\nOperatedByYMCAUntil(x, y)\nOneOf(x, y)\nEstablishedIn(x, y)\nForBoysAndGirls(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "EstablishedIn(campdavern, year1946)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Camp Davern is one of Ontario's oldest summer camps.\n\nSketch First Order Logic Statement: OneOf(campdavern, ontariosoldestsummercamps)\n\nPredicates:\n\"\"\"\nTraditionalSummerCamp(x)\nOperatedByYMCAUntil(x, y)\nOneOf(x, y)\nEstablishedIn(x, y)\nForBoysAndGirls(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "OneOf(campdavern, ontariosoldestsummercamps)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Camp Davern was established in the year 1946.\n\nSketch First Order Logic Statement: (EstablishedIn(c)ampdavern, year1946)\n\nPredicates:\n\"\"\"\nTraditionalSummerCamp(x)\nOperatedByYMCAUntil(x, y)\nOneOf(x, y)\nEstablishedIn(x, y)\nForBoysAndGirls(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "EstablishedIn(campdavern, year1946)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People either work in the entertainment industry or are highly acclaimed in their profession.\n\nSketch First Order Logic Statement:  (Entertainment(x) ∨ Acclaimed(x))\n\nPredicates:\n\"\"\"\nPublishJournals(x)\nEntertainment(x)\nNovelist(x)\nGlowing(x)\nAcclaimed(x)\nTenured(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Entertainment(x) ∨ Acclaimed(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people publish journals, then they do not work in the entertainment industry.\n\nSketch First Order Logic Statement: ∀x (PublishJournals(x) → ¬Entertainment(x))\n\nPredicates:\n\"\"\"\nPublishJournals(x)\nEntertainment(x)\nNovelist(x)\nGlowing(x)\nAcclaimed(x)\nTenured(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (PublishJournals(x) → ¬Entertainment(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people are highly acclaimed in their profession, then they often hold tenured and high-ranking positions at their workplace.\n\nSketch First Order Logic Statement:  (Acclaimed(x) → ∀x  Tenured(x))\n\nPredicates:\n\"\"\"\nPublishJournals(x)\nEntertainment(x)\nNovelist(x)\nGlowing(x)\nAcclaimed(x)\nTenured(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Acclaimed(x) → Tenured(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Attolia and Sounis are countries near the Mede Empire.\n\nSketch First Order Logic Statement: Country(attolia) ∧ Nearby(medeempire, attolia) ∧ Country(sounis) ∧ Nearby(medeempire, sounis)\n\nPredicates:\n\"\"\"\nNearby(x, y)\nYoungAdultFantasyNovel(x)\nWrittenBy(x, y)\nCountry(x)\nPlotsToSwallowUp(x, y)\nPublishedBy(x, y)\nSoldAs(x, y)\nWorkedWith(x, y)\nSetIn(x, y)\nFictional(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Country(attolia) ∧ Nearby(medeempire, attolia) ∧ Country(sounis) ∧ Nearby(medeempire, sounis)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The fictional Mede Empire is where Thick as Thieves is set.\n\nSketch First Order Logic Statement: Fictional(medeempire) ∧ SetIn(thickastheives, medeempire)\n\nPredicates:\n\"\"\"\nNearby(x, y)\nYoungAdultFantasyNovel(x)\nWrittenBy(x, y)\nCountry(x)\nPlotsToSwallowUp(x, y)\nPublishedBy(x, y)\nSoldAs(x, y)\nWorkedWith(x, y)\nSetIn(x, y)\nFictional(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Fictional(medeempire) ∧ SetIn(thickastheives, medeempire)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Attolia and Sounis are countries near the Mede Empire.\n\nSketch First Order Logic Statement: Country(attolia) ∧ Nearby(medeempire, attolia) ∧ Country(sounis) ∧ Nearby(medeempire, sounis)\n\nPredicates:\n\"\"\"\nNearby(x, y)\nYoungAdultFantasyNovel(x)\nWrittenBy(x, y)\nCountry(x)\nPlotsToSwallowUp(x, y)\nPublishedBy(x, y)\nSoldAs(x, y)\nWorkedWith(x, y)\nSetIn(x, y)\nFictional(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Country(attolia) ∧ Nearby(medeempire, attolia) ∧ Country(sounis) ∧ Nearby(medeempire, sounis)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Thick as Thieves was sold both as a hardcover and an e-book.\n\nSketch First Order Logic Statement: SoldAs(thickastheives, hardcover) ∧ SoldAs(thickastheives, softcover)\n\nPredicates:\n\"\"\"\nNearby(x, y)\nYoungAdultFantasyNovel(x)\nWrittenBy(x, y)\nCountry(x)\nPlotsToSwallowUp(x, y)\nPublishedBy(x, y)\nSoldAs(x, y)\nWorkedWith(x, y)\nSetIn(x, y)\nFictional(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "SoldAs(thickastheives, hardcover) ∧ SoldAs(thickastheives, softcover)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Neofonie is a German producer.\n\nSketch First Order Logic Statement: German(neofonie) ∧ Producer(neofonie)\n\nPredicates:\n\"\"\"\nGerman(x)\nAnnounce(x, y)\nSpeak(x, y)\nWeTab(x)\nMeeGoBased(x)\nTabletComputer(x)\nProducer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "German(neofonie) ∧ Producer(neofonie)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Neofonie is a German producer.\n\nSketch First Order Logic Statement: German(neofonie) ∧ Producer(neofonie)\n\nPredicates:\n\"\"\"\nGerman(x)\nAnnounce(x, y)\nSpeak(x, y)\nWeTab(x)\nMeeGoBased(x)\nTabletComputer(x)\nProducer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "German(neofonie) ∧ Producer(neofonie)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All employees working in software engineering are from China. \n\nSketch First Order Logic Statement:  (SoftwareEngineering(x) → ∀x  FromChina(x))\n\nPredicates:\n\"\"\"\nWorkInCompany(x)\nFromChina(x)\nSoftwareEngineering(x)\nBusinessAnalysis(x)\nGoodAtMath(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (SoftwareEngineering(x) → FromChina(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All employees working in business analysis are working in this company. \n\nSketch First Order Logic Statement:  (BusinessAnalysis(x) → WorkInCompany(x))\n\nPredicates:\n\"\"\"\nWorkInCompany(x)\nFromChina(x)\nSoftwareEngineering(x)\nBusinessAnalysis(x)\nGoodAtMath(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (BusinessAnalysis(x) → WorkInCompany(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All employees working in software engineering are from China. \n\nSketch First Order Logic Statement:  (SoftwareEngineering(x) → FromChina(x))\n\nPredicates:\n\"\"\"\nWorkInCompany(x)\nFromChina(x)\nSoftwareEngineering(x)\nBusinessAnalysis(x)\nGoodAtMath(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (SoftwareEngineering(x) → FromChina(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: At the end of the party, strawberries had the lowest remaining weight.\n\nSketch First Order Logic Statement: LowestAmount(strawberries)\n\nPredicates:\n\"\"\"\nLower(x, y)\nParty(x)\nEat(x, y)\nMostPopular(x)\nLowestAmount(x)\nSameWeight(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "LowestAmount(strawberries)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If the fruit had the lowest remaining weight at the end of the party, then it means it was the most popular fruit.\n\nSketch First Order Logic Statement: ∀x (LowestAmount(x) → MostPopular(x)) \n\nPredicates:\n\"\"\"\nLower(x, y)\nParty(x)\nEat(x, y)\nMostPopular(x)\nLowestAmount(x)\nSameWeight(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (LowestAmount(x) → MostPopular(x)) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Benjamin only ate oranges and grapes at the party.\n\nSketch First Order Logic Statement: Eat(orange, benjamin) ∧ Eat(grape, benjamin) ∧ ¬Eatblueberry, benjamin ∧ ¬Eat(cherry, benjamin) ∧ ¬Eat(strawberry, benjamin)\n\nPredicates:\n\"\"\"\nLower(x, y)\nParty(x)\nEat(x, y)\nMostPopular(x)\nLowestAmount(x)\nSameWeight(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Eat(orange, benjamin) ∧ Eat(grape, benjamin) ∧ ¬Eat(blueberry, benjamin) ∧ ¬Eat(cherry, benjamin) ∧ ¬Eat(strawberry, benjamin)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Students either attend the conference in person or remotely. \n\nSketch First Order Logic Statement:  (Attend(x) → ∀x  InPerson(x) ⊕ Remotely(x))\n\nPredicates:\n\"\"\"\nRegistered(x)\nRemotely(x)\nChina(x)\nInPerson(x)\nAttend(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Attend(x) → InPerson(x) ⊕ Remotely(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Jack attends the conference and he is a student from China.\n\nSketch First Order Logic Statement: China(jack) ∧ Attend(jack)\n\nPredicates:\n\"\"\"\nRegistered(x)\nRemotely(x)\nChina(x)\nInPerson(x)\nAttend(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "China(jack) ∧ Attend(jack)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Students either attend the conference in person or remotely. \n\nSketch First Order Logic Statement: ∀x (Attend(x) → InPerson(x) ⊕ Remotelyx)\n\nPredicates:\n\"\"\"\nRegistered(x)\nRemotely(x)\nChina(x)\nInPerson(x)\nAttend(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Attend(x) → InPerson(x) ⊕ Remotely(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents. \n\nSketch First Order Logic Statement:  (EmigratedTo(davidhaivri, america) ∧ BornInIsrael(davidhaivri) ∧ ParentOf(davidhaivri, x) ∧ Israeli(x))\n\nPredicates:\n\"\"\"\nPoliticalStrategist(x)\nEmigratedTo(x, y)\nZionistLeader(x)\nElectedTo(x, y)\nIsraeliCitizen(x)\nIsraeli(x)\nParentOf(x, y)\nZionstLeader(x)\nBornInIsrael(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (EmigratedTo(davidhaivri, america) ∧ BornInIsrael(davidhaivri) ∧ ParentOf(davidhaivri, x) ∧ Israeli(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: David Ha'ivri is a political strategist. \n\nSketch First Order Logic Statement: P(oliticalStrat)egist(davidhaivri)\n\nPredicates:\n\"\"\"\nPoliticalStrategist(x)\nEmigratedTo(x, y)\nZionistLeader(x)\nElectedTo(x, y)\nIsraeliCitizen(x)\nIsraeli(x)\nParentOf(x, y)\nZionstLeader(x)\nBornInIsrael(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "PoliticalStrategist(davidhaivri)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: David Ha'ivri emigrated to the United States from Israel, where he was born to Israeli parents. \n\nSketch First Order Logic Statement: ∃x (EmigratedTo(davidhaivri, america) ∧ BornInIsrael(davidhaivri) ∧ ParentOf(davidhaivri, x) ∧ Israeli(x))\n\nPredicates:\n\"\"\"\nPoliticalStrategist(x)\nEmigratedTo(x, y)\nZionistLeader(x)\nElectedTo(x, y)\nIsraeliCitizen(x)\nIsraeli(x)\nParentOf(x, y)\nZionstLeader(x)\nBornInIsrael(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (EmigratedTo(davidhaivri, america) ∧ BornInIsrael(davidhaivri) ∧ ParentOf(davidhaivri, x) ∧ Israeli(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Flu and influenza are the same disease.\n\nSketch First Order Logic Statement: ∀x (Have(x, flu) ↔ Have(x, influenza))\n\nPredicates:\n\"\"\"\nHave(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Have(x, flu) ↔ Have(x, influenza))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Any lawyer is familiar with laws.\n\nSketch First Order Logic Statement: ∀x Lawyer(x → FamiliarWithLaws(x))\n\nPredicates:\n\"\"\"\nBritish(x)\nFamiliarWithLaws(x)\nLawyer(x)\nWhig(x)\nPolitician(x)\nSpeakFrench(x)\nSatInHouseOfCommons(x)\nEuropean(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Lawyer(x) → FamiliarWithLaws(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: James Cocks was a British lawyer.\n\nSketch First Order Logic Statement: Bri(tish(james) ∧ Lawyer(jam)es)\n\nPredicates:\n\"\"\"\nBritish(x)\nFamiliarWithLaws(x)\nLawyer(x)\nWhig(x)\nPolitician(x)\nSpeakFrench(x)\nSatInHouseOfCommons(x)\nEuropean(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "British(james) ∧ Lawyer(james)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: James Cocks was a British lawyer.\n\nSketch First Order Logic Statement: British(james) ∧ Lawyer(james)\n\nPredicates:\n\"\"\"\nBritish(x)\nFamiliarWithLaws(x)\nLawyer(x)\nWhig(x)\nPolitician(x)\nSpeakFrench(x)\nSatInHouseOfCommons(x)\nEuropean(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "British(james) ∧ Lawyer(james)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Science fiction novels are not about mythological creatures\n\nSketch First Order Logic Statement: ∀x ∀y (ScienceFictionx) ∧ Mythological(y ∧ Creature(y) → ¬About(x, y))\n\nPredicates:\n\"\"\"\nScienceFiction(x)\nMythological(x)\nCreature(x)\nAbout(x, y)\nFantasy(x)\nNovel(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (ScienceFiction(x) ∧ Mythological(y) ∧ Creature(y) → ¬About(x, y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Science fiction novels are not about mythological creatures\n\nSketch First Order Logic Statement:  ∀y (ScienceFiction(x) ∧ ∀x  Mythological(y) ∧ Creature(y) → ¬About(x, y))\n\nPredicates:\n\"\"\"\nScienceFiction(x)\nMythological(x)\nCreature(x)\nAbout(x, y)\nFantasy(x)\nNovel(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (ScienceFiction(x) ∧ Mythological(y) ∧ Creature(y) → ¬About(x, y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Beasts of Prey Is about a creature known as the Shetani.\n\nSketch First Order Logic Statement: About(beastsofprey, shetani) ∧ Creature(shetani)\n\nPredicates:\n\"\"\"\nScienceFiction(x)\nMythological(x)\nCreature(x)\nAbout(x, y)\nFantasy(x)\nNovel(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "About(beastsofprey, shetani) ∧ Creature(shetani)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Jack Odell is an English toy inventor.\n\nSketch First Order Logic Statement: English(jackOdell) ∧ ToyInvertor(jackOdell)\n\nPredicates:\n\"\"\"\nToyInvertor(x)\nSinger(x)\nBritish(x)\nOdell(x)\nNotablePeople(x)\nSpelledODell(x)\nSurname(x)\nSongWriter(x)\nEnglish(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "English(jackOdell) ∧ ToyInvertor(jackOdell)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: In some families Odell is spelled O'Dell, in a mistaken Irish adaptation.\n\nSketch First Order Logic Statement: ∃x (Odell(x) ∧ SpelledODell(x))\n\nPredicates:\n\"\"\"\nToyInvertor(x)\nSinger(x)\nBritish(x)\nOdell(x)\nNotablePeople(x)\nSpelledODell(x)\nSurname(x)\nSongWriter(x)\nEnglish(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Odell(x) ∧ SpelledODell(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Odell is an English surname originating in Odell, Bedfordshire.\n\nSketch First Order Logic Statement: ∀x (Odell(x) → Surname(()x))\n\nPredicates:\n\"\"\"\nToyInvertor(x)\nSinger(x)\nBritish(x)\nOdell(x)\nNotablePeople(x)\nSpelledODell(x)\nSurname(x)\nSongWriter(x)\nEnglish(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Odell(x) → Surname(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: In some families Odell is spelled O'Dell, in a mistaken Irish adaptation.\n\nSketch First Order Logic Statement: ∃x Odell(x ∧ SpelledODell(x))\n\nPredicates:\n\"\"\"\nToyInvertor(x)\nSinger(x)\nBritish(x)\nOdell(x)\nNotablePeople(x)\nSpelledODell(x)\nSurname(x)\nSongWriter(x)\nEnglish(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Odell(x) ∧ SpelledODell(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Mary is late for work.\n\nSketch First Order Logic Statement: LateForWork(mary)\n\nPredicates:\n\"\"\"\nCar(x)\nTrain(x)\nLateForWork(x)\nMeetJam(x)\nLoseTime(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "LateForWork(mary)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If you go somewhere by train, you will not lose time.\n\nSketch First Order Logic Statement:  (Train(x) → ¬LoseTime(x))\n\nPredicates:\n\"\"\"\nCar(x)\nTrain(x)\nLateForWork(x)\nMeetJam(x)\nLoseTime(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Train(x) → ¬LoseTime(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If you lose time, you will be late for work.\n\nSketch First Order Logic Statement:  (LoseTime(x) ↔ ∀x  LateForWork(x))\n\nPredicates:\n\"\"\"\nCar(x)\nTrain(x)\nLateForWork(x)\nMeetJam(x)\nLoseTime(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (LoseTime(x) ↔ LateForWork(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a person is uncomfortable, the person is unhappy.\n\nSketch First Order Logic Statement:  (Uncomfortable(x) → ¬Happy(x))\n\nPredicates:\n\"\"\"\nHungry(x)\nUncomfortable(x)\nHappy(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Uncomfortable(x) → ¬Happy(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Mary is not a lawyer or a tipped employee.\n\nSketch First Order Logic Statement: ¬Lawyermary ⊕ Tipped(mary)\n\nPredicates:\n\"\"\"\nAdvocate(x)\nTipped(x)\nLawyer(x)\nGetMinWage(x)\nWhiteCollar(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬Lawyer(mary) ⊕ Tipped(mary)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a person is a white-collar worker, they will get a guaranteed minimum wage (All white-collar workers get a guaranteed minimum wage).\n\nSketch First Order Logic Statement: ∀x (WhiteCo(llar(x) → GetMinWage(x)))\n\nPredicates:\n\"\"\"\nAdvocate(x)\nTipped(x)\nLawyer(x)\nGetMinWage(x)\nWhiteCollar(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (WhiteCollar(x) → GetMinWage(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Tipped employees do not get a guaranteed minimum wage.\n\nSketch First Order Logic Statement: ∀x (Tippedx) → ¬GetMinWage(x)\n\nPredicates:\n\"\"\"\nAdvocate(x)\nTipped(x)\nLawyer(x)\nGetMinWage(x)\nWhiteCollar(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Tipped(x) → ¬GetMinWage(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Mary is not a lawyer or a tipped employee.\n\nSketch First Order Logic Statement: ¬Lawyer(mary) ⊕ Tipped(mary)\n\nPredicates:\n\"\"\"\nAdvocate(x)\nTipped(x)\nLawyer(x)\nGetMinWage(x)\nWhiteCollar(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬Lawyer(mary) ⊕ Tipped(mary)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All lawyers are white-collar workers.\n\nSketch First Order Logic Statement: ∀x (Lawyer(x) → WhiteCollar(x))\n\nPredicates:\n\"\"\"\nAdvocate(x)\nTipped(x)\nLawyer(x)\nGetMinWage(x)\nWhiteCollar(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Lawyer(x) → WhiteCollar(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All lawyers are white-collar workers.\n\nSketch First Order Logic Statement: ∀x (Lawyer(x) → WhiteCollar(x))\n\nPredicates:\n\"\"\"\nAdvocate(x)\nTipped(x)\nLawyer(x)\nGetMinWage(x)\nWhiteCollar(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Lawyer(x) → WhiteCollar(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People born and living in New York City are New Yorkers.\n\nSketch First Order Logic Statement:  (BornIn(x, newyorkcity) ∧ ∀x  LivesIn(x, newyorkcity) → IsNewYorker(x))\n\nPredicates:\n\"\"\"\nIsNewYorker(x)\nIsChessPlayer(x)\nBornIn(x, y)\nIsChestPlayer(x)\nIsGrandMaster(x)\nLivesIn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (BornIn(x, newyorkcity) ∧ LivesIn(x, newyorkcity) → IsNewYorker(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Asa Hoffmann was born in New York City.\n\nSketch First Order Logic Statement: BornIn(asaHoffmann, newyorkcity)\n\nPredicates:\n\"\"\"\nIsNewYorker(x)\nIsChessPlayer(x)\nBornIn(x, y)\nIsChestPlayer(x)\nIsGrandMaster(x)\nLivesIn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "BornIn(asaHoffmann, newyorkcity)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some chess players are grandmasters.\n\nSketch First Order Logic Statement: ∃x (IsChestPlayer(x) ∧ IsGra(ndMa)ster(x))\n\nPredicates:\n\"\"\"\nIsNewYorker(x)\nIsChessPlayer(x)\nBornIn(x, y)\nIsChestPlayer(x)\nIsGrandMaster(x)\nLivesIn(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (IsChestPlayer(x) ∧ IsGrandMaster(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Philip closed his bank account.\n\nSketch First Order Logic Statement: CloseBankAccount(philip)\n\nPredicates:\n\"\"\"\nRequestDocuments(x)\nGetVisa(x)\nCloseBankAccount(x)\nFinancialGuarantees(x)\nApplyVisa(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "CloseBankAccount(philip)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Do not close your bank account if you request documents from the bank.\n\nSketch First Order Logic Statement:  (RequestDocuments(x) → ¬CloseBankAccount(x))\n\nPredicates:\n\"\"\"\nRequestDocuments(x)\nGetVisa(x)\nCloseBankAccount(x)\nFinancialGuarantees(x)\nApplyVisa(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (RequestDocuments(x) → ¬CloseBankAccount(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some of those who apply for a Schengen Visa get it.\n\nSketch First Order Logic Statement: ∃x (ApplyVisa(x) → GetVisax)\n\nPredicates:\n\"\"\"\nRequestDocuments(x)\nGetVisa(x)\nCloseBankAccount(x)\nFinancialGuarantees(x)\nApplyVisa(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (ApplyVisa(x) → GetVisa(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some fears lead to anxiety.\n\nSketch First Order Logic Statement: ∃x (F(ear(x) ∧ Anxiety(x)))\n\nPredicates:\n\"\"\"\nFear(x)\nTerror(x)\nAnxiety(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Fear(x) ∧ Anxiety(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: NY, PA, OH, MI are states in the US.\n\nSketch First Order Logic Statement: State(ny, us) ∧ State(pa, us) ∧ State(oh, us) ∧ State(mi, us)\n\nPredicates:\n\"\"\"\nErie(x)\nGreatLake(x)\nMichigan(x)\nFormAtEndOf(x, y)\nIn(x, y)\nMajorSettlementOf(x, y)\nOntario(x)\nSuperior(x)\nHuron(x)\nState(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "State(ny, us) ∧ State(pa, us) ∧ State(oh, us) ∧ State(mi, us)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The US is in North America.\n\nSketch First Order Logic Statement: In(us, northamerica)\n\nPredicates:\n\"\"\"\nErie(x)\nGreatLake(x)\nMichigan(x)\nFormAtEndOf(x, y)\nIn(x, y)\nMajorSettlementOf(x, y)\nOntario(x)\nSuperior(x)\nHuron(x)\nState(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "In(us, northamerica)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All defenders are soccer players.\n\nSketch First Order Logic Statement:  (Defender(x) → ∀x  SoccerPlayer(x))\n\nPredicates:\n\"\"\"\nProfessionalBasketballPlayer(x)\nCenterBack(x)\nDefender(x)\nSoccerPlayer(x)\nNBAPlayer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Defender(x) → SoccerPlayer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No soccer players are professional basketball players.\n\nSketch First Order Logic Statement: ∀x SoccerPlayer(x → ¬ProfessionalBasketballPlayer(x))\n\nPredicates:\n\"\"\"\nProfessionalBasketballPlayer(x)\nCenterBack(x)\nDefender(x)\nSoccerPlayer(x)\nNBAPlayer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (SoccerPlayer(x) → ¬ProfessionalBasketballPlayer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All defenders are soccer players.\n\nSketch First Order Logic Statement: ∀x (Defender(x() → SoccerPlaye)r(x))\n\nPredicates:\n\"\"\"\nProfessionalBasketballPlayer(x)\nCenterBack(x)\nDefender(x)\nSoccerPlayer(x)\nNBAPlayer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Defender(x) → SoccerPlayer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Naive cynicism was proposed by Justin Kruger and a colleague.\n\nSketch First Order Logic Statement: Proposed(justinKruger, naiveCynicism) ∧ ProposedcolleagueOfJustinKruger, naiveCynicism \n\nPredicates:\n\"\"\"\nPhilosophyOfMind(x)\nColleague(x, y)\nProposed(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Proposed(justinKruger, naiveCynicism) ∧ Proposed(colleagueOfJustinKruger, naiveCynicism) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Naive cynicism is a philosophy of mind.\n\nSketch First Order Logic Statement: PhilosophyOfMind(naiveCynicism)\n\nPredicates:\n\"\"\"\nPhilosophyOfMind(x)\nColleague(x, y)\nProposed(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "PhilosophyOfMind(naiveCynicism)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Naive cynicism is a philosophy of mind.\n\nSketch First Order Logic Statement: PhilosophyOfMind(naiveCy(ni)cism)\n\nPredicates:\n\"\"\"\nPhilosophyOfMind(x)\nColleague(x, y)\nProposed(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "PhilosophyOfMind(naiveCynicism)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Marvin Minsky is recognized by his contributions to the field of artificial intelligence.\n\nSketch First Order Logic Statement: ContributedTo(marvinMinsky, ai)\n\nPredicates:\n\"\"\"\nTuringAwarded(x)\nContributedTo(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "ContributedTo(marvinMinsky, ai)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: John McCarthy had a central role in creating and shaping the field of artificial inteligence. \n\nSketch First Order Logic Statement: ContributedTojohnMccarthy, ai\n\nPredicates:\n\"\"\"\nTuringAwarded(x)\nContributedTo(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "ContributedTo(johnMccarthy, ai)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Donald Knuth made major contributions to the analysis of algorithms.\n\nSketch First Order Logic Statement: ContributedTo(donaldKnuth, algorithms)\n\nPredicates:\n\"\"\"\nTuringAwarded(x)\nContributedTo(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "ContributedTo(donaldKnuth, algorithms)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Turing Award has been awarded to Donald Knuth, Marvin Minsky, Richard Hamming and John McCarthy. \n\nSketch First Order Logic Statement: TuringAwarded(donaldKnuth) ∧ TuringAwarded(marvinMinsky) ∧ TuringAward(ed(richardHamming) ∧ TuringAward)ed(johnMccarthy)\n\nPredicates:\n\"\"\"\nTuringAwarded(x)\nContributedTo(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "TuringAwarded(donaldKnuth) ∧ TuringAwarded(marvinMinsky) ∧ TuringAwarded(richardHamming) ∧ TuringAwarded(johnMccarthy)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No easy Leetcode problems have an AC rate lower than 20 percent. \n\nSketch First Order Logic Statement: ∀x (Easy(x) → ¬LowerAC(x))\n\nPredicates:\n\"\"\"\nPublishedAfter2022(x)\nEasy(x)\nRecommended(x)\nHard(x)\nStarred(x)\nLowerAC(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Easy(x) → ¬LowerAC(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: 4Sum is either starred by more than 1 thousand users and published after 2022, or neither starred by more than 1 thousand users nor published after 2022. \n\nSketch First Order Logic Statement: ¬(Starred(foursum) ⊕ PublishedAfter2022(foursum))\n\nPredicates:\n\"\"\"\nPublishedAfter2022(x)\nEasy(x)\nRecommended(x)\nHard(x)\nStarred(x)\nLowerAC(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬(Starred(foursum) ⊕ PublishedAfter2022(foursum))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All Leetcode problems recommended to novices are easy.                                                                                                       \n\nSketch First Order Logic Statement: ∀x (Recommended(x) → Easy(x))\n\nPredicates:\n\"\"\"\nPublishedAfter2022(x)\nEasy(x)\nRecommended(x)\nHard(x)\nStarred(x)\nLowerAC(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Recommended(x) → Easy(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All hard Leetcode problems are starred by more than 1 thousand users. \n\nSketch First Order Logic Statement:  (Hard(x) → Starred(x))\n\nPredicates:\n\"\"\"\nPublishedAfter2022(x)\nEasy(x)\nRecommended(x)\nHard(x)\nStarred(x)\nLowerAC(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Hard(x) → Starred(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Show Your Love is a song recorded by the South Korean boy band BtoB 4u.\n\nSketch First Order Logic Statement: Song(showyourlove) ∧ RecordedBy(showyourlove, btob4u) ∧ SouthKorean(btob4u) ∧ BoyBand(btob4u)\n\nPredicates:\n\"\"\"\nWrote(x, y)\nRecordedBy(x, y)\nLeadSingleOf(x, y)\nLeadSingle(x)\nExtendedPlay(x)\nMember(x, y)\nBoyBand(x)\nContains(x, y)\nSouthKorean(x)\nHasMusicVideo(x)\nSong(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Song(showyourlove) ∧ RecordedBy(showyourlove, btob4u) ∧ SouthKorean(btob4u) ∧ BoyBand(btob4u)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: There is a music video for Show Your Love.\n\nSketch First Order Logic Statement: HasMusicVideo(showyourlove)\n\nPredicates:\n\"\"\"\nWrote(x, y)\nRecordedBy(x, y)\nLeadSingleOf(x, y)\nLeadSingle(x)\nExtendedPlay(x)\nMember(x, y)\nBoyBand(x)\nContains(x, y)\nSouthKorean(x)\nHasMusicVideo(x)\nSong(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "HasMusicVideo(showyourlove)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The lead single of the extended play Inside is Show Your Love.\n\nSketch First Order Logic Statement: ExtendedPlay(inside) ∧ LeadSingle(showyourlove) ∧ LeadSingleOf(showyourlove, inside)\n\nPredicates:\n\"\"\"\nWrote(x, y)\nRecordedBy(x, y)\nLeadSingleOf(x, y)\nLeadSingle(x)\nExtendedPlay(x)\nMember(x, y)\nBoyBand(x)\nContains(x, y)\nSouthKorean(x)\nHasMusicVideo(x)\nSong(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "ExtendedPlay(inside) ∧ LeadSingle(showyourlove) ∧ LeadSingleOf(showyourlove, inside)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All tables are round.\n\nSketch First Order Logic Statement: ∀x (Table(x) → Round(x))\n\nPredicates:\n\"\"\"\nTable(x)\nFurniture(x)\nRound(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Table(x) → Round(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All juvenile delinquents are maladjusted individuals.\n\nSketch First Order Logic Statement: ∀x (JuvenileDelinquent(x) → MaladjustedIndividual(x))\n\nPredicates:\n\"\"\"\nProductOfBrokenHome(x)\nMaladjustedIndividual(x)\nJuvenileDelinquent(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (JuvenileDelinquent(x) → MaladjustedIndividual(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No extracting information from BOLD signals is without statistical pattern analysis. \n\nSketch First Order Logic Statement: ∀x (ExtractingInformationFromBOLDSignals(x) → ¬WithoutStatisticalPatternAnalysis(x))\n\nPredicates:\n\"\"\"\nBrainDecoding(x)\nWithoutStatisticalPatternAnalysis(x)\nWritingANovel(x)\nBrainReading(x)\nExtractingInformationFromBOLDSignals(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (ExtractingInformationFromBOLDSignals(x) → ¬WithoutStatisticalPatternAnalysis(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No extracting information from BOLD signals is without statistical pattern analysis. \n\nSketch First Order Logic Statement: ∀x (ExtractingInformationFromBOLDSignals(x) → ¬WithoutStatisticalPatternAnalysis(x))\n\nPredicates:\n\"\"\"\nBrainDecoding(x)\nWithoutStatisticalPatternAnalysis(x)\nWritingANovel(x)\nBrainReading(x)\nExtractingInformationFromBOLDSignals(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (ExtractingInformationFromBOLDSignals(x) → ¬WithoutStatisticalPatternAnalysis(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All brain decoding is extracting information from BOLD signals.\n\nSketch First Order Logic Statement:  (BrainDecoding(x) → ExtractingInformationFromBOLDSignals(x))\n\nPredicates:\n\"\"\"\nBrainDecoding(x)\nWithoutStatisticalPatternAnalysis(x)\nWritingANovel(x)\nBrainReading(x)\nExtractingInformationFromBOLDSignals(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (BrainDecoding(x) → ExtractingInformationFromBOLDSignals(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If multivoxel (pattern) analysis is without statistical pattern analysis and a brain reading, then multivoxel (pattern) analysis is without statistical pattern analysis and brain decoding.\n\nSketch First Order Logic Statement: WithoutStatisticalPatternAnalysis(multivoxelPatternAnalysis) ∧ BrainReading(multivoxelPatternAnalysis) → WithoutStatisticalPatternAnalysis(multivoxelPatternAnalysis) ∧ BrainDecoding(multivoxelPatternAnalysis)\n\nPredicates:\n\"\"\"\nBrainDecoding(x)\nWithoutStatisticalPatternAnalysis(x)\nWritingANovel(x)\nBrainReading(x)\nExtractingInformationFromBOLDSignals(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "WithoutStatisticalPatternAnalysis(multivoxelPatternAnalysis) ∧ BrainReading(multivoxelPatternAnalysis) → WithoutStatisticalPatternAnalysis(multivoxelPatternAnalysis) ∧ BrainDecoding(multivoxelPatternAnalysis)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No extracting information from BOLD signals is without statistical pattern analysis. \n\nSketch First Order Logic Statement: ∀x (ExtractingInformationFromBOLDSignals(x) → ¬WithoutStatisticalPatternAnalysis(x))\n\nPredicates:\n\"\"\"\nBrainDecoding(x)\nWithoutStatisticalPatternAnalysis(x)\nWritingANovel(x)\nBrainReading(x)\nExtractingInformationFromBOLDSignals(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (ExtractingInformationFromBOLDSignals(x) → ¬WithoutStatisticalPatternAnalysis(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Writing a novel is without statistical pattern analysis.\n\nSketch First Order Logic Statement:  (WritingANovel(x) → ∀x  WithoutStatisticalPatternAnalysis(x)) \n\nPredicates:\n\"\"\"\nBrainDecoding(x)\nWithoutStatisticalPatternAnalysis(x)\nWritingANovel(x)\nBrainReading(x)\nExtractingInformationFromBOLDSignals(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (WritingANovel(x) → WithoutStatisticalPatternAnalysis(x)) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Broccoli and asparagus are both vegetables.\n\nSketch First Order Logic Statement: Vegetable(broccoli) ∧ Vegetable(asparagus)\n\nPredicates:\n\"\"\"\nFirstDinnerParty(x, y)\nAtLuisParty(x)\nVegetable(x)\nRoomFor(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Vegetable(broccoli) ∧ Vegetable(asparagus)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Gustave has room for both broccoli and asparagus.\n\nSketch First Order Logic Statement: RoomFor(gustave, broccoli) ∧ RoomFor(gustave, asparagus)\n\nPredicates:\n\"\"\"\nFirstDinnerParty(x, y)\nAtLuisParty(x)\nVegetable(x)\nRoomFor(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "RoomFor(gustave, broccoli) ∧ RoomFor(gustave, asparagus)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Gustave has room for both broccoli and asparagus.\n\nSketch First Order Logic Statement: RoomFor(gustave, broccoli) ∧ RoomForgustave, asparagus\n\nPredicates:\n\"\"\"\nFirstDinnerParty(x, y)\nAtLuisParty(x)\nVegetable(x)\nRoomFor(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "RoomFor(gustave, broccoli) ∧ RoomFor(gustave, asparagus)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some singles of Imagine Dragons have been on Billboard Hot 100.\n\nSketch First Order Logic Statement: ∃x (PopularSingle(imagineDragon, x) ∧ BillboardHot100(x))\n\nPredicates:\n\"\"\"\nBillboardHot100(x)\nSinger(x)\nPopularSingle(x, y)\nMusician(x)\nLeadSinger(x, y)\nSongWriter(x)\nRockBand(x)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (PopularSingle(imagineDragon, x) ∧ BillboardHot100(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The lead singer of Imagine Dragons is Dan.\n\nSketch First Order Logic Statement: LeadSinger(imagineDragon, dan)\n\nPredicates:\n\"\"\"\nBillboardHot100(x)\nSinger(x)\nPopularSingle(x, y)\nMusician(x)\nLeadSinger(x, y)\nSongWriter(x)\nRockBand(x)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "LeadSinger(imagineDragon, dan)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All singers are musicians.\n\nSketch First Order Logic Statement: ∀x Singer(x → Musician(x))\n\nPredicates:\n\"\"\"\nBillboardHot100(x)\nSinger(x)\nPopularSingle(x, y)\nMusician(x)\nLeadSinger(x, y)\nSongWriter(x)\nRockBand(x)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Singer(x) → Musician(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some sandwiches are bread.\n\nSketch First Order Logic Statement: ∃x Sandwich(x ∧ Bread(x))\n\nPredicates:\n\"\"\"\nEdible(x)\nBread(x)\nPoisonous(x)\nFood(x)\nSandwich(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Sandwich(x) ∧ Bread(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All food is edible. \n\nSketch First Order Logic Statement: ∀x (Food(x) →( )Edible(x))\n\nPredicates:\n\"\"\"\nEdible(x)\nBread(x)\nPoisonous(x)\nFood(x)\nSandwich(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Food(x) → Edible(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No edible things are poisonous.\n\nSketch First Order Logic Statement: ∀x (Edible(x) → ¬Poisonous(x))\n\nPredicates:\n\"\"\"\nEdible(x)\nBread(x)\nPoisonous(x)\nFood(x)\nSandwich(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Edible(x) → ¬Poisonous(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Common utilities include water, electricity, gas, heating, sewer, trash, and recycling.\n\nSketch First Order Logic Statement: CommonUtilities(water) ∧ CommonUtilities(electricity) ∧ CommonUtilities(gas) ∧ CommonUtilities(heating)\n\nPredicates:\n\"\"\"\nCover(x, y)\nCommonUtilities(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "CommonUtilities(water) ∧ CommonUtilities(electricity) ∧ CommonUtilities(gas) ∧ CommonUtilities(heating)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Many apartment rents cover the cost of water and electricity.\n\nSketch First Order Logic Statement: ∃x (Cover(x, water) ∧ Cover(x, electricity))\n\nPredicates:\n\"\"\"\nCover(x, y)\nCommonUtilities(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Cover(x, water) ∧ Cover(x, electricity))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The rent of the apartment where Ava lives does not cover any utility expenses.\n\nSketch First Order Logic Statement: ∀x (¬Cover(ava, x))\n\nPredicates:\n\"\"\"\nCover(x, y)\nCommonUtilities(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (¬Cover(ava, x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No products are perfect. \n\nSketch First Order Logic Statement: ∀x (Productx) → ¬Perfect(x)\n\nPredicates:\n\"\"\"\nProduct(x)\nClothes(x)\nSkirt(x)\nDress(x)\nPerfect(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Product(x) → ¬Perfect(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No products are perfect. \n\nSketch First Order Logic Statement:  (Product(x) → ¬Perfect(x))\n\nPredicates:\n\"\"\"\nProduct(x)\nClothes(x)\nSkirt(x)\nDress(x)\nPerfect(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Product(x) → ¬Perfect(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All clothes are products. \n\nSketch First Order Logic Statement: ∀x (Clothes(x) → Product(x))\n\nPredicates:\n\"\"\"\nProduct(x)\nClothes(x)\nSkirt(x)\nDress(x)\nPerfect(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Clothes(x) → Product(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All pets are animals.\n\nSketch First Order Logic Statement:  (Pet(x) → ∀x  Animal(x))\n\nPredicates:\n\"\"\"\nLiked(x, y)\nHasPet(x)\nDog(x)\nPet(x)\nCares(x, y)\nCat(x)\nAnimal(x)\nNaughty(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Pet(x) → Animal(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All pets are animals.\n\nSketch First Order Logic Statement:  (Pet(x) → ∀x  Animal(x))\n\nPredicates:\n\"\"\"\nLiked(x, y)\nHasPet(x)\nDog(x)\nPet(x)\nCares(x, y)\nCat(x)\nAnimal(x)\nNaughty(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Pet(x) → Animal(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All pets are animals.\n\nSketch First Order Logic Statement: ∀x (Pet(x) → Animal(x))\n\nPredicates:\n\"\"\"\nLiked(x, y)\nHasPet(x)\nDog(x)\nPet(x)\nCares(x, y)\nCat(x)\nAnimal(x)\nNaughty(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Pet(x) → Animal(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Surprises are either fun or dreadful.\n\nSketch First Order Logic Statement:  (Surprise(x) → ∀x  (Fun(x) ⊕ Dreadful(x)))\n\nPredicates:\n\"\"\"\nFun(x)\nSurprise(x)\nScare(x)\nDreadful(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Surprise(x) → (Fun(x) ⊕ Dreadful(x)))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All books written by Cixin Liu have sold more than 1 million copies. \n\nSketch First Order Logic Statement: ∀x (Book(x) ∧ WrittenBy(x, cixinliu) → SoldMoreThan(x, onemillion))\n\nPredicates:\n\"\"\"\nWrittenBy(x, y)\nSoldMoreThan(x, y)\nBook(x)\nWon(x, y)\nInfluencedBy(x, y)\nAboutFuture(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Book(x) ∧ WrittenBy(x, cixinliu) → SoldMoreThan(x, onemillion))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All books written by Cixin Liu have sold more than 1 million copies. \n\nSketch First Order Logic Statement:  (Book(x) ∧ ∀x  WrittenBy(x, cixinliu) → SoldMoreThan(x, onemillion))\n\nPredicates:\n\"\"\"\nWrittenBy(x, y)\nSoldMoreThan(x, y)\nBook(x)\nWon(x, y)\nInfluencedBy(x, y)\nAboutFuture(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Book(x) ∧ WrittenBy(x, cixinliu) → SoldMoreThan(x, onemillion))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some books that have won the Hugo Award were written by Cixin Liu.\n\nSketch First Order Logic Statement: ∃x (Won(x, hugoaward) ∧ Book(x) ∧ WrittenBy(x, cixinliu))\n\nPredicates:\n\"\"\"\nWrittenBy(x, y)\nSoldMoreThan(x, y)\nBook(x)\nWon(x, y)\nInfluencedBy(x, y)\nAboutFuture(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Won(x, hugoaward) ∧ Book(x) ∧ WrittenBy(x, cixinliu))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All students studying in the morning are good at time management. \n\nSketch First Order Logic Statement: ∀x StudyMorning(x → GoodAtTimeManagement(x))\n\nPredicates:\n\"\"\"\nStudyMorning(x)\nGetUpEarly(x)\nComputerScience(x)\nPopular(x)\nGoodAtTimeManagement(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (StudyMorning(x) → GoodAtTimeManagement(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All students good at time management are popular among students. \n\nSketch First Order Logic Statement:  (GoodAtTimeManagement(x) → Popular(x))\n\nPredicates:\n\"\"\"\nStudyMorning(x)\nGetUpEarly(x)\nComputerScience(x)\nPopular(x)\nGoodAtTimeManagement(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (GoodAtTimeManagement(x) → Popular(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: James is not popular among students. \n\nSketch First Order Logic Statement: ¬Popular(james)\n\nPredicates:\n\"\"\"\nStudyMorning(x)\nGetUpEarly(x)\nComputerScience(x)\nPopular(x)\nGoodAtTimeManagement(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬Popular(james)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If there is a dog on the roof something went wrong.\n\nSketch First Order Logic Statement: ∀x  ((Dog(x) ∧ ∃y  OnRoof(x)) → WentWrong(y))\n\nPredicates:\n\"\"\"\nDog(x)\nWentWrong(x)\nOnRoof(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∃y ((Dog(x) ∧ OnRoof(x)) → WentWrong(y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Several species of Elephantopus are native to the southeastern United States.\n\nSketch First Order Logic Statement: ∃x (Elephantopus(x) ∧ NativeTo(x, southeasternunitedstates))\n\nPredicates:\n\"\"\"\nWidespreadOver(x, y)\nElephantopus(x)\nGenus(x, y)\nTraditionalMedicine(x)\nBelongTo(x, y)\nElephantopusScaber(x)\nNativeTo(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Elephantopus(x) ∧ NativeTo(x, southeasternunitedstates))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Elephantopus is widespread over much of Africa, southern Asia, Australia, and the Americas.\n\nSketch First Order Logic Statement: ∀x (Elephantopus(x) → WidespreadOver(x, africa) ∧ WidespreadOver(x, southernasia) ∧ WidespreadOver(x, austral(ia) ∧ WidespreadOver)(x, americas))\n\nPredicates:\n\"\"\"\nWidespreadOver(x, y)\nElephantopus(x)\nGenus(x, y)\nTraditionalMedicine(x)\nBelongTo(x, y)\nElephantopusScaber(x)\nNativeTo(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Elephantopus(x) → WidespreadOver(x, africa) ∧ WidespreadOver(x, southernasia) ∧ WidespreadOver(x, australia) ∧ WidespreadOver(x, americas))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Several species of Elephantopus are native to the southeastern United States.\n\nSketch First Order Logic Statement:  (Elephantopus(x) ∧ ∃x  NativeTo(x, southeasternunitedstates))\n\nPredicates:\n\"\"\"\nWidespreadOver(x, y)\nElephantopus(x)\nGenus(x, y)\nTraditionalMedicine(x)\nBelongTo(x, y)\nElephantopusScaber(x)\nNativeTo(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Elephantopus(x) ∧ NativeTo(x, southeasternunitedstates))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No buildings open to students are established after 1800. \n\nSketch First Order Logic Statement: ∀x (OpenToStudents(x) → ¬EstablishedAfter1800(x))\n\nPredicates:\n\"\"\"\nEstablishedAfter1800(x)\nYaleDormitory(x)\nInYorkStreet(x)\nOperatedByYaleHousingStaffs(x)\nManagedByYaleHousing(x)\nOpenToStudents(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (OpenToStudents(x) → ¬EstablishedAfter1800(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All buildings operated by Yale Housing staff are managed by Yale Housing. \n\nSketch First Order Logic Statement:  (OperatedByYaleHousingStaffs(x) → ManagedByYaleHousing(x))\n\nPredicates:\n\"\"\"\nEstablishedAfter1800(x)\nYaleDormitory(x)\nInYorkStreet(x)\nOperatedByYaleHousingStaffs(x)\nManagedByYaleHousing(x)\nOpenToStudents(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (OperatedByYaleHousingStaffs(x) → ManagedByYaleHousing(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All buildings operated by Yale Housing staff are managed by Yale Housing. \n\nSketch First Order Logic Statement:  (OperatedByYaleHousingStaffs(x) → ManagedByYaleHousing(x))\n\nPredicates:\n\"\"\"\nEstablishedAfter1800(x)\nYaleDormitory(x)\nInYorkStreet(x)\nOperatedByYaleHousingStaffs(x)\nManagedByYaleHousing(x)\nOpenToStudents(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (OperatedByYaleHousingStaffs(x) → ManagedByYaleHousing(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Harkness is either a building operated by Yale Housing staff or located on York Street. \n\nSketch First Order Logic Statement: OperatedByYaleHou(singStaff)s(harkness) ⊕ InYorkStreet(harkness)\n\nPredicates:\n\"\"\"\nEstablishedAfter1800(x)\nYaleDormitory(x)\nInYorkStreet(x)\nOperatedByYaleHousingStaffs(x)\nManagedByYaleHousing(x)\nOpenToStudents(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "OperatedByYaleHousingStaffs(harkness) ⊕ InYorkStreet(harkness)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Every creepy haunted house is in a mansion house.\n\nSketch First Order Logic Statement: ∀x (CreepyHauntedHouse(x) → MansionHouse(x))\n\nPredicates:\n\"\"\"\nMansionHouse(x)\nCreepyHauntedHouse(x)\nSkyscraper(x)\nTerrifyingHalloweenScare(x)\nUrbanArea(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (CreepyHauntedHouse(x) → MansionHouse(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Every creepy haunted house is in a mansion house.\n\nSketch First Order Logic Statement: (∀x (CreepyHauntedHouse(x) → MansionHou)se(x))\n\nPredicates:\n\"\"\"\nMansionHouse(x)\nCreepyHauntedHouse(x)\nSkyscraper(x)\nTerrifyingHalloweenScare(x)\nUrbanArea(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (CreepyHauntedHouse(x) → MansionHouse(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: There are no mansion houses in an urban area.\n\nSketch First Order Logic Statement: ∀x (UrbanArea(x) → ¬MansionHouse(x))\n\nPredicates:\n\"\"\"\nMansionHouse(x)\nCreepyHauntedHouse(x)\nSkyscraper(x)\nTerrifyingHalloweenScare(x)\nUrbanArea(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (UrbanArea(x) → ¬MansionHouse(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Scream is a creepy haunted house or a terrifying Halloween scare.\n\nSketch First Order Logic Statement: CreepyHauntedHouse(thescream) ∨ TerrifyingHalloweenScare(thescream)\n\nPredicates:\n\"\"\"\nMansionHouse(x)\nCreepyHauntedHouse(x)\nSkyscraper(x)\nTerrifyingHalloweenScare(x)\nUrbanArea(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "CreepyHauntedHouse(thescream) ∨ TerrifyingHalloweenScare(thescream)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Every creepy haunted house is in a mansion house.\n\nSketch First Order Logic Statement: ∀x ((Cree)pyHauntedHouse(x) → MansionHouse(x))\n\nPredicates:\n\"\"\"\nMansionHouse(x)\nCreepyHauntedHouse(x)\nSkyscraper(x)\nTerrifyingHalloweenScare(x)\nUrbanArea(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (CreepyHauntedHouse(x) → MansionHouse(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Every creepy haunted house is in a mansion house.\n\nSketch First Order Logic Statement:  (CreepyHauntedHouse(x) → ∀x  MansionHouse(x))\n\nPredicates:\n\"\"\"\nMansionHouse(x)\nCreepyHauntedHouse(x)\nSkyscraper(x)\nTerrifyingHalloweenScare(x)\nUrbanArea(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (CreepyHauntedHouse(x) → MansionHouse(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Every creepy haunted house is in a mansion house.\n\nSketch First Order Logic Statement:  (CreepyHauntedHouse(x) → ∀x  MansionHouse(x))\n\nPredicates:\n\"\"\"\nMansionHouse(x)\nCreepyHauntedHouse(x)\nSkyscraper(x)\nTerrifyingHalloweenScare(x)\nUrbanArea(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (CreepyHauntedHouse(x) → MansionHouse(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Every creepy haunted house is in a mansion house.\n\nSketch First Order Logic Statement: ∀x CreepyHauntedHouse(x → MansionHouse(x))\n\nPredicates:\n\"\"\"\nMansionHouse(x)\nCreepyHauntedHouse(x)\nSkyscraper(x)\nTerrifyingHalloweenScare(x)\nUrbanArea(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (CreepyHauntedHouse(x) → MansionHouse(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: There are no mansion houses in an urban area.\n\nSketch First Order Logic Statement:  (UrbanArea(x) → ¬MansionHouse(x))\n\nPredicates:\n\"\"\"\nMansionHouse(x)\nCreepyHauntedHouse(x)\nSkyscraper(x)\nTerrifyingHalloweenScare(x)\nUrbanArea(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (UrbanArea(x) → ¬MansionHouse(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Scream is a creepy haunted house or a terrifying Halloween scare.\n\nSketch First Order Logic Statement: CreepyHauntedHouse(thescream) ∨ TerrifyingHalloweenScare(thescream)\n\nPredicates:\n\"\"\"\nMansionHouse(x)\nCreepyHauntedHouse(x)\nSkyscraper(x)\nTerrifyingHalloweenScare(x)\nUrbanArea(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "CreepyHauntedHouse(thescream) ∨ TerrifyingHalloweenScare(thescream)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: There is a national park in Vietnam classified as a UNESCO World Heritage Site.\n\nSketch First Order Logic Statement:  (NationalPark(x) ∧ ∃x  Locatedin(x, vietnam) ∧ UNESCOWorldHeritageSite(x))\n\nPredicates:\n\"\"\"\nNatureReserve(x)\nUNESCOWorldHeritageSite(x)\nMangedby(x, y)\nLocatedin(x, y)\nNationalPark(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (NationalPark(x) ∧ Locatedin(x, vietnam) ∧ UNESCOWorldHeritageSite(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All national parks in Vietnam are either managed by the Ministry of Agriculture or by the People's Committee. \n\nSketch First Order Logic Statement:  (NationalPark(x) ∧ Locatedin(x, vietnam) → Mangedby(x, ministryofAgriculture) ∨ ∀x  Mangedby(x, peoplesCommittee))\n\nPredicates:\n\"\"\"\nNatureReserve(x)\nUNESCOWorldHeritageSite(x)\nMangedby(x, y)\nLocatedin(x, y)\nNationalPark(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (NationalPark(x) ∧ Locatedin(x, vietnam) → Mangedby(x, ministryofAgriculture) ∨ Mangedby(x, peoplesCommittee))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Phuoc Binh is not managed by the Ministry of Agriculture.\n\nSketch First Order Logic Statement: ¬Mangedby(phuocBinh, ministryofAgriculture)\n\nPredicates:\n\"\"\"\nNatureReserve(x)\nUNESCOWorldHeritageSite(x)\nMangedby(x, y)\nLocatedin(x, y)\nNationalPark(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬Mangedby(phuocBinh, ministryofAgriculture)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Greyhound racing is a competitive sport where spectators bet on greyhounds.\n\nSketch First Order Logic Statement: ∃y ∀x (GreyhoundRacing(x) → CompetitiveSport(x) ∧ Greyhound(y) ∧ SpectatorsBetOn(x, y))\n\nPredicates:\n\"\"\"\nGreyhoundRacing(x)\nPursue(x, y)\nBanned(x)\nGreyHound(x)\nCompetitiveSport(x)\nSpectaorsBetOn(x, y)\nGreyhound(x)\nHare(x)\nSmallGame(x)\nSpectatorsBetOn(x, y)\nCoursing(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∃y (GreyhoundRacing(x) → CompetitiveSport(x) ∧ Greyhound(y) ∧ SpectatorsBetOn(x, y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Coursing involves spectators betting on a hare being pursued by greyhounds.\n\nSketch First Order Logic Statement: ∃y ∀x ∃z (Coursing(x) → Hare(y) ∧ SpectatorsBetOn(x, y) ∧ GreyHound(z) ∧ Pursue(z, y))\n\nPredicates:\n\"\"\"\nGreyhoundRacing(x)\nPursue(x, y)\nBanned(x)\nGreyHound(x)\nCompetitiveSport(x)\nSpectaorsBetOn(x, y)\nGreyhound(x)\nHare(x)\nSmallGame(x)\nSpectatorsBetOn(x, y)\nCoursing(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∃y ∃z (Coursing(x) → Hare(y) ∧ SpectatorsBetOn(x, y) ∧ GreyHound(z) ∧ Pursue(z, y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: In one game, Henry first receives one yellow card, then he receives one red card.\n\nSketch First Order Logic Statement: ¬TwoYellow(henry) ∧ OneRed(henry)\n\nPredicates:\n\"\"\"\nEject(x)\nSoccerPlayer(x)\nOneRed(x)\nTwoYellow(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬TwoYellow(henry) ∧ OneRed(henry)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: In one game, Henry first receives one yellow card, then he receives one red card.\n\nSketch First Order Logic Statement: ¬TwoYellow(henry) ∧ OneRed(henry)\n\nPredicates:\n\"\"\"\nEject(x)\nSoccerPlayer(x)\nOneRed(x)\nTwoYellow(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬TwoYellow(henry) ∧ OneRed(henry)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some living things are trees.\n\nSketch First Order Logic Statement:  (Living(x) ∧ Tree(x))\n\nPredicates:\n\"\"\"\nPlant(x)\nLiving(x)\nTree(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Living(x) ∧ Tree(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Notable people with the given name include Dagfinn Aarskog, Dagfinn Bakke and Dagfinn Dahl. \n\nSketch First Order Logic Statement: Dagfinn(dagfinnAarskog) ∧ NotablePeople(dagfinnAarskog) ∧ Dagfinn(dagfinnBakke) ∧ NotablePeople(dagfinnBakke) ∧ Dagfinn(dagfinnDahl) ∧ NotablePeople(dagfinnDahl)\n\nPredicates:\n\"\"\"\nGivenName(x)\nPhysician(x)\nNotablePeople(x)\nBarrister(x)\nDagfinn(x)\nNorwegian(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Dagfinn(dagfinnAarskog) ∧ NotablePeople(dagfinnAarskog) ∧ Dagfinn(dagfinnBakke) ∧ NotablePeople(dagfinnBakke) ∧ Dagfinn(dagfinnDahl) ∧ NotablePeople(dagfinnDahl)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Dagfinn Dahl is a Norwegian barrister.\n\nSketch First Order Logic Statement: Norwegian(dagfinnDahl) ∧ Barrister(dagfinnDahl)\n\nPredicates:\n\"\"\"\nGivenName(x)\nPhysician(x)\nNotablePeople(x)\nBarrister(x)\nDagfinn(x)\nNorwegian(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Norwegian(dagfinnDahl) ∧ Barrister(dagfinnDahl)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Dagfinn Dahl is a Norwegian barrister.\n\nSketch First Order Logic Statement: Norwegian(dagfinnDahl) ∧ Barrister(dagfinnDahl)\n\nPredicates:\n\"\"\"\nGivenName(x)\nPhysician(x)\nNotablePeople(x)\nBarrister(x)\nDagfinn(x)\nNorwegian(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Norwegian(dagfinnDahl) ∧ Barrister(dagfinnDahl)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If entertainment is interesting, it will be popular.\n\nSketch First Order Logic Statement: ∀x ((Entertainment(x) ∧ Interesting(x)) → Popular(x))\n\nPredicates:\n\"\"\"\nWellKnown(x)\nPopular(x)\nInteresting(x)\nEntertainment(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ((Entertainment(x) ∧ Interesting(x)) → Popular(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If BERT is a giant language model, then GPT3 is also a giant language model. \n\nSketch First Order Logic Statement: (LanguageModel(bert) ∧ Giant(bert)) → (LanguageModel(gpt3) ∧ Giant(gpt3))\n\nPredicates:\n\"\"\"\nLanguageModel(x)\nUsedBySomeResearchers(x)\nGoodPerformance(x)\nGiant(x)\nPopular(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "(LanguageModel(bert) ∧ Giant(bert)) → (LanguageModel(gpt3) ∧ Giant(gpt3))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: For two different teams, either one team wins or the other team wins.\n\nSketch First Order Logic Statement: ∀y ∀x (Different(x, y) → WonGame(x, y) ⊕ WonGame(y, x))\n\nPredicates:\n\"\"\"\nWonGame(x, y)\nJoined(x, y)\nScottish(x)\nDifferent(x, y)\nPartOf(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (Different(x, y) → WonGame(x, y) ⊕ WonGame(y, x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: St Johnstone is a Scottish team.\n\nSketch First Order Logic Statement: Scottish(johnstone)\n\nPredicates:\n\"\"\"\nWonGame(x, y)\nJoined(x, y)\nScottish(x)\nDifferent(x, y)\nPartOf(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Scottish(johnstone)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: St Johnstone and Minsk are different teams.\n\nSketch First Order Logic Statement: Different(misnk, johnstone) ∧ Different(johnstone, minsk)\n\nPredicates:\n\"\"\"\nWonGame(x, y)\nJoined(x, y)\nScottish(x)\nDifferent(x, y)\nPartOf(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Different(misnk, johnstone) ∧ Different(johnstone, minsk)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: T10 is either a Boeing-737 plane and in Delta, or neither a Boeing-737 plane nor in Delta. \n\nSketch First Order Logic Statement: Boeing737(t10) ⊕ Delta(t10)\n\nPredicates:\n\"\"\"\nDelta(x)\nProducedBefore2010(x)\nPassengers100(x)\nSeats300(x)\nShortDistance(x)\nBoeing737(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Boeing737(t10) ⊕ Delta(t10)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No Boeing-737 plane is equipped with more than 300 seats. \n\nSketch First Order Logic Statement: ∀x (Boeing737x) → ¬Seats300(x)\n\nPredicates:\n\"\"\"\nDelta(x)\nProducedBefore2010(x)\nPassengers100(x)\nSeats300(x)\nShortDistance(x)\nBoeing737(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Boeing737(x) → ¬Seats300(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: T10 is either a Boeing-737 plane and in Delta, or neither a Boeing-737 plane nor in Delta. \n\nSketch First Order Logic Statement: Boeing737(t10) ⊕ Delta(t10)\n\nPredicates:\n\"\"\"\nDelta(x)\nProducedBefore2010(x)\nPassengers100(x)\nSeats300(x)\nShortDistance(x)\nBoeing737(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Boeing737(t10) ⊕ Delta(t10)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All planes with a capacity of 100 passengers are produced before 2010. \n\nSketch First Order Logic Statement: ∀x (Passengers100(x) → ProducedBefore2010x)\n\nPredicates:\n\"\"\"\nDelta(x)\nProducedBefore2010(x)\nPassengers100(x)\nSeats300(x)\nShortDistance(x)\nBoeing737(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Passengers100(x) → ProducedBefore2010(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The SAT test is intended to assess student's readiness for college.\n\nSketch First Order Logic Statement: Test(sat(, read)iness)\n\nPredicates:\n\"\"\"\nYear(x)\nBefore2016(x)\nSince2016(x)\nOwn(x, y)\nAlignHighSchool(x)\nTest(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Test(sat, readiness)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The SAT was originally designed not to be aligned with high school curricula. \n\nSketch First Order Logic Statement: ∀x (Year(x) ∧ Before2016(x) → ¬AlignHighSchool(x)) \n\nPredicates:\n\"\"\"\nYear(x)\nBefore2016(x)\nSince2016(x)\nOwn(x, y)\nAlignHighSchool(x)\nTest(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Year(x) ∧ Before2016(x) → ¬AlignHighSchool(x)) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The SAT test is intended to assess student's readiness for college.\n\nSketch First Order Logic Statement: Test(sat, readiness)\n\nPredicates:\n\"\"\"\nYear(x)\nBefore2016(x)\nSince2016(x)\nOwn(x, y)\nAlignHighSchool(x)\nTest(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Test(sat, readiness)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All players in the Big 3 are professionals who have a high win ratio.\n\nSketch First Order Logic Statement: ∀x (ProfessionalTennisPlayer(x) ∧ (HighWinRatio(x) → I)nBig3(x))\n\nPredicates:\n\"\"\"\nBornIn(x, y)\nProfessionalTennisPlayer(x)\nInBig3(x)\nHighWinRatio(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (ProfessionalTennisPlayer(x) ∧ HighWinRatio(x) → InBig3(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Rafa Nadal is a professional tennis player.\n\nSketch First Order Logic Statement: ProfessionalTennisPlayer(rafaNadal)\n\nPredicates:\n\"\"\"\nBornIn(x, y)\nProfessionalTennisPlayer(x)\nInBig3(x)\nHighWinRatio(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "ProfessionalTennisPlayer(rafaNadal)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All players in the Big 3 are professionals who have a high win ratio.\n\nSketch First Order Logic Statement: ∀x (Profe(s)sionalTennisPlayer(x) ∧ HighWinRatio(x) → InBig3(x))\n\nPredicates:\n\"\"\"\nBornIn(x, y)\nProfessionalTennisPlayer(x)\nInBig3(x)\nHighWinRatio(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (ProfessionalTennisPlayer(x) ∧ HighWinRatio(x) → InBig3(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No cookie is healthy.\n\nSketch First Order Logic Statement:  (Cookie(x) → ∀x  ¬Healthy(x))\n\nPredicates:\n\"\"\"\nCookie(x)\nOreo(x)\nHealthy(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Cookie(x) → ¬Healthy(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Jack is a human or a flower, then Jack is a human and a flower.\n\nSketch First Order Logic Statement: Human(jack) ∨ Flower(jack) → Human(jack) ∧ Flower(jack)\n\nPredicates:\n\"\"\"\nFlower(x)\nHuman(x)\nAnimal(x)\nPlant(x)\nPupil(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Human(jack) ∨ Flower(jack) → Human(jack) ∧ Flower(jack)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Jack is a human or a flower, then Jack is a human and a flower.\n\nSketch First Order Logic Statement: Human(jack) ∨ Flower(jack) → Human(jack) ∧ Flower(jack)\n\nPredicates:\n\"\"\"\nFlower(x)\nHuman(x)\nAnimal(x)\nPlant(x)\nPupil(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Human(jack) ∨ Flower(jack) → Human(jack) ∧ Flower(jack)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All pupils are human.\n\nSketch First Order Logic Statement: ∀x (Pupil(x) → Human(x))\n\nPredicates:\n\"\"\"\nFlower(x)\nHuman(x)\nAnimal(x)\nPlant(x)\nPupil(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Pupil(x) → Human(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All pupils are human.\n\nSketch First Order Logic Statement: ∀x (Pupil(x) → Human(x))\n\nPredicates:\n\"\"\"\nFlower(x)\nHuman(x)\nAnimal(x)\nPlant(x)\nPupil(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Pupil(x) → Human(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All clothes are wearable. \n\nSketch First Order Logic Statement:  (Clothes(x) → ∀x  Wearable(x))\n\nPredicates:\n\"\"\"\nClothes(x)\nSlipper(x)\nWearable(x)\nFood(x)\nAirTight(x)\nShoes(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Clothes(x) → Wearable(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No wearable things are airtight.\n\nSketch First Order Logic Statement:  (Wearable(x) → ∀x  ¬AirTight(x))\n\nPredicates:\n\"\"\"\nClothes(x)\nSlipper(x)\nWearable(x)\nFood(x)\nAirTight(x)\nShoes(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Wearable(x) → ¬AirTight(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A thing is either food or clothes.\n\nSketch First Order Logic Statement: ∀x (Food(x) ⊕ Clothesx)\n\nPredicates:\n\"\"\"\nClothes(x)\nSlipper(x)\nWearable(x)\nFood(x)\nAirTight(x)\nShoes(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Food(x) ⊕ Clothes(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Carlos Reyes is a welterweight.\n\nSketch First Order Logic Statement: IsWelterWeight(carlosReyes)\n\nPredicates:\n\"\"\"\nDoesOlympicSport(x)\nGoesToOlympicGames(x)\nIsHeavyWeight(x)\nIsOlympian(x)\nIsWelterWeight(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "IsWelterWeight(carlosReyes)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Carlos Reyes went to the Olympics.\n\nSketch First Order Logic Statement: GoesToOlympicGames(carlosReyes)\n\nPredicates:\n\"\"\"\nDoesOlympicSport(x)\nGoesToOlympicGames(x)\nIsHeavyWeight(x)\nIsOlympian(x)\nIsWelterWeight(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "GoesToOlympicGames(carlosReyes)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Carlos Reyes went to the Olympics.\n\nSketch First Order Logic Statement: GoesToOlympicGames(carlosReyes)\n\nPredicates:\n\"\"\"\nDoesOlympicSport(x)\nGoesToOlympicGames(x)\nIsHeavyWeight(x)\nIsOlympian(x)\nIsWelterWeight(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "GoesToOlympicGames(carlosReyes)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All young teenage girls who attend college are big fans of pop bands and singers.\n\nSketch First Order Logic Statement: ∀x (CollegeTeen(x) → Ambitious(x))\n\nPredicates:\n\"\"\"\nMoveOut(x)\nDecor(x)\nFans(x)\nCollegeTeen(x)\nAmbitious(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (CollegeTeen(x) → Ambitious(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people are big fans of pop bands and singers, then they have a lot of decorations in their room.\n\nSketch First Order Logic Statement:  (Fans(x) → Decor(x))\n\nPredicates:\n\"\"\"\nMoveOut(x)\nDecor(x)\nFans(x)\nCollegeTeen(x)\nAmbitious(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Fans(x) → Decor(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All young teenage girls who attend college are big fans of pop bands and singers.\n\nSketch First Order Logic Statement:  (CollegeTeen(x) → Ambitious(x))\n\nPredicates:\n\"\"\"\nMoveOut(x)\nDecor(x)\nFans(x)\nCollegeTeen(x)\nAmbitious(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (CollegeTeen(x) → Ambitious(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people have a lot of decorations in their room, they cannot pack and move out of their rooms very easily.\n\nSketch First Order Logic Statement: ∀x (Decor(x) → ¬MoveOut(x))\n\nPredicates:\n\"\"\"\nMoveOut(x)\nDecor(x)\nFans(x)\nCollegeTeen(x)\nAmbitious(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Decor(x) → ¬MoveOut(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n\nSketch First Order Logic Statement:  (Ambitious(x) → MoveOut(x))\n\nPredicates:\n\"\"\"\nMoveOut(x)\nDecor(x)\nFans(x)\nCollegeTeen(x)\nAmbitious(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Ambitious(x) → MoveOut(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.\n\nSketch First Order Logic Statement: Ambitious(sam) → Fans(sam)\n\nPredicates:\n\"\"\"\nMoveOut(x)\nDecor(x)\nFans(x)\nCollegeTeen(x)\nAmbitious(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Ambitious(sam) → Fans(sam)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people have high ambitions and future career goals, then they can pack and move out of their rooms very easily.\n\nSketch First Order Logic Statement:  (Ambitious(x) → MoveOut(x))\n\nPredicates:\n\"\"\"\nMoveOut(x)\nDecor(x)\nFans(x)\nCollegeTeen(x)\nAmbitious(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Ambitious(x) → MoveOut(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All young teenage girls who attend college are big fans of pop bands and singers.\n\nSketch First Order Logic Statement:  (CollegeTeen(x) → ∀x  Ambitious(x))\n\nPredicates:\n\"\"\"\nMoveOut(x)\nDecor(x)\nFans(x)\nCollegeTeen(x)\nAmbitious(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (CollegeTeen(x) → Ambitious(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If Sam has high ambitions and future career goals, then Sam is a big fan of pop bands and singers.\n\nSketch First Order Logic Statement: Ambitious(sam) → Fans(sam)\n\nPredicates:\n\"\"\"\nMoveOut(x)\nDecor(x)\nFans(x)\nCollegeTeen(x)\nAmbitious(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Ambitious(sam) → Fans(sam)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Bob loves shrieking and swearing.\n\nSketch First Order Logic Statement: Shriek(bob) ∧ Swear(bob)\n\nPredicates:\n\"\"\"\nSwear(x)\nPunished(x)\nGentleman(x)\nNice(x)\nShriek(x)\nTalk(x, y)\nStudent(x)\nMan(x)\nTeacher(x)\nSuit(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Shriek(bob) ∧ Swear(bob)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A student who loves shrieking will be punished.\n\nSketch First Order Logic Statement: ∀x (Student(x) ∧ Shriek(x) → Punished(x))\n\nPredicates:\n\"\"\"\nSwear(x)\nPunished(x)\nGentleman(x)\nNice(x)\nShriek(x)\nTalk(x, y)\nStudent(x)\nMan(x)\nTeacher(x)\nSuit(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Student(x) ∧ Shriek(x) → Punished(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All gentlemen are in a suit.\n\nSketch First Order Logic Statement: ∀x (Gentleman(x) → Suit(x))\n\nPredicates:\n\"\"\"\nSwear(x)\nPunished(x)\nGentleman(x)\nNice(x)\nShriek(x)\nTalk(x, y)\nStudent(x)\nMan(x)\nTeacher(x)\nSuit(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Gentleman(x) → Suit(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People who can catch balls are good wide receivers. \n\nSketch First Order Logic Statement:  ∃y (CanCatch(x, y) ∧ Ball(y) → Good(x, widereciever))\n\nPredicates:\n\"\"\"\nGood(x, y)\nIn(x, y)\nCanCatch(x, y)\nCanCatchWith(x, y)\nProfessional(x)\nWideReciever(x)\nFootball(x)\nBall(x)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∃y (CanCatch(x, y) ∧ Ball(y) → Good(x, widereciever))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Quincy McDuffie is an American professional wide receiver in Canadian Football.\n\nSketch First Order Logic Statement: American(quincymcduffie) ∧ Professional(quincymcduffie) ∧ WideReciever(quincymcduffie) ∧ Inquincymcduffie, canadianfootball\n\nPredicates:\n\"\"\"\nGood(x, y)\nIn(x, y)\nCanCatch(x, y)\nCanCatchWith(x, y)\nProfessional(x)\nWideReciever(x)\nFootball(x)\nBall(x)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "American(quincymcduffie) ∧ Professional(quincymcduffie) ∧ WideReciever(quincymcduffie) ∧ In(quincymcduffie, canadianfootball)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Good wide receivers can catch with both their left and right hand.\n\nSketch First Order Logic Statement: ∀x (Good(x, widereciever) → CanCatchWithx, lefthand) ∧ CanCatchWith(x, righthand)\n\nPredicates:\n\"\"\"\nGood(x, y)\nIn(x, y)\nCanCatch(x, y)\nCanCatchWith(x, y)\nProfessional(x)\nWideReciever(x)\nFootball(x)\nBall(x)\nAmerican(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Good(x, widereciever) → CanCatchWith(x, lefthand) ∧ CanCatchWith(x, righthand))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: France is a European country.\n\nSketch First Order Logic Statement: Locate(france, europe)\n\nPredicates:\n\"\"\"\nPrecede(x, y)\nLocate(x, y)\nSituate(x, y)\nServe(x, y)\nRailwayStation(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Locate(france, europe)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Boves is served by regional TER Hauts-de-France trains.\n\nSketch First Order Logic Statement: Serve(hautsDeFrance, boves)\n\nPredicates:\n\"\"\"\nPrecede(x, y)\nLocate(x, y)\nSituate(x, y)\nServe(x, y)\nRailwayStation(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Serve(hautsDeFrance, boves)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The preceding station of Dommartin is Boves.\n\nSketch First Order Logic Statement: Precede(dommartin, boves)\n\nPredicates:\n\"\"\"\nPrecede(x, y)\nLocate(x, y)\nSituate(x, y)\nServe(x, y)\nRailwayStation(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Precede(dommartin, boves)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Edwin Smith was also known as Ted Smith.\n\nSketch First Order Logic Statement: KnownAs(edwinsmith, tedsmith)\n\nPredicates:\n\"\"\"\nServedIn(x, y)\nSheetmetalWorker(x)\nKnownAs(x, y)\nRower(x)\nWentTo(x, y)\nLocatedIn(x, y)\nFrom(x, y)\nServedWith(x, y)\nOwned(x, y)\nSergeant(x)\nRan(x, y)\nBuisness(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "KnownAs(edwinsmith, tedsmith)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Edwin Smith was a sergeant who served with the New Zealand 24th battalion in Italy and Egypt.\n\nSketch First Order Logic Statement: Sergeant(edwinsmith) ∧ ServedWith(edwinsmith, newzealand24thbattalion) ∧ ServedIn(edwinsmith, italy) ∧ ServedIn(edwinsmith, egypt)\n\nPredicates:\n\"\"\"\nServedIn(x, y)\nSheetmetalWorker(x)\nKnownAs(x, y)\nRower(x)\nWentTo(x, y)\nLocatedIn(x, y)\nFrom(x, y)\nServedWith(x, y)\nOwned(x, y)\nSergeant(x)\nRan(x, y)\nBuisness(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Sergeant(edwinsmith) ∧ ServedWith(edwinsmith, newzealand24thbattalion) ∧ ServedIn(edwinsmith, italy) ∧ ServedIn(edwinsmith, egypt)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Edwin Smith went to Rose Road Primary School, located in Grey Lynn.\n\nSketch First Order Logic Statement: WentTo(edwinsmith, roseroadprimaryschool) ∧ LocatedIn(roseroadprimaryschool, greylynn)\n\nPredicates:\n\"\"\"\nServedIn(x, y)\nSheetmetalWorker(x)\nKnownAs(x, y)\nRower(x)\nWentTo(x, y)\nLocatedIn(x, y)\nFrom(x, y)\nServedWith(x, y)\nOwned(x, y)\nSergeant(x)\nRan(x, y)\nBuisness(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "WentTo(edwinsmith, roseroadprimaryschool) ∧ LocatedIn(roseroadprimaryschool, greylynn)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Broadway Sheetmetals was a buisness that was ran and owned by Edwin Smith, who was a sheetmetal worker.\n\nSketch First Order Logic Statement: Buisness(broadwaysheetmetals) ∧ Ran(edwinsmith, broadwaysheetmetals) ∧ Owned(edwinsmith, broadwaysheetmetals) ∧ SheetmetalWorker(edwinsmith)\n\nPredicates:\n\"\"\"\nServedIn(x, y)\nSheetmetalWorker(x)\nKnownAs(x, y)\nRower(x)\nWentTo(x, y)\nLocatedIn(x, y)\nFrom(x, y)\nServedWith(x, y)\nOwned(x, y)\nSergeant(x)\nRan(x, y)\nBuisness(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Buisness(broadwaysheetmetals) ∧ Ran(edwinsmith, broadwaysheetmetals) ∧ Owned(edwinsmith, broadwaysheetmetals) ∧ SheetmetalWorker(edwinsmith)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A werewolf is a human that can turn into a wolf.\n\nSketch First Order Logic Statement: ∀x (Human(x) ∧ CanTurnInto(x, wolf) → Werewolf(x))\n\nPredicates:\n\"\"\"\nHuman(x)\nScratchedBy(x, y)\nBittenBy(x, y)\nAttackedBy(x, y)\nWerewolf(x)\nCanTurnInto(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Human(x) ∧ CanTurnInto(x, wolf) → Werewolf(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If someone has been scratched or bitten, they have been attacked.\n\nSketch First Order Logic Statement: ∀x  (BittenBy(x, y) ∨ ScratchedBy(x, y)) → AttackedBy(x,y)\n\nPredicates:\n\"\"\"\nHuman(x)\nScratchedBy(x, y)\nBittenBy(x, y)\nAttackedBy(x, y)\nWerewolf(x)\nCanTurnInto(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∃y (BittenBy(x, y) ∨ ScratchedBy(x, y)) → AttackedBy(x,y)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A werewolf is a human that can turn into a wolf.\n\nSketch First Order Logic Statement: ∀x (Human(x) ∧ CanTurnInto(x, wolf) → Werewolf(x))\n\nPredicates:\n\"\"\"\nHuman(x)\nScratchedBy(x, y)\nBittenBy(x, y)\nAttackedBy(x, y)\nWerewolf(x)\nCanTurnInto(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Human(x) ∧ CanTurnInto(x, wolf) → Werewolf(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Musoke fought Yakovlev at UFC Fight Night.\n\nSketch First Order Logic Statement: Event(uFCFightNight) → Fight(musoke, yakovlev)\n\nPredicates:\n\"\"\"\nEvent(x)\nInjured(x)\nFight(x, y)\nMixedMartial(x)\nScheduledToFight(x, y)\nFightInUFC(x)\nSweden(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Event(uFCFightNight) → Fight(musoke, yakovlev)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Jung was injured at UFC Fight Night.\n\nSketch First Order Logic Statement: Event(uFCFightNight) → Injured(jung)\n\nPredicates:\n\"\"\"\nEvent(x)\nInjured(x)\nFight(x, y)\nMixedMartial(x)\nScheduledToFight(x, y)\nFightInUFC(x)\nSweden(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Event(uFCFightNight) → Injured(jung)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Jung was injured at UFC Fight Night.\n\nSketch First Order Logic Statement: Event(uFCFightNight) → Injured(jung)\n\nPredicates:\n\"\"\"\nEvent(x)\nInjured(x)\nFight(x, y)\nMixedMartial(x)\nScheduledToFight(x, y)\nFightInUFC(x)\nSweden(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Event(uFCFightNight) → Injured(jung)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Jung was injured at UFC Fight Night.\n\nSketch First Order Logic Statement: Event(uFCFightNight) → Injured(jung)\n\nPredicates:\n\"\"\"\nEvent(x)\nInjured(x)\nFight(x, y)\nMixedMartial(x)\nScheduledToFight(x, y)\nFightInUFC(x)\nSweden(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Event(uFCFightNight) → Injured(jung)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If coke is not apple juice, then coke is not edible.\n\nSketch First Order Logic Statement: ¬AppleJuice(coke) → ¬Edible(coke)\n\nPredicates:\n\"\"\"\nJuice(x)\nOrangeJuice(x)\nEdible(x)\nAppleJuice(x)\nSweet(x)\nDrink(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "¬AppleJuice(coke) → ¬Edible(coke)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All apple juice is sweet.\n\nSketch First Order Logic Statement: ∀x (AppleJuice(x) → Sweet(x))\n\nPredicates:\n\"\"\"\nJuice(x)\nOrangeJuice(x)\nEdible(x)\nAppleJuice(x)\nSweet(x)\nDrink(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (AppleJuice(x) → Sweet(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A juice is either an orange juice or an apple juice.\n\nSketch First Order Logic Statement:  (OrangeJuice(x) ∨ ∀x  AppleJuice(x))\n\nPredicates:\n\"\"\"\nJuice(x)\nOrangeJuice(x)\nEdible(x)\nAppleJuice(x)\nSweet(x)\nDrink(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (OrangeJuice(x) ∨ AppleJuice(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Spanish Nationalists killed anyone who they opposed and were popular.\n\nSketch First Order Logic Statement: ∀x (Opposed(nationalists, x) ∧ Popular(x) → Killed(nationalists, x))\n\nPredicates:\n\"\"\"\nSupportPopulists(x)\nKilled(x, y)\nTalentedPoet(x)\nPopular(x)\nOpposed(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Opposed(nationalists, x) ∧ Popular(x) → Killed(nationalists, x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Spanish Nationalists opposed anyone who supported the Popular Front\n\nSketch First Order Logic Statement: ∀x (SupportPopulists(x) → Opposed(nationalists, x))\n\nPredicates:\n\"\"\"\nSupportPopulists(x)\nKilled(x, y)\nTalentedPoet(x)\nPopular(x)\nOpposed(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (SupportPopulists(x) → Opposed(nationalists, x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Franny either both grew up with extremely busy parents who did not have time to pack her lunch and has consistent everyday routines and like sticking to a solid schedule, or she neither grew up with extremely busy parents who did not have time to pack her lunch nor has consistent everyday routines and likes sticking to a schedule.  \n\nSketch First Order Logic Statement: (BusyParents(franny) ∧ Consistent(franny)) ⊕ (¬BusyParents(franny) ∧ ¬Consistent(franny))\n\nPredicates:\n\"\"\"\nDentist(x)\nBusyParents(x)\nConsistent(x)\nCocaCola(x)\nErratic(x)\nKombucha(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "(BusyParents(franny) ∧ Consistent(franny)) ⊕ (¬BusyParents(franny) ∧ ¬Consistent(franny))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people drink Coca-Cola or Pepsi products every day, then they grew up with extremely busy parents who did not have time to pack them lunch.\n\nSketch First Order Logic Statement:  (CocaCola(x) → BusyParents(x))\n\nPredicates:\n\"\"\"\nDentist(x)\nBusyParents(x)\nConsistent(x)\nCocaCola(x)\nErratic(x)\nKombucha(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (CocaCola(x) → BusyParents(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If people have erratic and diverse eating habits, then they do not have consistent everyday routines and like sticking to a solid schedule.\n\nSketch First Order Logic Statement: ∀x (Erratic(x) → ¬Consistentx)\n\nPredicates:\n\"\"\"\nDentist(x)\nBusyParents(x)\nConsistent(x)\nCocaCola(x)\nErratic(x)\nKombucha(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Erratic(x) → ¬Consistent(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: James subscribes to AMC A List.\n\nSketch First Order Logic Statement: SubscribedTo(ja(mes, amcal)ist)\n\nPredicates:\n\"\"\"\nNoFees(x)\nPrefer(x, y)\nCinemaEveryWeek(x)\nWatchTVIn(x, y)\nSubscribedTo(x, y)\nThreeMovies(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "SubscribedTo(james, amcalist)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: James subscribes to AMC A List.\n\nSketch First Order Logic Statement: SubscribedTo(james, amcalist)\n\nPredicates:\n\"\"\"\nNoFees(x)\nPrefer(x, y)\nCinemaEveryWeek(x)\nWatchTVIn(x, y)\nSubscribedTo(x, y)\nThreeMovies(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "SubscribedTo(james, amcalist)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Customers who prefer TV series will not watch TV series in cinemas.\n\nSketch First Order Logic Statement: ∀x (Prefer(x, tvseries) → (¬WatchTVIn(x, cinem)as))\n\nPredicates:\n\"\"\"\nNoFees(x)\nPrefer(x, y)\nCinemaEveryWeek(x)\nWatchTVIn(x, y)\nSubscribedTo(x, y)\nThreeMovies(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Prefer(x, tvseries) → ¬WatchTVIn(x, cinemas))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Bulbophyllum attenuatum is in the genus bulbophyllum.\n\nSketch First Order Logic Statement: InGenus(bulbophyllumattenuatum, bulbophyllum)\n\nPredicates:\n\"\"\"\nOrchid(x)\nInGenus(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "InGenus(bulbophyllumattenuatum, bulbophyllum)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: There are eight federal districts of Russia: Central, Northwestern, Southern, North Caucasian, Volga, Ural, Siberian and Far Eastern.\n\nSketch First Order Logic Statement: FederalDistrictOfRussia(central) ∨ FederalDistrictOfRussia(northwestern) ∨ FederalDistrictOfRussia(southern) ∨ FederalDistrictOfRussia(northcaucasian) ∨ FederalDistrictOfRussia(volga) ∨ FederalDistrictOfRussia(ural) ∨ FederalDistrictOfRussia(siberian) ∨ FederalDistrictOfRussia(fareastern)\n\nPredicates:\n\"\"\"\nLargestAreaIn(x)\nLargestPopulationIn(x)\nFederalDistrictOfRussia(x)\nEstablishedIn(x, y)\nAdministrativeCenterOf(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "FederalDistrictOfRussia(central) ∨ FederalDistrictOfRussia(northwestern) ∨ FederalDistrictOfRussia(southern) ∨ FederalDistrictOfRussia(northcaucasian) ∨ FederalDistrictOfRussia(volga) ∨ FederalDistrictOfRussia(ural) ∨ FederalDistrictOfRussia(siberian) ∨ FederalDistrictOfRussia(fareastern)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The Far Eastern federal district has the largest area among all federal districts in Russia.\n\nSketch First Order Logic Statement: FederalDistrictOfRussia(fareastern) ∧ LargestAreaIn(fareastern)\n\nPredicates:\n\"\"\"\nLargestAreaIn(x)\nLargestPopulationIn(x)\nFederalDistrictOfRussia(x)\nEstablishedIn(x, y)\nAdministrativeCenterOf(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "FederalDistrictOfRussia(fareastern) ∧ LargestAreaIn(fareastern)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Vladivostok is the administrative center of the Far Eastern federal district.\n\nSketch First Order Logic Statement: AdministrativeCenterOfvladivostok, fareastern\n\nPredicates:\n\"\"\"\nLargestAreaIn(x)\nLargestPopulationIn(x)\nFederalDistrictOfRussia(x)\nEstablishedIn(x, y)\nAdministrativeCenterOf(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "AdministrativeCenterOf(vladivostok, fareastern)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All cancers are malignant tumors.\n\nSketch First Order Logic Statement: ∀x (Cancer(x) → MalignantTumor(x))\n\nPredicates:\n\"\"\"\nCancer(x)\nCanBeTreatedAtHome(x)\nMalignantTumor(x)\nHavingACold(x)\nColorectalCancer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Cancer(x) → MalignantTumor(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All colorectal cancer is cancer.\n\nSketch First Order Logic Statement: ∀x (ColorectalCancer(x) → Cancer(x))\n\nPredicates:\n\"\"\"\nCancer(x)\nCanBeTreatedAtHome(x)\nMalignantTumor(x)\nHavingACold(x)\nColorectalCancer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (ColorectalCancer(x) → Cancer(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Having a cold can be treated at home.\n\nSketch First Order Logic Statement:  (HavingACold(x) → CanBeTreatedAtHome(x))\n\nPredicates:\n\"\"\"\nCancer(x)\nCanBeTreatedAtHome(x)\nMalignantTumor(x)\nHavingACold(x)\nColorectalCancer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (HavingACold(x) → CanBeTreatedAtHome(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No malignant tumor can be treated at home.\n\nSketch First Order Logic Statement:  (MalignantTumor(x) → ¬CanBeTreatedAtHome(x))\n\nPredicates:\n\"\"\"\nCancer(x)\nCanBeTreatedAtHome(x)\nMalignantTumor(x)\nHavingACold(x)\nColorectalCancer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (MalignantTumor(x) → ¬CanBeTreatedAtHome(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Having a cold can be treated at home.\n\nSketch First Order Logic Statement:  (HavingACold(x) → CanBeTreatedAtHome(x))\n\nPredicates:\n\"\"\"\nCancer(x)\nCanBeTreatedAtHome(x)\nMalignantTumor(x)\nHavingACold(x)\nColorectalCancer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (HavingACold(x) → CanBeTreatedAtHome(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: No malignant tumor can be treated at home.\n\nSketch First Order Logic Statement: ∀x (MalignantTumor(x) → ¬CanBeTreatedAtHome(x))\n\nPredicates:\n\"\"\"\nCancer(x)\nCanBeTreatedAtHome(x)\nMalignantTumor(x)\nHavingACold(x)\nColorectalCancer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (MalignantTumor(x) → ¬CanBeTreatedAtHome(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: I should not worry about things outside of my control.\n\nSketch First Order Logic Statement:  (OutsideControl(x) → ∀x  ¬ShouldWorry(x))\n\nPredicates:\n\"\"\"\nShouldWorry(x)\nOutsideControl(x)\nTraffic(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (OutsideControl(x) → ¬ShouldWorry(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Roversi is an Italian surname.\n\nSketch First Order Logic Statement: ∀x (UseAsSurname(x, roversi) → UseItalianSurname(x))\n\nPredicates:\n\"\"\"\nPhotographer(x)\nUseAsSurname(x, y)\nProfessional(x)\nUseItalianSurname(x)\nAmateur(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (UseAsSurname(x, roversi) → UseItalianSurname(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Paolo Roversi is a photographer.\n\nSketch First Order Logic Statement: Photographer(paolo)\n\nPredicates:\n\"\"\"\nPhotographer(x)\nUseAsSurname(x, y)\nProfessional(x)\nUseItalianSurname(x)\nAmateur(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Photographer(paolo)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Alba Roversi uses Roversi as a surname.\n\nSketch First Order Logic Statement: UseAsSurname(alba, roversi)\n\nPredicates:\n\"\"\"\nPhotographer(x)\nUseAsSurname(x, y)\nProfessional(x)\nUseItalianSurname(x)\nAmateur(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "UseAsSurname(alba, roversi)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Zaha Hadid is a British-Iraqi architect, artist and designer.\n\nSketch First Order Logic Statement: British-IraqiArchitect(zahaHadid)\n\nPredicates:\n\"\"\"\nIraqiArchitect(x)\nVisitingprofessor(x, y)\nBornIn(x, y)\nAspiringArchitectureStudent(x)\nPlansToApplyTo(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "British-IraqiArchitect(zahaHadid)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Hadid was a visiting professor of Architectural Design at the Yale School of Architecture.\n\nSketch First Order Logic Statement: VisitingprofessorzahaHadid, yaleSchoolofArchitecture\n\nPredicates:\n\"\"\"\nIraqiArchitect(x)\nVisitingprofessor(x, y)\nBornIn(x, y)\nAspiringArchitectureStudent(x)\nPlansToApplyTo(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Visitingprofessor(zahaHadid, yaleSchoolofArchitecture)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Max is an aspiring architecture student, and he plans to apply to Yale School of Architecture. \n\nSketch First Order Logic Statement: AspiringArchitectureStudent(max) ∧ PlansToApplyTo(max, yaleSchoolofArchitecture)\n\nPredicates:\n\"\"\"\nIraqiArchitect(x)\nVisitingprofessor(x, y)\nBornIn(x, y)\nAspiringArchitectureStudent(x)\nPlansToApplyTo(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "AspiringArchitectureStudent(max) ∧ PlansToApplyTo(max, yaleSchoolofArchitecture)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Zaha Hadid is a British-Iraqi architect, artist and designer.\n\nSketch First Order Logic Statement: British-IraqiArchitect(zahaHadid)\n\nPredicates:\n\"\"\"\nIraqiArchitect(x)\nVisitingprofessor(x, y)\nBornIn(x, y)\nAspiringArchitectureStudent(x)\nPlansToApplyTo(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "British-IraqiArchitect(zahaHadid)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a technique provides a spatial resolution of brains, then it is a measurement of brain activity. \n\nSketch First Order Logic Statement:  ∀x (ProvidesSpatialResolutionOfBrains(x) → MeasurementOfBrainActivity(x)) \n\nPredicates:\n\"\"\"\nUsedByNeuroscienceResearchers(x)\nMeasurementOfBrainActivity(x)\nNoninvasiveNeuroimagingTechnique(x)\nInvasiveNeuroimagingTechnique(x)\nProvidesSpatialResolutionOfBrains(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (ProvidesSpatialResolutionOfBrains(x) → MeasurementOfBrainActivity(x)) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Something is either an invasive neuroimaging technique or a noninvasive neuroimaging technique. \n\nSketch First Order Logic Statement:  (InvasiveNeuroimagingTechnique(x) ∨ ∀x  NoninvasiveNeuroimagingTechnique(x)) \n\nPredicates:\n\"\"\"\nUsedByNeuroscienceResearchers(x)\nMeasurementOfBrainActivity(x)\nNoninvasiveNeuroimagingTechnique(x)\nInvasiveNeuroimagingTechnique(x)\nProvidesSpatialResolutionOfBrains(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (InvasiveNeuroimagingTechnique(x) ∨ NoninvasiveNeuroimagingTechnique(x)) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If a technique provides a spatial resolution of brains, then it is a measurement of brain activity. \n\nSketch First Order Logic Statement:  ∀x (ProvidesSpatialResolutionOfBrains(x) → MeasurementOfBrainActivity(x)) \n\nPredicates:\n\"\"\"\nUsedByNeuroscienceResearchers(x)\nMeasurementOfBrainActivity(x)\nNoninvasiveNeuroimagingTechnique(x)\nInvasiveNeuroimagingTechnique(x)\nProvidesSpatialResolutionOfBrains(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (ProvidesSpatialResolutionOfBrains(x) → MeasurementOfBrainActivity(x)) "}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All measurements of brain activity are used by neuroscience researchers.\n\nSketch First Order Logic Statement:  ∀x (MeasurementOfBrainActivityx) → UsedByNeuroscienceResearchers(x)\n\nPredicates:\n\"\"\"\nUsedByNeuroscienceResearchers(x)\nMeasurementOfBrainActivity(x)\nNoninvasiveNeuroimagingTechnique(x)\nInvasiveNeuroimagingTechnique(x)\nProvidesSpatialResolutionOfBrains(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": " ∀x (MeasurementOfBrainActivity(x) → UsedByNeuroscienceResearchers(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All those providing a tutorial session at the conference are invited to join the club. \n\nSketch First Order Logic Statement: ∀x (Tutorial(x) → Invited(x))\n\nPredicates:\n\"\"\"\nInvited(x)\nSouvenirs(x)\nHappyCommunicate(x)\nMeals(x)\nInvitedTakePhoto(x)\nPresent(x)\nInPerson(x)\nTutorial(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Tutorial(x) → Invited(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Either present their work at the conference or provide a tutorial session at the conference. \n\nSketch First Order Logic Statement: ∀x ( Present(x) ∨ Tutorial(x))\n\nPredicates:\n\"\"\"\nInvited(x)\nSouvenirs(x)\nHappyCommunicate(x)\nMeals(x)\nInvitedTakePhoto(x)\nPresent(x)\nInPerson(x)\nTutorial(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ( Present(x) ∨ Tutorial(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All provided with delicious meals are happy to communicate with each other during the dinner. \n\nSketch First Order Logic Statement:  (Meals(x) → HappyCommunicate(x))\n\nPredicates:\n\"\"\"\nInvited(x)\nSouvenirs(x)\nHappyCommunicate(x)\nMeals(x)\nInvitedTakePhoto(x)\nPresent(x)\nInPerson(x)\nTutorial(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Meals(x) → HappyCommunicate(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All invited to join the club are provided with delicious meals. \n\nSketch First Order Logic Statement:  (Invited(x) → ∀x  Meals(x))\n\nPredicates:\n\"\"\"\nInvited(x)\nSouvenirs(x)\nHappyCommunicate(x)\nMeals(x)\nInvitedTakePhoto(x)\nPresent(x)\nInPerson(x)\nTutorial(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Invited(x) → Meals(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: All provided with delicious meals are invited to take a photo with the audience. \n\nSketch First Order Logic Statement: ∀x (Meals(x) → InvitedTakePhoto(x))\n\nPredicates:\n\"\"\"\nInvited(x)\nSouvenirs(x)\nHappyCommunicate(x)\nMeals(x)\nInvitedTakePhoto(x)\nPresent(x)\nInPerson(x)\nTutorial(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Meals(x) → InvitedTakePhoto(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The USS Salem is a museum ship.\n\nSketch First Order Logic Statement: MuseumShip(usssale(m))\n\nPredicates:\n\"\"\"\nHeavyCruiser(x)\nMuseumShip(x)\nLastHeavyCruiserToEnterService(x)\nBuiltFor(x, y)\nServedIn(x, y)\nOpenToPublic(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "MuseumShip(usssalem)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Museum ships are open to the public.\n\nSketch First Order Logic Statement:  (MuseumShip(x) → ∀x  OpenToPublic(x))\n\nPredicates:\n\"\"\"\nHeavyCruiser(x)\nMuseumShip(x)\nLastHeavyCruiserToEnterService(x)\nBuiltFor(x, y)\nServedIn(x, y)\nOpenToPublic(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (MuseumShip(x) → OpenToPublic(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: The USS Salem is a heavy cruiser built for the United States navy.\n\nSketch First Order Logic Statement: HeavyCruiser(usssalem) ∧ BuiltFor(usssalem, unitedstatesnavy)\n\nPredicates:\n\"\"\"\nHeavyCruiser(x)\nMuseumShip(x)\nLastHeavyCruiserToEnterService(x)\nBuiltFor(x, y)\nServedIn(x, y)\nOpenToPublic(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "HeavyCruiser(usssalem) ∧ BuiltFor(usssalem, unitedstatesnavy)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Some ships that are quiet and good at sea have powerful steam turbine engines.\n\nSketch First Order Logic Statement: ∃x (Quiet(x) ∧ GoodSea(x) ∧ SteamTurbine(x))\n\nPredicates:\n\"\"\"\nStabilizers(x)\nNorweigian(x)\nSteamTurbine(x)\nGoodSea(x)\nOnlyOnShips(x)\nCargoVessel(x)\nQuiet(x)\nPassenger(x)\nTSLeda(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∃x (Quiet(x) ∧ GoodSea(x) ∧ SteamTurbine(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Stabilizers are mechanical devices that are only on ships that have powerful steam turbine engines.\n\nSketch First Order Logic Statement:  (Stabilizers(x) → OnlyOnShips(x) ∧ SteamTurbine(x))\n\nPredicates:\n\"\"\"\nStabilizers(x)\nNorweigian(x)\nSteamTurbine(x)\nGoodSea(x)\nOnlyOnShips(x)\nCargoVessel(x)\nQuiet(x)\nPassenger(x)\nTSLeda(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Stabilizers(x) → OnlyOnShips(x) ∧ SteamTurbine(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement:  To be a good passenger and cargo vessel, ships must be quiet and good at sea.\n\nSketch First Order Logic Statement: ∀x (Passenger(x) ∧ CargoVessel(x) → Qu(iet(x) ∧ GoodSea(x)))\n\nPredicates:\n\"\"\"\nStabilizers(x)\nNorweigian(x)\nSteamTurbine(x)\nGoodSea(x)\nOnlyOnShips(x)\nCargoVessel(x)\nQuiet(x)\nPassenger(x)\nTSLeda(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Passenger(x) ∧ CargoVessel(x) → Quiet(x) ∧ GoodSea(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Rosa was born in Santiago. \n\nSketch First Order Logic Statement: Born(rosa, santiago)\n\nPredicates:\n\"\"\"\nConstructionSite(x)\nDaughter(x, y)\nBuildingContractor(x)\nLargestCity(x, y)\nBorn(x, y)\nWife(x, y)\nChilean(x)\nOversee(x, y)\nCapital(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Born(rosa, santiago)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Rosa was born in Santiago. \n\nSketch First Order Logic Statement: Born(rosa, santiago)\n\nPredicates:\n\"\"\"\nConstructionSite(x)\nDaughter(x, y)\nBuildingContractor(x)\nLargestCity(x, y)\nBorn(x, y)\nWife(x, y)\nChilean(x)\nOversee(x, y)\nCapital(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Born(rosa, santiago)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: A building contractor is responsible for the day-to-day oversight of a construction site. \n\nSketch First Order Logic Statement: ∀x ∃y (BuildingContractor(x) ∧ ConstructionSite(y) → Oversee(x, y()))\n\nPredicates:\n\"\"\"\nConstructionSite(x)\nDaughter(x, y)\nBuildingContractor(x)\nLargestCity(x, y)\nBorn(x, y)\nWife(x, y)\nChilean(x)\nOversee(x, y)\nCapital(x, y)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∃y (BuildingContractor(x) ∧ ConstructionSite(y) → Oversee(x, y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Tyga is a rapper.\n\nSketch First Order Logic Statement: IsRapper(tyga)\n\nPredicates:\n\"\"\"\nReleasedAlbum(x, y)\nIsOperaSinger(x)\nIsRapper(x)\nIsRapAlbum(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "IsRapper(tyga)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Rappers are not opera singers.\n\nSketch First Order Logic Statement: ∀x (IsRapper(x) → ¬IsOperaSi(nger(x)))\n\nPredicates:\n\"\"\"\nReleasedAlbum(x, y)\nIsOperaSinger(x)\nIsRapper(x)\nIsRapAlbum(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (IsRapper(x) → ¬IsOperaSinger(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Tyga is a rapper.\n\nSketch First Order Logic Statement: IsRapper(tyga)\n\nPredicates:\n\"\"\"\nReleasedAlbum(x, y)\nIsOperaSinger(x)\nIsRapper(x)\nIsRapAlbum(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "IsRapper(tyga)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Deborah Wallace co-produced Gasland.\n\nSketch First Order Logic Statement: Co-Produced(deborahwallace, gasland)\n\nPredicates:\n\"\"\"\nActress(x)\nPlaywright(x)\nFrom(x, y)\nProduced(x, y)\nBornIn(x, y)\nPlay(x)\nBasedOn(x, y)\nProducer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Co-Produced(deborahwallace, gasland)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Deborah Wallace co-produced Gasland.\n\nSketch First Order Logic Statement: Co-Produced(deborahwallace, gasland)\n\nPredicates:\n\"\"\"\nActress(x)\nPlaywright(x)\nFrom(x, y)\nProduced(x, y)\nBornIn(x, y)\nPlay(x)\nBasedOn(x, y)\nProducer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "Co-Produced(deborahwallace, gasland)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Deborah Wallace is a Scottish born actress, playwright and producer.\n\nSketch First Order Logic Statement: BornIn(deborahwallace, scotland) ∧ Actress(deborahwallace) ∧ Playwright(deborahwallace) ∧ Producer(deborahwallace)\n\nPredicates:\n\"\"\"\nActress(x)\nPlaywright(x)\nFrom(x, y)\nProduced(x, y)\nBornIn(x, y)\nPlay(x)\nBasedOn(x, y)\nProducer(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "BornIn(deborahwallace, scotland) ∧ Actress(deborahwallace) ∧ Playwright(deborahwallace) ∧ Producer(deborahwallace)"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Everything that eats a lot needs a large territory.\n\nSketch First Order Logic Statement:  (EatsALot(x) → ∀x  NeedsLargeTerritory(x))\n\nPredicates:\n\"\"\"\nEatsALot(x)\nBear(x)\nNeedsLargeTerritory(x)\nBigAnimal(x)\nTravelFar(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (EatsALot(x) → NeedsLargeTerritory(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If an animal needs a large territory, then it travels far.\n\nSketch First Order Logic Statement:  (NeedsLargeTerritory(x) → ∀x  TravelFar(x))\n\nPredicates:\n\"\"\"\nEatsALot(x)\nBear(x)\nNeedsLargeTerritory(x)\nBigAnimal(x)\nTravelFar(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (NeedsLargeTerritory(x) → TravelFar(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If an animal needs a large territory, then it travels far.\n\nSketch First Order Logic Statement:  (NeedsLargeTerritory(x) → ∀x  TravelFar(x))\n\nPredicates:\n\"\"\"\nEatsALot(x)\nBear(x)\nNeedsLargeTerritory(x)\nBigAnimal(x)\nTravelFar(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (NeedsLargeTerritory(x) → TravelFar(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: If someone is evil, then they are ugly.\n\nSketch First Order Logic Statement:  (Evil(x) → Ugly(x))\n\nPredicates:\n\"\"\"\nBreakLaw(x)\nKind(x)\nCriminal(x)\nUgly(x)\nColdBlood(x)\nEvil(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Evil(x) → Ugly(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People are either kind or evil.\n\nSketch First Order Logic Statement: ∀x (Kind(x) (⊕) Evil(x))\n\nPredicates:\n\"\"\"\nBreakLaw(x)\nKind(x)\nCriminal(x)\nUgly(x)\nColdBlood(x)\nEvil(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Kind(x) ⊕ Evil(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: People are either kind or evil.\n\nSketch First Order Logic Statement: ∀x (Kind(x) ⊕ Evil(x))\n\nPredicates:\n\"\"\"\nBreakLaw(x)\nKind(x)\nCriminal(x)\nUgly(x)\nColdBlood(x)\nEvil(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (Kind(x) ⊕ Evil(x))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: French bands write songs in French or in English.\n\nSketch First Order Logic Statement: ∀x ∀y (Band(x) ∧ France((x) ∧ Make(x, y) → Fre)nchSong(y) ⊕ EnglishSong(y))\n\nPredicates:\n\"\"\"\nEnglishSong(x)\nMake(x, y)\nFrance(x)\nSynthPop(x)\nFrenchSong(x)\nBand(x)\nPopRock(x)\nIndiePop(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x ∀y (Band(x) ∧ France(x) ∧ Make(x, y) → FrenchSong(y) ⊕ EnglishSong(y))"}
{"instruction": "Given a Natural Language Statement, a Sketch First Order Logic Statement and a set of Predicates. \nThe task is to rewrite the Sketch using only the provided Predicates, and fix errors if any, following the provided examples.\n\nFor fixing the formulas:\n1. You SHOULD ONLY USE the predicates provided.\n2. You SHOULD USE the following logical operators: ⊕ (either or), ∨ (disjunction),\n∧ (conjunction), → (implication), ∀ (universal), ∃ (existential), ¬ (negation),\n↔ (equivalence)\n3. You SHOULD NEVER USE the following symbols for FOL: \"%\", \"≠\"\n4. The literals in FOL SHOULD ALWAYS have predicate and entities, e.g., \"Rounded(x, y)\" or \"City(guilin)\";\nexpressions such as \"y = a ∨ y = b\" or \"a ∧ b ∧ c\" are NOT ALLOWED\n5. The FOL rule SHOULD ACCURATELY reflect the meaning of the corresponding NL statement\n6. The FOL rule SHOULD BE AS CLOSE AS POSSIBLE to the provided sketch\n7. You SHOULD NEVER have an entity with the same name as a predicate, e.g., Chair(x) and Tall(chair) is NOT ALLOWED\n------\n", "input": "Natural Language Statement: Aside from indie pop, pop rock and synth-pop are two other genres of music.\n\nSketch First Order Logic Statement: ∀x (IndiePop(x) → ¬PopRock(x) ∧ ¬SynthPop(x))\n\nPredicates:\n\"\"\"\nEnglishSong(x)\nMake(x, y)\nFrance(x)\nSynthPop(x)\nFrenchSong(x)\nBand(x)\nPopRock(x)\nIndiePop(x)\n\"\"\"\n######\nValid FOL Statement:\n", "output": "∀x (IndiePop(x) → ¬PopRock(x) ∧ ¬SynthPop(x))"}
